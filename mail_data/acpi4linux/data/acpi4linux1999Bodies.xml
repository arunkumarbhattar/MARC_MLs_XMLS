<?xml version="1.0" encoding="utf-8"?>
<emails><email><emailId>19990323185258</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-23 18:52:58-0400</timestampReceived><subject>[Acpi] First Test</subject><body>

This is a test

</body></email><email><emailId>19990324110646</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-24 11:06:46-0400</timestampReceived><subject>Re: [Acpi] First Test</subject><body>

On Tue, 23 Mar 1999, Max Berger wrote:

&gt; This is a test

k3w1, DiZ w0RkZ!!! W3 r 31It3!!! :-)

   Simon

</body></email><email><emailId>19990326140646</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-26 14:06:46-0400</timestampReceived><subject>[Acpi] First concept (repost)</subject><body>

Hi,

I thought I'd repost the message again, since noone has replied or posted
anything else yet, and there a a few new subscribers...

---------- Forwarded message ----------
Date: Thu, 25 Mar 1999 13:19:37 +0100 (CET)
From: Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt;
To: acpi@phobos.fachschaften.tu-muenchen.de
Subject: [Acpi] First concept

Hi,

I think I should make a start now... :-)

The first thing to discuss is certainly the road map. I'd suggest
something like this:

1. See what modules will have to be written
2. Define interfaces between these modules, and an API.
3. Start writing code.

Step one will take at most two, step two about four to six and step three
an undefined number of weeks.

Yet -- I do not have a degree in project management, so probably this is
the wrong way. What do you think?

   Simon

</body></email><email><emailId>19990330125842</emailId><senderName>Jos Hulzink</senderName><senderEmail>josh@stack.nl</senderEmail><timestampReceived>1999-03-30 12:58:42-0400</timestampReceived><subject>Re: [Acpi] 1st mail (fwd)</subject><body>

On Tue, 30 Mar 1999, Max Berger wrote:

&gt; I think primary
&gt; goal should be to enable ACPI and to "emulate" apm. Using ACPI for
&gt; configuring plug'n'play devices is nice - but not a current issue

Okay.

&gt; I am currently looking for a way to transfer the tables to user space. Any
&gt; hint on how this is "best" done is welcome.

I'll first to get some  of your code working. When that works, I'll take a
look at a /proc structure. I already set up something like
this for another driver. The tables can stay in the kernel memory
area, there is no need to have full access in user space (in my eyes). All
the user might need is the ability to set timers, and get some state -
info (processor temperatures/ fan states, hard disk states, etc)

Jos

</body></email><email><emailId>19990330141747</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-30 14:17:47-0400</timestampReceived><subject>Re: [Acpi] ACPI driver proposed structure and what I meant by accessing tables from userspace</subject><body>

On Tue, 30 Mar 1999, Max Berger wrote:

&gt;  - The ACPI driver: 
&gt;   Should happen much later, could possibly be a module.

Unsure. You would need to add a device node (IMHO the only clean way to
on-demand insert a module) and said interface. On-demand loading is
necessary because apmd/acpid would very likely be started on system boot,
and I don't want the driver to depend on whether someone named it in
/etc/modules &lt;HOLYWAR&gt; (or whatever your distribution calls it)
&lt;/HOLYWAR&gt;. Also, you will probably want to have ACPI run from the very
start, and it also makes no sense to load an enumerator as a module
(remember, someone might still want to add that functionality).

The first and second parts of your proposal should rather be two (three) 
different init routines of the same driver, one called early enough,
before mm kicks in, the (yet empty) second when devices are enumerated and
the third late enough to initialize all the rest, such as the /proc
interface etc.

&gt; Makes excessive
&gt;   use of the ACPI-Tables. Provides an APM compatible interface for all
&gt;   APM-Software, and a new ACPI interface for new ACPI software

This should be a config option, but yes, agreed.

[/proc INTERFACE]

&gt; - User programs: 
&gt;   Legacy APM programs should work as they did. 

Yeah, I'd miss that useless icon on my desktop telling me my computer is
AC powered and has no battery... :-)

&gt;   New ACPI programs will have access to timers, cpu throttling, docking
&gt;   status, ... 

Hmm, interesting point: Access control. I don't want any user to be able
to throttle the cpu... :-/

&gt; What I actually meant by transfering the tables to user space is how to
&gt; implement the interface obove noted as [? INTERFACE]. Yes, you're all
&gt; right - now real user programs should have access to the ACPI tables. 

Do it as you can only do in kernelspace: Use a global variable to point 
to the root of your structures. :-)

   Simon

</body></email><email><emailId>19990330162203</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-30 16:22:03-0400</timestampReceived><subject>Re: [Acpi] First concept</subject><body>

On Mon, 29 Mar 1999, Kenneth Zhang wrote:

&gt; 2. Broke Down Into Modules
&gt;     Write an outline and brief description of each modules for easier
&gt; management such as recruitming, timing frame of each module, etc

Okay, what modules do we have to write?

2.1. We need to save the ACPI structures from the mm. This is a hairy
thing, since it cannot be written as a a module. Max has already some
working code, next thing to do is refinement, optimizing (i.e.
defragmenting) and debugging. This module also needs to pass the
information it gathers in an usable way for the other modules.

2.2. The ACPI device enumerator [BTW: It is an important thing, I believe. 
This is the way we're supposed to find and access the devices of fan
kind :-) ] 

2.3. The AML virtual machine. Important to access the methods for the
ACPI enumerated devices (Other devices could still use C).

2.4. The /proc interface. This requires you've actually read the spec and
you're able to figure out what must be visible in userspace; security does
also matter.

2.5. The Userland daemon. Should log all events with appropriate levels
and generate power failure events (init handles those AFAIK). Also, there
should be a simple shell app that can be used to set/query various values
for testing and (later) SNMP support. 

2.6. There is no 2.6.

2.7. (later) A configuration interface (text, x11, kde, gnome,
windowmaker, ...).

What else?

   Simon

</body></email><email><emailId>19990330094205</emailId><senderName>Jos Hulzink</senderName><senderEmail>josh@stack.nl</senderEmail><timestampReceived>1999-03-30 09:42:05-0400</timestampReceived><subject>[Acpi] 1st mail</subject><body>

Hi

I've taken a look at the ACPI specs... My linux kernel now boots while
showing all Bios ACPI tables :) Big problem... we need to update many
drivers to get things working...

I think it is time for some discussion.

Jos
  

</body></email><email><emailId>19990330135359</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-30 13:53:59-0400</timestampReceived><subject>[Acpi] ACPI driver proposed structure and what I meant by accessing tables from userspace</subject><body>

The ACPI driver consists of 3 parts: 
- The boot loader: 
  Gets ACPI tables from BIOS, saves them somewhere so Linux
  MemoryManagement won't be able to overwrite them. 
  Current Status: Quite Done.

[? INTERFACE]

 - The ACPI driver: 
  Should happen much later, could possibly be a module. Makes excessive
  use of the ACPI-Tables. Provides an APM compatible interface for all
  APM-Software, and a new ACPI interface for new ACPI software

[/proc INTERFACE]

- User programs: 
  Legacy APM programs should work as they did. 
  New ACPI programs will have access to timers, cpu throttling, docking
  status, ... 

What I actually meant by transfering the tables to user space is how to
implement the interface obove noted as [? INTERFACE]. Yes, you're all
right - now real user programs should have access to the ACPI tables. 

Max

BTW: I'll hopefully get around to releasing at about 9pm CEsT (GMT+2)

</body></email><email><emailId>19990325121937</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-25 12:19:37-0400</timestampReceived><subject>[Acpi] First concept</subject><body>

Hi,

I think I should make a start now... :-)

The first thing to discuss is certainly the road map. I'd suggest
something like this:

1. See what modules will have to be written
2. Define interfaces between these modules, and an API.
3. Start writing code.

Step one will take at most two, step two about four to six and step three
an undefined number of weeks.

Yet -- I do not have a degree in project management, so probably this is
the wrong way. What do you think?

   Simon

</body></email><email><emailId>19990330075414</emailId><senderName>Kenneth Zhang</senderName><senderEmail>kenneth106@homemail.com</senderEmail><timestampReceived>1999-03-30 07:54:14-0400</timestampReceived><subject>Re: [Acpi] First concept</subject><body>

Finally got the time to write a reply. :-)  Project management don't need a
degree to be a good or experienced project manager.  What it takes of some
good organization and management skills.  I love it and what I'm good at. :)
I agree with you on all three steps but more details as I written below.

1. Project Description
    Which is already done. :)  Nice job by the way.

2. Broke Down Into Modules
    Write an outline and brief description of each modules for easier
management such as recruitming, timing frame of each module, etc

3.  Define interfaces between these modules, and an API.

4. Recruiting
    Do some advertising to see if we can get some good programers to help out
and accelerate the project.

5. Reviews and Comments
    Have a final discussion what other peoples have to say among the team and
the Linux community

6. Org Chart and Assign Tasks
    Assign tasks to each individual programmers and create an organization
chart who is doing what.

7. Starting Coding


-Kenneth Zhang
Simon Richter wrote:

&gt; Hi,
&gt;
&gt; I think I should make a start now... :-)
&gt;
&gt; The first thing to discuss is certainly the road map. I'd suggest
&gt; something like this:
&gt;
&gt; 1. See what modules will have to be written
&gt; 2. Define interfaces between these modules, and an API.
&gt; 3. Start writing code.
&gt;
&gt; Step one will take at most two, step two about four to six and step three
&gt; an undefined number of weeks.
&gt;
&gt; Yet -- I do not have a degree in project management, so probably this is
&gt; the wrong way. What do you think?
&gt;
&gt;    Simon
&gt;
&gt; _______________________________________________
&gt; acpi maillist  -  acpi@phobos.fachschaften.tu-muenchen.de
&gt; http://phobos.fachschaften.tu-muenchen.de/mailman/listinfo/acpi

</body></email><email><emailId>19990412115711</emailId><senderName>Jos Hulzink</senderName><senderEmail>josh@stack.nl</senderEmail><timestampReceived>1999-04-12 11:57:11-0400</timestampReceived><subject>Re: [Acpi] First concept</subject><body>

Hi,

I got one mayor problem: the ACPI support of my motherboard is broken. I'm
tracing the bugs, and will continue programming once found. I'm working on
a /proc/ interface definition. Ideas welcome.

Jos 

------------------------------------------------------------------------------
The best accelerator for a computer running MS Windows is FREE and called
gravity. 

</body></email><email><emailId>19990412130620</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-12 13:06:20-0400</timestampReceived><subject>Re: [Acpi] First concept</subject><body>

Hi,


I sure would like to discuss the /proc interface with you, since this is
what I am currently working on. I think it is rather obvious that all acpi
related stuff should go into a directory calls /proc/acpi. In this
directory there are currently some files representing the different
tables. I think this should stay the way it is. One thing to think about
is the acpi-namespaces tree, if and how it should be mapped to a
/proc-tree. And, of course, we should never forget /proc/apm for
compatibility.
BTW: I'll publish the new kernel-patch with the current
/proc during this week. I'll send another mail to this list whenever I do
so.


Max

</body></email><email><emailId>19990330122438</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-30 12:24:38-0400</timestampReceived><subject>Re: [Acpi] 1st mail</subject><body>

Hi,

ok, heres what if've done so far:

- loading the ACPI-Tables at boot time (can't be later)
- experminenting with "enabling ACPI" (not released yet)

I don't think there have to be too many drivers rewritten. I think primary
goal should be to enable ACPI and to "emulate" apm. Using ACPI for
configuring plug'n'play devices is nice - but not a current issue

I'll release my new sources tonight. Questions, comments and suggestions
are very welcome.

I am currently looking for a way to transfer the tables to user space. Any
hint on how this is "best" done is welcome.

Max

On Tue, 30 Mar 1999, Jos Hulzink wrote:

&gt; Hi
&gt; 
&gt; I've taken a look at the ACPI specs... My linux kernel now boots while
&gt; showing all Bios ACPI tables :) Big problem... we need to update many
&gt; drivers to get things working...
&gt; 
&gt; I think it is time for some discussion.
&gt; 
&gt; Jos
&gt;   
&gt; 
&gt; 
&gt; 
&gt; _______________________________________________
&gt; acpi maillist  -  acpi@phobos.fachschaften.tu-muenchen.de
&gt; http://phobos.fachschaften.tu-muenchen.de/mailman/listinfo/acpi
&gt; 
&gt; 

</body></email><email><emailId>19990330122815</emailId><senderName>"David J Woolley"</senderName><senderEmail>djw@bts.co.uk</senderEmail><timestampReceived>1999-03-30 12:28:15-0400</timestampReceived><subject>Re: [Acpi] 1st mail</subject><body>

&gt; I've taken a look at the ACPI specs... My linux kernel now boots while
&gt; showing all Bios ACPI tables :) Big problem... we need to update many
&gt; drivers to get things working...

There is actually value in just having the data.  It allow remote 
administrators to monitor for problems in machines functioning as 
servers.




-- 
David Woolley - Office: David Woolley &lt;djw@bts.co.uk&gt;
BTS             Home: &lt;david@djwhome.demon.co.uk&gt;
Wallington      TQ 2887 6421
England         51  21' 44" N,  00  09' 01" W (WGS 84)

Any views expressed in this message are those of the individual sender,
except where the sender specifically states them to be the views of BTS.

</body></email><email><emailId>19990330124113</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-03-30 12:41:13-0400</timestampReceived><subject>Re: [Acpi] 1st mail</subject><body>

On Tue, 30 Mar 1999, Max Berger wrote:

&gt; I don't think there have to be too many drivers rewritten.

Well, although the BIOS is supposed to provide control methods for the
devices enumerated by ACPI, I doubt that there will be many of them in the
first place (In fact, I am not even sure they built one). We will most
likely have to deal with PCI cards, which are enumerated "by the PCI bus"
(ACPI spec, p.33) and thus the PCI driver is supposed to provide control
methods, which, in turn, are provided by the device drivers (I don't see
any better way, the spec says nothing about that).

&gt; I think primary
&gt; goal should be to enable ACPI and to "emulate" apm. Using ACPI for
&gt; configuring plug'n'play devices is nice - but not a current issue

Agreed.

&gt; I am currently looking for a way to transfer the tables to user space. Any
&gt; hint on how this is "best" done is welcome.

Well, I would not want to transfer the actual tables. IMHO the best way is
some /proc interface.

   Simon

</body></email><email><emailId>19991007155640</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-07 15:56:40-0400</timestampReceived><subject>[Acpi] (no subject)</subject><body>

On Thu, 7 Oct 1999, Michael K. Johnson wrote:
&gt; Here's another surprise.  It looked to me like
&gt; the namespace tree could be quite compact and
&gt; point to in-place AML.  It even looked to me
&gt; like when initializing the namespaces, you would
&gt; not even need to store method names as long as
&gt; the surrounding namespace was in place, and the
&gt; methods could then be looked up dynamically by
&gt; name when invoked.  I think that it is reasonable
&gt; to trade off speed against every other objective
&gt; in an in-kernel AML interpreter, as AML should
&gt; be simple; as the documentation points out, it
&gt; should be considered a declarative language, not
&gt; a procedural language.  Is that naive?

Let me get this right - you suggest a small, but slow in-kernel VM and a
larger, but faster Userspace VM. This would enable us to do REAL device
initialisazion during bootup, and have emergency AML support for thermal
management. When, however speed is wanted (regular operation), a userspace
program is used. And if you have security concerns, you can turn off the
daemon-VM during kernel-compilation.

This idea definitifely sounds like a winner to me! 

I personally think this is a solution we can work on

Max Berger
e-mail: max.berger@phobos.fs.tum.de

--
ACPI4Linux: http://phobos.fs.tum.de/acpi/ FBR-Info: http://www.fs.tum.de/FSMPI/
Sysop: http://wwwbrauer.in.tum.de/ Worldforge: http://www.worldforge.org/  JOS:
http://www.jos.org PGP: 9CF77B603671BB18 D5110085483230BB ftp://phobos.fs.tum.d
e/pub/pgp/max.berger.asc Home: http://phobos.fs.tum.de/~mage/ Fillup: Some Data

</body></email><email><emailId>19990401150831</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-01 15:08:31-0400</timestampReceived><subject>[Acpi] Propose: The ACPI modules description.</subject><body>

Hi,

heres my current plan in splitting up the acpi module: 

What: 

Boot Table loader

Description: 

Tests if ACPI is present on the machine and if the current version is
supported. Searches for and loads the ACPI tables before Linux Memory
Management kicks in.

Current Status: 

Done

What: 

Devices Enumerator and Configurator

Description: 

The "main core" of the ACPI system. Enumeraters and configures ACPI
devices :-).

Current Status: 

Open

What: 

ACPI Kernel/Init interface

Description: 

Turn off system on shutdown, shut down system on hardware request, reset
RTC, ... 

Current Status: 

Open

What: 

APM Legacy emulation

Description: 

Emulates the APM interface for legacy software

Current Status: 

Open

What: 

ACPI /proc interface

Description: 

Gives a user interface similar to the apm user interface for some nice
applets

Current Status: 

Open

What: 

ACPI applets

Description: 

The nice (un)important icon telling you your desktop is plugged in and
your battery is charging, and others

Current Status: 

Open


Max

</body></email><email><emailId>19990504125931</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-05-04 12:59:31-0400</timestampReceived><subject>[Acpi] Programmers wanted</subject><body>

Hello,

Simon has some time-problems, meaning that we need someone elso to write
the VM. So the two projects needing work are now:

- A DSDT -&gt; Tree parser. This needs to parse the DSDT, extract all
functions and store them in a tree-like structure. 

- A AML VM. This actually "executes" the functions stored within the tree. 

- An ASL-&gt;AML Compiler. This is an extra project which we don't really
need. But it would be a very nice thing to have and it is not really
difficult. 

So, is there anyone who feels like he/she would like to implement one of
these 3 things? Mail me!

Thank you for your patience

Max

</body></email><email><emailId>19990603231127</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-03 23:11:27-0400</timestampReceived><subject>Re: [Acpi] patch</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

On Sun, 6 Jun 1999, Oliver Neukum wrote:
&gt; Hallo,
&gt; 
&gt; dieser Patch gegen die letzte release implementiert eine Checksumme und erhöht
&gt; die Effizienz ein wenig. Wie soll das poweroff richtig implementiert werden ?
&gt; 
&gt; Oliver Neukum
What he did was implementing a checksum algorithm, which was missing, and
he increased efficiency during loading of some tables. I am currently
checking his patch and it will be integrated in the next release,
hopefully during this week. He's also asking about how to implement the
poweroff correctly, which is quite work work to do and which I will
discuss with him personally.

Some notes about postings to different lists:

acpi@phobos.fs.tum.de is for general discussions, and for posts like this

Patches, however, are always welcome, but should not go through the list.
Instead send them either to
acpi-project@phobos.fs.tum.de
which is Simon and me, or directly one of us. Yes, posts to acpi-project,
or personal mail can be in German, but the language on ACPI should be
english.



Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc


-----BEGIN PGP SIGNATURE-----
Version: 2.6.3i
Charset: noconv

iQEVAwUBN1cLpU/LTI8vN/FZAQEWnAgAnuR1kQdYd16/2JB5NXbkQI1Z8w4yESx+
4TSeRyBR1lWa3xgMQLN5QlKOxedMlUbkm1IzFEYcraNUXl0UT/xuHw9LKqFm/H55
hDbsefFI/AHCmqL3MpM5xCpaV7NLhCOeOuJyRlo0028dadeZOHaloYaq4J+P2b4n
qzyydDVHjzKDTYHI2LlZxkcqHPW7eX5LfB3xLHlH4A4H3Ba6w4qq/8pXon8DNwlM
xfbHO/zaRNlC0UKZfD3qcityyj5GqiRbc1j49kdgbPEUglbHA9xvF4Qp+9un9jbV
IeSx2b8VpYONor28YZCbmkmljpmP/Z5asxw5wcweiQgakQWNCaAQhQ==
=Bw3j
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990709154940</emailId><senderName>Eric Sandeen</senderName><senderEmail>sandeen@io.com</senderEmail><timestampReceived>1999-07-09 15:49:40-0400</timestampReceived><subject>[Acpi] BIOS size for ACPI</subject><body>

This might be a bit off topic... I hope not too much.

I recently got an Epox KP6-BS dual PII motherboard, and it had
advertised ACPI.  Unfortunately, it is not ACPI compliant (I found this
out after using the ACPI4Linux patch).  I wrote to Epox, and all they
did was change their website to say "**selected ACPI functions only." 
They also told me that they have only limited space in the BIOS to
implement new features.

I'm pretty sure that my board has a 1 mb BIOS (megabit), and I've seen
some that are 2 mb... does anyone know roughly how much space it takes
to support minimal ACPI compliance?  I'm wondering if there's a chance
that a BIOS update will be provided at a later date, or if it's
impossible given memory constraints.

Thanks,

-Eric

</body></email><email><emailId>19990801014925</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-01 01:49:25-0400</timestampReceived><subject>[Acpi] Organisational stuff and the APIs</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

this will be a long mail, I fear... :-)

In the last time it has become more and more evident, that Max would be
working mostly on the kernel drivers, and I claim my part of the Noosphere
in userland. Now we are making this in fact official, so Max is the guy to
ask for everything kernel related, and I am for everything else.

Here is my "monthly activity report", if you wish to call it so, although
it's merely a call for help because the amount of work necessary is really
overwhelming. :-/

A very important step for the near future will be defining the userspace
API. I've already wasted some thoughts on this:

There are two "classes" of programs: Servers and Applications.

Servers behave the following way:
 - Running from system startup to shutdown
 - No GUI or other direct control facility
 - Long idle times with short bursts of activity
 - Maximum response time depends on the type of server.

Applications, on the other hand, do:
 - Require interaction only while a user is logged on
 - (G)UIs
 - Short idle times with really short bursts of activity
 - Maximum response time depends on the patience of the user

My ideas for handling this in userspace would be as follows:

 - If the program registers with libacpi, everything is fine, and we can
   expect the program to be able to tell when the computer and certain
   pieces of hardware may go to sleep and what provisions (such as
   wake-on-lan, wake-on-ring, ...) are required to allow turning off that
   hardware.

 - If the program does not have a controlling terminal and a UID in a
   defined (config) range, then it is considered a server. A server's
   requirements can be determined by querying different acpid modules to
   which I refer as "plugins". They query specific information such as
   whether it has any listening sockets and tell acpid their conclusions.
   The machine should go to sleep after a certain time of inactivity.

 - If a program does not have a controlling terminal, the UID of an user
   (-&gt;config file) and ignores the HUP signal, it is considered a
   background (worker) task. It may be safely put to sleep at any time,
   provided none of the "plugins" tells us not to do that (e.g. active
   non-local connections). This may happen after a timeout, if the admin
   wishes so (laptops), but will usually only on the user's request.

 - If a program is niced &gt;10, it is considered unimportant. Unless it has
   open connections (=&gt;plugins), we can ignore it.

 - If a plugin tells us a program needs attention, acpid may shut down 
   resources that are currently unused, but not put the machine to sleep.

 - If a program is using io space directly, it cannot be put to sleep. It
   might leave the hardware in some weird state.

 - If the machine's load5 (the 5 seconds average) and load1 are below a
   point where the CPU can be clocked down without increasing the load to 
   1, the CPU gets clocked down.

 - If a program requests a change to temperature management settings, the
   request is checked against the allowed values (config), then placed in
   a list. Precedence is given according to rules in the config and a
   self-defined priority. The priority is an estimate how serious the
   request is. If someone is working in the background and someone else at
   the console, they can manage to get along this way... hopefully. :-)

 - If an unimportant program (see above) is running, and the system is
   battery powered, acpid issues a priority 0 TM request that puts the
   machine into power-saving mode, which is basically the same as silent
   mode.

Applied to usual scenarios:

Home user/Workstation:
 - Many local X connections
    We don't care about that. These are local connections, as long as the
    kernel is aware of it (Max? :-) ), they won't time out.
 - Few remote X connections
    It is the duty of the X server to notify/state-save all of its
    clients. If all of the clients are ACPI aware, this should not be a
    great problem, since the (not yet existant) specification for aware
    clients tells how to react (close the connection and wait for
    notification from the server). If not, we have a real problem. Open a
    window that informs the user about the problem, and ask for a
    solution. Also, I cannot offer you a solution if the user forgets
    about his clients. Sorry.
 - Some local daemons that are idle most of the time
    This is no real problem. Servers may be put to sleep as long as they
    do not have any active non-local connections, and with the appropriate
    plugins that should not be difficult to detect.
 - An idle time eater, such as rc5des or setiathome
    This program is considered unimportant, so this is no real problem.

Home server:
 - A few gatewayed connections, depending on whether someone is working
    While these connections are active, the networking subsystem may not
    sleep.
 - Some daemons that are used sometimes, depending on whether someone is
   working
    As long as noone is working, the machine may sleep with wake-on-lan,
    as soon as someone connects, it needs to wake up. The plugins cat tell
    you how fast.
 - Some cron jobs
    Cron should be ACPI aware, or we're having a huge problem here.
 - Exported filesystems
    These daemons should be ACPI aware if you want the system to be able
    to sleep. Sorry.

Small business server:
 - Some server programs being active during normal work hours
    This should keep the network and hard disk subsystems running
 - Casual activity during the nights/weekends
    The server programs stay running, since noone is connected, acpid
    initiates sleep mode with wake-on-lan

Server: Constant activity keeps all relevant subsystems up.

Laptop:
 - Local X connections
    No problem.
 - Remote X connections
    The same as for home users goes here.
 - Battery troubles
    Every program that can give trouble, in fact those that access
    hardware directly, should be ACPI aware. If they are not, the only
    thing we can do is try to maintain device context as long as possible
    by turning off everything else, and kill the program if there is no
    other way. Active servers are only a minor problem, since a laptop
    that is connected to a network is usually also connected to a power
    source. If not, however, all we can do is refuse to accept() if the
    battery is low, and thus hope to get the connection table cleared
    until it gets really critical.

A few words on how all this will be achieved (I'm fairly sure I'm not
going to program it all by myself...):

 - libacpi
   The interface library for all programs that need to interface the local
   ACPI subsystem. 
 - libXacpi
   The second interface library, for X clients. Note that clients need to
   watch both their machine and the server. If the client machine goes to
   sleep for some unavoidable reason (losing battery power), the server
   shall (meaning this is not implemented yet) notify the user and ask for
   a decision what is next.
 - acpid
   This program (of which not a single line of code exists, this is why
   the snapshots only contain an empty directory... :-P
 - some ACPI awareness patches
   X, cron, init, atd, ...

Okay, this is about it. Now the problem is that I'm basically the only one
working on userspace stuff now. Some guys have volunteered to help, but I
cannot reach them (eMail bounces, either with "user unknown" or "excessive
hops"). I think there will be at least five people necessary to complete
this stuff in a reasonable amount of time.

My greatest problem at that time is X. Is someone of you familiar with
modifying the X server? I cannot test my implementation properly, because
the unmodified server segfaults somewhere in miDCInitialize() (jumps to
some 0bxxxxxx address, which is behind the server executable), and one
compiler run takes about three hours... :-/

Okay, thanks for your patience, and good night... (4am, and not finished
for this weekend yet... :-/ )

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  3:05am  up 11 days,  9:20,  2 users,  load average: 1.02, 1.12, 1.66






-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN6Onr/FUmCYJPaUlAQFuVAgA3JIDV9OPBOYuJ/Zot2D0R8P2mBSONIeY
nGobEGN2ubjVPwCUpkzdLwI+CENWjbzJXlrZ/uV1nWNoMd0l9FBfEmxb4EKeHDlk
fxtW+UGZfUID/7de+gYCCrhqTJwKpN01T98UvJ109At6QwAHtT7jj6DhYb4ujta/
A6RRWgZQ7abJBzZqNRbnK9FAusmthk3rLup2zHV83KAvwtxlGhY6dy+IPV2soPaA
DyAw580TenOsxlRFVUYwkCRwZD7gnr1jhNjDRVE59FMRe5KGoNfuuxlCU27UpOFj
1Q4lC36vBduVxAnclwrjWCwUZLV0edSvbtffhSx7J74Hjc/0exPGGw==
=dro5
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990903113117</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-03 11:31:17-0400</timestampReceived><subject>Re: [Acpi] file organization?</subject><body>

On Fri, 3 Sep 1999, brandon wrote:
&gt; i was trying to add the apic tables to proc.
Basically, not a bad thig. I really like everyone who like to contribute
work. I have to thank you for that attempt.

On the other hand, I do not like disappointing people. We are currently
planning some major restructuring, so everything added right now would
probably get lost.

But of course, here's your info:

&gt; i added structs for the apic tables in acpiint.h, and a pointer
&gt; declaration for the table at the bottom with the others,
&gt; i added a case for ACPI_SIG_APIC in the switch statement that assigns
&gt; a value to the pointer in init.c
&gt; and i added an apic read function and a proc entry mainly by looking at
&gt; the other functions to proc.c

You'd have to add your apic pointer TWICE. once as struct .... and the
second time as extern struct ... 
I think this is what you were missing

&gt; i think my problem is that i don't fully understand the organization of
&gt; the directories.

&gt; what i really want is a description of the organization of the
&gt; files and directories - what should go where, what should not go where.

&gt; i noticed that there are declarations for the acpi table header, root
&gt; system description table, etc. in both acpiint.h and
&gt; subsystem/include/acpitables.h, and i don't understand that.

everything in subsystem is andy's code which is currently not used. This
will change in the near future, as will the whole thing.

Your change was quite correct - except for that second declaration...

&gt; i don't know, whatever you think will help me get a grasp on how your acpi
&gt; patches are supposed to work. i've been reading that 300+ acpi document
&gt; for a while, but i don't quite have a hold of the total picture.

The ACPI specs are quite a book to work through. I hope I will be able to
provide some help with it in the near future. 


&gt; i'm not really expecting any solutions to what's wrong with my
&gt; modifications(unless by some chance you know exactly whats wrong), but any
&gt; help is of course welcome.

HTH

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19991006161907</emailId><senderName>Marcos Dione</senderName><senderEmail>root@deepblue.famaf.unc.edu.ar</senderEmail><timestampReceived>1999-10-06 16:19:07-0400</timestampReceived><subject>[Acpi] prior kernel version</subject><body>

	hi, i'm not in the list, but i tried to use the patch. the problem is
that a just use "stable" kernel versions (by now, 2.2.x) but the patch,
as you already know, is for 2.3.x

	don't you have a patch to this version, or i need to wait to the 2.4.x
version of the kernel?



	c-u-8-r

</body></email><email><emailId>19991111021242</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 02:12:42-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:

&gt;   When I now press the power button, Linux halts and
&gt; the system powers down.
&gt; 
&gt;   When I disable APM power down, linux still halts,
&gt; but the system didn't power down.

Are you building APM support into the kernel?
If so, that would probably be bad.  I suspect
that when the APM driver initializes, the BIOS
implicitly turns off ACPI.

&gt;   Linux 2.3.26 and acpi_patch-2.3.27-1.gz
&gt;   ---------------------------------------
&gt;   make menuconfig tell's me it is possible to
&gt; compile ACPI support as module, but you've
&gt; deactivated it. Maybe you should correct this

Right, I'll fix the documentation right now.
As of 2.3.27-1 ACPI has to be static because
it exposes an interface to drivers which
may themselves be static.
 
-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991129184505</emailId><senderName>"Crispin Flowerday"</senderName><senderEmail>cehf2@cam.ac.uk</senderEmail><timestampReceived>1999-11-29 18:45:05-0400</timestampReceived><subject>[Acpi] acpi poweroff under 2.3.30</subject><body>

I still have the same problem - no poweroff under 2.3.30 pre3 with the pre-2
patch, and the new acpid.

There has been an update for my BIOS (Abit BH6) and now the using acpidmp
DSDT | acpidiasm I get 4 fields in the s5 value, but they are all Zeroop.
when I run apicd, the value in /proc/sys/acpi/s5_slp_typ is 0xffffffff.

running acpid -d says that S5 is not supported.

echo 0x00 &gt; /proc/sys/acpi/s5_slp_typ
(Abit BH6 is a BX PIIX4  board)(i think)
now when I shutdown -h now, it reboots. Even though it is runlevel 0.

Under Windows 98/2000 poweroff's work just fine.

I have also had a few more oop's but they seem to have dissapeared now. And
events work fine, the poweroff button being pressed is reported fine.

Also sleep is a little odd, echo 1 &gt; sleep, the console blanks for about 1
second and then it comes back out of sleep mode, even though I don't touch a
thing, maybe this a bios setting or something, as it is the same under
windows 9x and 2000.

Any ideas how to get it turning off.

--
Crispin

*Windows leads to anger. Anger leads to hate. Hate leads to Linux*

</body></email><email><emailId>19991202003750</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-02 00:37:50-0400</timestampReceived><subject>Re: [Acpi] acpi poweroff under 2.3.30</subject><body>

--- Crispin Flowerday &lt;cehf2@cam.ac.uk&gt; wrote:

&gt; There has been an update for my BIOS (Abit BH6) and
&gt; now the using acpidmp
&gt; DSDT | acpidiasm I get 4 fields in the s5 value, but
&gt; they are all Zeroop.
&gt; when I run apicd, the value in
&gt; /proc/sys/acpi/s5_slp_typ is 0xffffffff.

Hmm..  Can you send me the output of acpidmp?
With the BIOS update, sounds like the DSDT
has changed and may have broken acpid.

&gt; echo 0x00 &gt; /proc/sys/acpi/s5_slp_typ
&gt; (Abit BH6 is a BX PIIX4  board)(i think)
&gt; now when I shutdown -h now, it reboots. Even though
&gt; it is runlevel 0.

Yes, this is really looking like a BIOS problem.
I do know that there are a lot of broken ACPI
implementations out there, even for easy stuff
like S5.  To enter S5 I basically take that
SLP_TYP value and write it into a register.
I've looked at the spec and my code pretty
closely now but there is not a whole lot of
room for coding error here.

&gt; Under Windows 98/2000 poweroff's work just fine.

Ah, this is troubling.  It is possible that
Windows has work-arounds for specific broken
BIOSs.  Many vendors only validate their
implementation for Windows so it is also
possible that they might not be entirely
spec compliant but do work for the sequence
of accesses made by Windows.  If Windows is
getting the machine to actually power-off
there must be a way to do it from Linux.

&gt; Also sleep is a little odd, echo 1 &gt; sleep, the
&gt; console blanks for about 1
&gt; second and then it comes back out of sleep mode,

The second pause is just the time spent in
the call to get_cmos_time (yes, very slow)
before actually entering S1.  Sounds like
your system isn't going into S1 either.

When you got the BIOS upgrade was there any
documentation along with it (fixes, 
change log, ...) that might tell us what
they are trying to fix?

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991202010318</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-02 01:03:18-0400</timestampReceived><subject>Re: [Acpi] acpi poweroff under 2.3.30</subject><body>

--- Yuqing Deng &lt;deng@tinker.chem.brown.edu&gt; wrote:
&gt;
&gt; I have the same problem with ASUS P2B-D.
&gt; The value set by acpid was 0x606.
&gt; S0, S1 and S5 are supported.  But when I power
&gt; the computer down with "shutdonw -h now",
&gt; the screen blanks the power is still on.

OK, the ACPI driver blanks the screen before
going into S1-S5.  Sounds like your system
reports the S5 capability but when the
SLP_TYP values are written into the
hardware registers it doesn't actual go
into S5.

&gt; Sleep works.  but the "echo 1 &gt; sleep" never
returns.
&gt; It's not even interruptable.  If I switch to another
&gt; console by Ctrl+Alt+F2 and do "echo 1 &gt; sleep" one
&gt; more time, the system locks up.

OK, I can fix the lockup (my code tells the system
to enter S1 and then spins until S1 is entered,
apparently it never does) but, if the problem is
the BIOS, I can't make sleep actually work.

&gt; Event report doesn't work.  The pm1_enable is
&gt; already 0x100 before I run acpid.  But nothing
&gt; happens when I press the power
&gt; button while doing "cat /proc/sys/acpi/event".

If ACPI events don't work that's a pretty bad
sign.  In the next patch, I'll add some better
error reporting so that we can at least pinpoint
the problem.

-Andy

__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991203225959</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-03 22:59:59-0400</timestampReceived><subject>Re: [Acpi] acpi poweroff under 2.3.30</subject><body>

 Thursday, December 02, 1999, 2:03:18 AM, Andy wrote:


 Linux:             SuSE 6.2
 Kernel:            2.2.29; unpatched
 
 
&gt;&gt; I have the same problem with ASUS P2B-D.
&gt;&gt; The value set by acpid was 0x606.
&gt;&gt; S0, S1 and S5 are supported.

How can I see which values are supported?

Asus P3B-F (PIIX4E): acpid sets s5_slp_typ to 0x707
Asus TX97-XE (PIIX4): acpid sets s5_slp_typ to 0x0

&gt;&gt; But when I power
&gt;&gt; the computer down with "shutdonw -h now",
&gt;&gt; the screen blanks the power is still on.

&gt; OK, the ACPI driver blanks the screen before
&gt; going into S1-S5.  Sounds like your system
&gt; reports the S5 capability but when the
&gt; SLP_TYP values are written into the
&gt; hardware registers it doesn't actual go
&gt; into S5.

When I power
the computer down with "shutdonw -h now",
the screen _DOESN'T_ blanks the power is still on.
The system only tell's my that it is halted.
On both systems, P3B-F and TX97-XE!

&gt;&gt; Event report doesn't work.  The pm1_enable is
&gt;&gt; already 0x100 before I run acpid.  But nothing
&gt;&gt; happens when I press the power
&gt;&gt; button while doing "cat /proc/sys/acpi/event".

Same here on both systems. When I press the button
the os shut's down (but the system doesn't power down)
but nothing is catted ("cat /proc/sys/acpi/event").



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111022429</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 02:24:29-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 3:12:42 AM, Andy wrote:

 Andy, are you on the acpi-ML or do I have to CC it to you?

&gt;&gt;   When I disable APM power down, linux still halts,
&gt;&gt; but the system didn't power down.

&gt; Are you building APM support into the kernel?

Yes.

&gt; If so, that would probably be bad.  I suspect
&gt; that when the APM driver initializes, the BIOS
&gt; implicitly turns off ACPI.

When I'm building APM and ACPI support into the kernel and start the
acpid, I can press the power button to shutdown Linux and power off
the system.

When I'm building APM and ACPI support into the kernel and DON'T start
the acpid, I can press the power button and the system go's into
APM-stand-by

When I'm building ONLY ACPI support into the kernel and start the
acpid, I can press the power button to shutdown Linux, but the system
won't power off.


I'd like to have the first behaviour.

&gt;&gt;   Linux 2.3.26 and acpi_patch-2.3.27-1.gz

Another question. When I use acpi_patch-2.3.27-1.gz, should I first
patch Linux 2.3.26 with the 2.3.27-pre1 patch or direct patch 2.3.26?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111031409</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 03:14:09-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:

&gt;  Andy, are you on the acpi-ML or do I have to CC it

Yes, I'm on the mailing list so a reply there is fine.

&gt; When I'm building ONLY ACPI support into the kernel
&gt; and start the acpid, I can press the power button
&gt; to shutdown Linux, but the system won't power off.

1) Are you using the real acpid (acpid-110199.tar.gz)
   from my web site and not just the old skeleton
   acpid? (if not, get it and use it)

2) Try running acpid and then do a "shutdown -h now".
   Does your system actually power down or just hang
   there? (if hang, the S5 slp_typ values must be
   wrong, take a look at your syslog for any
   interesting messages from acpid
   "tail -50 /var/log/messages" or wherever your
   system puts it)

3) As root

     echo 0x100 &gt; /proc/sys/acpi/pm1_enable
     cat /proc/sys/acpi/event

   Now hit the power button.  Do you see this

     0x00000100 0x0000000

   appear for each button press? (sysctl is cool)
   (if not, do you see anything? if not, puzzling
    the problem must be event handling)

&gt; Another question. When I use acpi_patch-2.3.27-1.gz,
&gt; should I first patch Linux 2.3.26 with the
&gt; 2.3.27-pre1 patch or direct patch 2.3.26?

In general, you should always apply Linus'
prepatch and then apply my patch of the same name.
In this specific case, you could get away with
just applying my patch to 2.3.26 if you want.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111145242</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 14:52:42-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

I'm seeing the same problem Sven is seeing, on an Acer notebook
and an HP 4-way server.  (Well, I haven't tested the power button
on the server, just "shutdown -h now"; I'll check later to see if
the server has a soft power button...)

So, Andy, I'll answer the questions here that you are asking Sven,
now that I know that it is not just me having these problems.

Andy Henroid writes:
&gt;1) Are you using the real acpid (acpid-110199.tar.gz)
&gt;   from my web site and not just the old skeleton
&gt;   acpid? (if not, get it and use it)

New, real, latest acpid.

&gt;2) Try running acpid and then do a "shutdown -h now".
&gt;   Does your system actually power down or just hang
&gt;   there? (if hang, the S5 slp_typ values must be
&gt;   wrong, take a look at your syslog for any
&gt;   interesting messages from acpid
&gt;   "tail -50 /var/log/messages" or wherever your
&gt;   system puts it)

hangs -- but it hangs when SIGTERM is sent to acpid,
and I can reproduce the system hang (as I discovered
five minutes ago) by sending SIGTERM to acpid outside
of the shutdown sequence.  That should be trivial to
find, and I'll look into it shortly.  First to find it
post here and let the other know.  :-)

&gt;3) As root
&gt;
&gt;     echo 0x100 &gt; /proc/sys/acpi/pm1_enable
&gt;     cat /proc/sys/acpi/event
&gt;
&gt;   Now hit the power button.  Do you see this
&gt;
&gt;     0x00000100 0x0000000
&gt;
&gt;   appear for each button press? (sysctl is cool)

Yes, that's exactly what I see.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111151134</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 15:11:34-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 4:14:09 AM, Andy wrote:

&gt; &gt; When I'm building ONLY ACPI support into the kernel
&gt; &gt; and start the acpid, I can press the power button
&gt; &gt; to shutdown Linux, but the system won't power off.

&gt; 1) Are you using the real acpid (acpid-110199.tar.gz)
&gt; from my web site

Yes.

&gt; 2) Try running acpid and then do a "shutdown -h now".
&gt; Does your system actually power down or just hang
&gt; there?

/usr/local/src/acpid/acpid
echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ
shutdown -h now

==&gt; just hang there (FYI: /proc/sys/acpi/s5_slp_typ ist 0x00!)

/usr/local/src/acpid/acpid
shutdown -h now

==&gt; just hang there (FYI: /proc/sys/acpi/s5_slp_typ ist not 0x00!)

&gt; (if hang, the S5 slp_typ values must be
&gt; wrong, take a look at your syslog for any
&gt; interesting messages from acpid
&gt; "tail -50 /var/log/messages" or wherever your
&gt; system puts it)


Nov 11 14:49:06 Sisko acpid: started
Nov 11 14:49:06 Sisko acpid: S5 SLP_TYPa (0x07)
Nov 11 14:49:06 Sisko acpid: S5 SLP_TYPb (0x07)
Nov 11 14:49:46 Sisko init: Switching to runlevel: 0
Nov 11 14:49:47 Sisko sshd[175]: log: Received signal 15; terminating.
Nov 11 14:49:48 Sisko kernel: Kernel logging (proc) stopped.
Nov 11 14:49:48 Sisko kernel: Kernel log daemon terminating.
Nov 11 14:49:49 Sisko exiting on signal 15
Nov 11 14:51:01 Sisko syslogd 1.3-3: restart.
Nov 11 14:51:02 Sisko kernel: klogd 1.3-3, log source = /proc/kmsg started.
Nov 11 14:51:02 Sisko kernel: Inspecting /boot/System.map
Nov 11 14:51:02 Sisko kernel: Symbol table has incorrect version number. 
Nov 11 14:51:02 Sisko kernel: Inspecting /System.map
Nov 11 14:51:02 Sisko kernel: Loaded 7188 symbols from /System.map.
Nov 11 14:51:02 Sisko kernel: Symbols match kernel version 2.3.26.
Nov 11 14:51:02 Sisko kernel: Loaded 21 symbols from 3 modules.
Nov 11 14:51:02 Sisko kernel: ne2k-pci.c:vpre-1.00e 5/27/99 D. Becker/P. Gortmaker \
                http://cesdis.gsfc.nasa.gov/linux/drivers/ne2k-pci.html
Nov 11 14:51:02 Sisko kernel: ne2k-pci.c: PCI NE2000 clone 'RealTek RTL-8029' at I/O \
                0xd000, IRQ 10.
Nov 11 14:51:02 Sisko kernel: eth0: RealTek RTL-8029 found at 0xd000, IRQ 10, \
                00:C0:26:89:2B:47.
Nov 11 14:51:04 Sisko lpd[155]: restarted
Nov 11 14:51:05 Sisko sshd[175]: log: Server listening on port 22.
Nov 11 14:51:05 Sisko sshd[175]: log: Generating 768 bit RSA key.
Nov 11 14:51:06 Sisko sshd[175]: log: RSA key generation complete.
Nov 11 14:51:06 Sisko /usr/sbin/cron[177]: (CRON) STARTUP (fork ok) 
Nov 11 14:51:09 Sisko login: pam_unix session started for user root, service login 



&gt; 3) As root

&gt; echo 0x100 &gt; /proc/sys/acpi/pm1_enable
&gt; cat /proc/sys/acpi/event
&gt; Now hit the power button.  Do you see this
&gt; 0x00000100 0x0000000
&gt; appear for each button press?

Yes.




 Sven

-- 
PGP-Key-ID: 0x881BF222


</body></email><email><emailId>19991111160703</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 16:07:03-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

Sven Kirmess writes:
&gt;Nov 11 14:49:06 Sisko acpid: started
&gt;Nov 11 14:49:06 Sisko acpid: S5 SLP_TYPa (0x07)
&gt;Nov 11 14:49:06 Sisko acpid: S5 SLP_TYPb (0x07)

This is different for me.  I'm not getting either of those
SLP_TYP messages on either of the machines I'm testing.
Looking through the source, it looks like \_S5 must not
exist in these bioses.  :-P

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111162258</emailId><senderName>"Crispin Flowerday"</senderName><senderEmail>cehf2@cam.ac.uk</senderEmail><timestampReceived>1999-11-11 16:22:58-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

I get exactly the same problem with 2.3.27-pre6, with the patch posted
earlier today.

I have an ABIT BH6 motherboard, with the kernel detecting it properly.
redhat 6.0, updated
celeron 300A @450 (perfectly stable)

&gt; 1) Are you using the real acpid (acpid-110199.tar.gz)
&gt;    from my web site and not just the old skeleton
&gt;    acpid? (if not, get it and use it)

I am using acpid-110199

&gt; 2) Try running acpid and then do a "shutdown -h now".
&gt;    Does your system actually power down or just hang
&gt;    there? (if hang, the S5 slp_typ values must be
&gt;    wrong, take a look at your syslog for any
&gt;    interesting messages from acpid
&gt;    "tail -50 /var/log/messages" or wherever your
&gt;    system puts it)

absolutely nothing is reported in the message log, all I get it

apcid started, then nothing else reported after than.

If I press the poweroff button it shutsdown as far as "System halted \n\n
Poweroff"
but it does not poweroff at all.
The actual value in s5_slp_typ is 0xffffffff not sure about the number of
f's, but it is all f's. should this be 0x00 or something like that?

&gt; 3) As root
&gt;
&gt;      echo 0x100 &gt; /proc/sys/acpi/pm1_enable
&gt;      cat /proc/sys/acpi/event
&gt;
&gt;    Now hit the power button.  Do you see this
&gt;
&gt;      0x00000100 0x0000000
&gt;
&gt;    appear for each button press? (sysctl is cool)
&gt;    (if not, do you see anything? if not, puzzling
&gt;     the problem must be event handling)


Again it just shut'down to the message Poweroff, as though the apicd has not
enabled the ability to poweroff
Again I get no messages in /var/log/messages, and I do not see 0x00000100
0x0000000
Also apicd -d does not seem to produce any output either, is it suppossed
to?

I have also managed to create some oops's which seem to be directly related
to acpi, if I run acpid -d and then exit it with .

ctrl+c, the complete system crashes, leaving me needing to reboot. If you
want I could take a not of the actual output from the oops.

Crispin

Windows leads to anger. Anger leads to hate. Hate leads to Linux

</body></email><email><emailId>19991111164353</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 16:43:53-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:

&gt; /usr/local/src/acpid/acpid
&gt; echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ
&gt; shutdown -h now
&gt; 
&gt; ==&gt; just hang there (FYI: /proc/sys/acpi/s5_slp_typ
&gt; ist 0x00!)
&gt; 
&gt; /usr/local/src/acpid/acpid
&gt; shutdown -h now
&gt; 
&gt; ==&gt; just hang there (FYI: /proc/sys/acpi/s5_slp_typ
&gt; ist not 0x00!)

Right, from your syslog it looks like S5 SLP_TYP
for your system is 0x0707.  Those, SLP_TYP values
are system dependent (0x0000 is S5 for the PIIX4)
and should be pulled from the ACPI namespace
(that's what acpid is doing)

&gt;&gt;    Now hit the power button.  Do you see this
&gt;&gt;      0x00000100 0x0000000
&gt;&gt;    appear for each button press?
&gt; 
&gt; Yes.

OK.  So ACPI is enabled and working as are
ACPI events.  The problem is I'm doing something
wrong setting those SLP_TYP values and entering
S5 or ACPI on your system is broken.  I'm tempted
to say it's my fault so let me take a closer
look and send out some test patches.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111165019</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 16:50:19-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 5:22:58 PM, Crispin wrote:

&gt; If I press the poweroff button it shutsdown as far as "System halted
&gt; \n\n Poweroff" but it does not poweroff at all. The actual value in
&gt; s5_slp_typ is 0xffffffff not sure about the number of f's, but it is
&gt; all f's. should this be 0x00 or something like that?

try:

load the acpid
echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ
shutdown -h now


That's what Andy told for his patch against 2.3.25-pre3.

&gt;&gt; 3) As root
&gt;&gt;
&gt;&gt;      echo 0x100 &gt; /proc/sys/acpi/pm1_enable
&gt;&gt;      cat /proc/sys/acpi/event
&gt;&gt;
&gt;&gt;    Now hit the power button.  Do you see this
&gt;&gt;
&gt;&gt;      0x00000100 0x0000000
&gt;&gt;
&gt;&gt;    appear for each button press? (sysctl is cool)
&gt;&gt;    (if not, do you see anything? if not, puzzling
&gt;&gt;     the problem must be event handling)


&gt; Again it just shut'down to the message Poweroff, as though the apicd
&gt; has not enabled the ability to poweroff Again I get no messages in
&gt; /var/log/messages, and I do not see 0x00000100 0x0000000

Same here with an Asus TX97-XE with ACPI bios (detected during boot).
(The other system I'm using is an Asus P3B-F).



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111170530</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 17:05:30-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 5:43:53 PM, Andy wrote:

&gt;&gt; /usr/local/src/acpid/acpid
&gt;&gt; shutdown -h now
&gt;&gt; 
&gt;&gt; ==&gt; just hang there (FYI: /proc/sys/acpi/s5_slp_typ
&gt;&gt; ist not 0x00!)
&gt; Right, from your syslog it looks like S5 SLP_TYP
&gt; for your system is 0x0707.  Those, SLP_TYP values
&gt; are system dependent (0x0000 is S5 for the PIIX4)
&gt; and should be pulled from the ACPI namespace
&gt; (that's what acpid is doing)

FYI: Before acpid is running, s5_slp_typ is 0xffffffff, after loading
acpid, s5_slp_typ ist 0x00000707.

&gt; OK.  So ACPI is enabled and working as are
&gt; ACPI events.  The problem is I'm doing something
&gt; wrong setting those SLP_TYP values and entering
&gt; S5 or ACPI on your system is broken.

I don't think/hope, ACPI is broken. It's the newest ASUS Board and
I've flashed up the newest bios.

&gt; I'm tempted to say it's my fault so let me take a closer look and
&gt; send out some test patches.

OK.


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111171025</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 17:10:25-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Crispin Flowerday &lt;cehf2@cam.ac.uk&gt; wrote:
&gt;
&gt; absolutely nothing is reported in the message log,
&gt; all I get it
&gt;
&gt; apcid started, then nothing else reported after
&gt; than.

You might have the same problem that Michael
has, no S5 values in your ACPI namespace
(the _S5_ entry is missing from the AML)

You could confirm that by grabbing the ACPI tools
from my website, building those, and then as root
run

  acpidmp DSDT | acpidisasm | less

Now look for something like this
  
  Name _S5_
    Package
      0x04
      0x00
      0x00
      0x00
      0x00

I suspect you won't find it.

&gt; If I press the poweroff button it shutsdown as far
&gt; as "System halted \n\n

OK, so apparently ACPI is there and working and
ACPI events (power button) work on your system.

&gt; Poweroff"
&gt; but it does not poweroff at all.
&gt; The actual value in s5_slp_typ is 0xffffffff not

0xffffffff is the value the ACPI driver initializes
s5_slp_typ to.  It means s5_slp_typ was not
set by acpid (or by hand)  Until s5_slp_typ
is set to the correct value for your system,
it won't power off.

&gt; Also apicd -d does not seem to produce any output
&gt; either, is it suppossed
&gt; to?

"-d" only causes acpid not to fork and run as
a daemon so that it can be debugged easily with
gdb.  Messages will still go to the syslog.
Maybe I should dump messages to stdout if
"-d" is set.

&gt; I have also managed to create some oops's which seem
&gt; to be directly related
&gt; to acpi, if I run acpid -d and then exit it with .
&gt; 
&gt; ctrl+c, the complete system crashes, leaving me
&gt; needing to reboot. If you
&gt; want I could take a not of the actual output from
&gt; the oops.

Right on.  Yeah, I'd be curious to see the backtrace
and System.map (or /proc/ksyms) if you get a chance.
I'm being pretty careful to do the right thing
no matter what acpid or anything out in userspace
does.  Could very well have missed something.

Thanks,
Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111171636</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 17:16:36-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt; 
&gt; try:
&gt; 
&gt; load the acpid
&gt; echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ
&gt; shutdown -h now
&gt; 
&gt; That's what Andy told for his patch against
&gt; 2.3.25-pre3.

Now, be careful.  Those S5 SLP_TYP values are
system dependent.  "0" only means S5 for the
PIIX4 chipset.  "0" could very well mean something
else (S0,S1,S2,S3,S4) for your system.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111171652</emailId><senderName>"Crispin Flowerday"</senderName><senderEmail>cehf2@cam.ac.uk</senderEmail><timestampReceived>1999-11-11 17:16:52-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

&gt; &gt; If I press the poweroff button it shutsdown as far as "System halted
&gt; &gt; \n\n Poweroff" but it does not poweroff at all. The actual value in
&gt; &gt; s5_slp_typ is 0xffffffff not sure about the number of f's, but it is
&gt; &gt; all f's. should this be 0x00 or something like that?
&gt; 
&gt; try:
&gt; 
&gt; load the acpid
&gt; echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ
&gt; shutdown -h now


If I do this, it reboots

Crispin

</body></email><email><emailId>19991111174703</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 17:47:03-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 4:14:09 AM, Andy wrote:

 My last post was about the P3B-F, this is about an ASUS TX97-XE with
 ACPI bios, 2.2.26 (not patched) and without APM support in the
 kernel.

&gt; 2) Try running acpid and then do a "shutdown -h now".
&gt;    Does your system actually power down or just hang
&gt;    there? (if hang, the S5 slp_typ values must be
&gt;    wrong, take a look at your syslog for any
&gt;    interesting messages from acpid
&gt;    "tail -50 /var/log/messages" or wherever your
&gt;    system puts it)

The system crashes, see 3)

&gt; 3) As root

&gt;      echo 0x100 &gt; /proc/sys/acpi/pm1_enable
&gt;      cat /proc/sys/acpi/event

&gt;    Now hit the power button.  Do you see this

&gt;      0x00000100 0x0000000

&gt;    appear for each button press? (sysctl is cool)
&gt;    (if not, do you see anything? if not, puzzling
&gt;     the problem must be event handling)

Nothing appears, the system goes into runlevel 6.

It crashes during "Sending all processes the TERM signal". I guess
that's acpid, which crashes the whole system when I try to kill it.
(On my P3B-F I can kill acpid without a problem).



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111182718</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 18:27:18-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Crispin Flowerday &lt;cehf2@cam.ac.uk&gt; wrote:
&gt; 
&gt; &gt;   acpidmp DSDT | acpidisasm | less
&gt; 
&gt; The top of the output I get is

&gt; 0000003f: Name _S5_
&gt; 00000045:   Package
&gt; 00000047:     0x02
&gt; 00000048:     ZeroOp
&gt; 00000049:     ZeroOp
&gt; 
&gt; does this mean the acpi is broken in the bios, all
&gt; those Zeroop's

No, the ZeroOps are fine (they just mean "0")
One thing that is troubling is that your
_S5_ package has only two elements

  Package
    0x02  # number of elements
    ZeroOp # S5 SLP_TYPa
    ZeroOp # S5 SLP_TYPb

whereas the ACPI specification says the _Sx_
packages contain four elements.  So already
that tells me they weren't reading the spec
carefully.

So when you set s5_slp_typ to 0 and do the
"shutdown -h now" (note the -h not the -r),
your system reboots, right?  If so, this
is leading me more and more to believe you've
got a faulty ACPI implementation.

&gt;&gt; Right on.  Yeah, I'd be curious to see the
&gt;&gt; backtrace

&gt; I have not had the chance to copy it by hand, from
&gt; screen, onto paper, and
&gt; back, but it seems to happen the next time the hard
&gt; disk is accessed or
&gt; sync's, I am not sure yet the first 2 lines, are
&gt; 
&gt; hda:lost interrupt
&gt; Unable to handle kernel NULL poinrter dereference at
&gt; virtual address
&gt; 00000000

OK, only the backtrace and System.map (or /proc/ksyms)
will tell who caused that NULL pointer dereference.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111183035</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 18:30:35-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Thursday, November 11, 1999, 4:14:09 AM, Andy
&gt; wrote:
&gt; 
&gt; Nothing appears, the system goes into runlevel 6.
&gt; 
&gt; It crashes during "Sending all processes the TERM
&gt; signal". I guess that's acpid, which crashes the
&gt; whole system when I try to kill it.
&gt; (On my P3B-F I can kill acpid without a problem).

Try just killing acpid by hand while your system
is running.  Does that cause an immediate crash?

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111185222</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 18:52:22-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

Andy Henroid writes:
&gt;Try just killing acpid by hand while your system
&gt;is running.  Does that cause an immediate crash?

It does for me.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111210147</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 21:01:47-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

Andy Henroid writes:
&gt;You might have the same problem that Michael
&gt;has, no S5 values in your ACPI namespace
&gt;(the _S5_ entry is missing from the AML)

Actually, while acpid doesn't find \_S5, it's there:
00000150: Name _S5_
00000156:   Package
00000158:     0x02
00000159:     0x00
0000015b:     0x00

Is this wrong size consistent with acpid not reporting
SLP_TYP{a,b}?

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111211249</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 21:12:49-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 7:52:22 PM, Michael wrote:

 newest acpid
 2.3.26, without a patch, without APM.
 

&gt; Andy Henroid writes:
&gt;&gt;Try just killing acpid by hand while your system
&gt;&gt;is running.  Does that cause an immediate crash?
&gt; It does for me.

My TX97-XE crashes immediately. Ctrl+Alt+Del doesn't work, I have to
hard-reset the PC.

The P3B-F doesn't crash...


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111213907</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 21:39:07-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

"Michael K. Johnson" writes:
&gt;Is this wrong size consistent with acpid not reporting
&gt;SLP_TYP{a,b}?

If I'd RTFS when I post I wouldn't make a fool of myself.

Any reason for the explicit check?  I mean, I know that it is
required by the standard, but we aren't using more than the
first two, and this seems to violate the standard rule to be
conservative about what we generate and liberal about what we
accept.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111214611</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 21:46:11-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

OK, so there are two problems and I believe
I have a handle on both of them

1) A lot of systems have _Sx_ packages with only
   two elements instead of the specified four.
   Quick fix to acpid coming.
2) The lockup at control-c or system shutdown
   after acpid is started is probably due to
   incorrect signal handling in acpi_do_event
   (which handles reading of /proc/sys/acpi/event)
   Verification and fix coming.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991111223551</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 22:35:51-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>


OK, the attached patch should fix the problems
reported (or you can just grab the full
acpid-111199.tar.gz from my website
http://www.geocities.com/SiliconValley/Hardware/3165/)

Let me know if you still see any problems.
I appreciate everyones' help debugging this.

The fix was entirely confined to userspace (acpid)
The lockup on control-c and system crash appear
to be the result of doing system calls from the
signal handler after receiving a SIGINT.  This
is probably not a good idea but certainly should
not cause a crash.  I'm going to track down the
real source of the problem.  Could be me or
could be elsewhere in the kernel.

Thanks,
Andy





=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpid_patch-110199.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991111225918</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 22:59:18-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

Andy Henroid writes:
&gt;OK, the attached patch should fix the problems

Bingo, both problems fixed.  I like the new -d debugging
output, as well.  Thanks!

&gt;The fix was entirely confined to userspace (acpid)
&gt;The lockup on control-c and system crash appear
&gt;to be the result of doing system calls from the
&gt;signal handler after receiving a SIGINT.  This
&gt;is probably not a good idea but certainly should
&gt;not cause a crash.  I'm going to track down the
&gt;real source of the problem.  Could be me or
&gt;could be elsewhere in the kernel.

I tried to look at it but the magic sysreq doesn't work
on this machine (can't figure out how to make the weird
laptop keyboard generate the correct key sequence...) so
I couldn't look at the state to figure out what was going
wrong.

If you want me to look into it tomorrow on the server,
where I ought to be able to make the magic sysreq key
work, let me know.

Thanks for the fix,

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991111235640</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 23:56:40-0400</timestampReceived><subject>Re: [Acpi] Re: power off with 2.3.26</subject><body>

 Thursday, November 11, 1999, 11:35:51 PM, Andy wrote:

&gt; or you can just grab the full
&gt; acpid-111199.tar.gz from my website
&gt; http://www.geocities.com/SiliconValley/Hardware/3165/

I've installed the new acpid from your site.

The TX97-XE doesn't crash anymore. :-)

But, when I load acpid, it set's s5_slp_typ to 0 (PIIX4 Board).
Pressing the power button shuts down Linux, but the system only hangs
there... it doesn't turn off (Ctrl+Alt+Del works!) :-(

When I load the acpid and type
shutdown -h now
The P3B-F and the TX97-XE both sill just close Linux and hang there...
they don't power off. (Ctrl+Alt+Del works!). :-(


And (TX97-XE)

Odo:~ # acpid -d
acpid: started
acpid: FACP @ 0x01ffd080
acpid: DSDT @ 0x01ffd080
acpid: S5 SLP_TYPa (0x00)
acpid: S5 SLP_TYPb (0x00)
--------------------------
echo 0x100 &gt;/proc/sys/acpi/pm1_enable
cat /proc/sys/acpi/event

return's nothing. By pressing the power button, Linux shuts down (but
the system just hangs there). :-(




 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991006170544</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-06 17:05:44-0400</timestampReceived><subject>Re: [Acpi] prior kernel version</subject><body>

On Wed, 6 Oct 1999, Marcos Dione wrote:

&gt; 	don't you have a patch to this version, or i need to wait to the 2.4.x
&gt; version of the kernel?

I think there is some confusion what patches are out there currently...
:-)

The base for current work is the 2.3.19 kernel, which contains Andy
Henroid's idea of a lightweight driver. I will try to merge that with the
verbosity/ACPI headers patches currently in the CVS tree tomorrow, so that
CVS is back in sync with what is in the kernel. All of this applies to 2.3
kernels only.

For 2.2, the project had some patches out, but they are discontinued
because we flipped the switch to 2.3 too late and the repository was a
mess. We will generate patches against 2.3.16 (I think, could as well
be 17) and up, but everything below that is unsupported because it would
require hard work to fit the patches to the old memory detection code.
Sorry that I have no better answer.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990903233939</emailId><senderName>brandon</senderName><senderEmail>casey@eecs.tulane.edu</senderEmail><timestampReceived>1999-09-03 23:39:39-0400</timestampReceived><subject>[Acpi] file organization?</subject><body>


i was trying to add the apic tables to proc.

i added structs for the apic tables in acpiint.h, and a pointer
declaration for the table at the bottom with the others,
i added a case for ACPI_SIG_APIC in the switch statement that assigns
a value to the pointer in init.c
and i added an apic read function and a proc entry mainly by looking at
the other functions to proc.c

i'm getting some undefined reference errors at linking for acpi_apic (my
apic table pointer) in init.o and proc.o?

i think my problem is that i don't fully understand the organization of
the directories.
what i really want is a description of the organization of the
files and directories - what should go where, what should not go where.

i noticed that there are declarations for the acpi table header, root
system description table, etc. in both acpiint.h and
subsystem/include/acpitables.h, and i don't understand that.

i don't know, whatever you think will help me get a grasp on how your acpi
patches are supposed to work. i've been reading that 300+ acpi document
for a while, but i don't quite have a hold of the total picture.

i'm not really expecting any solutions to what's wrong with my
modifications(unless by some chance you know exactly whats wrong), but any
help is of course welcome.

thanks,
-brandon

</body></email><email><emailId>19990801131334</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-01 13:13:34-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

On Sun, 1 Aug 1999, Simon Richter wrote:

&gt;  - Few remote X connections
&gt;     It is the duty of the X server to notify/state-save all of its
&gt;     clients. If all of the clients are ACPI aware, this should not be a
&gt;     great problem, since the (not yet existant) specification for aware
&gt;     clients tells how to react (close the connection and wait for
&gt;     notification from the server).

Addendum: If the server and the machine running the client go to sleep, te
client machine shall use wake-on-lan.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  3:08pm  up 1 day,  3:23,  2 users,  load average: 1.02, 1.75, 2.13

</body></email><email><emailId>19990801143300</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-01 14:33:00-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

On Sun, 1 Aug 1999, Simon Richter wrote:

&gt; A very important step for the near future will be defining the userspace
&gt; API. I've already wasted some thoughts on this:

What I forgot to write: Comments are, as always, encouraged and welcome.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:31pm  up 1 day,  4:46,  3 users,  load average: 1.26, 1.14, 1.14

</body></email><email><emailId>19990802190008</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-02 19:00:08-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

&gt; -----Original Message-----
&gt; From: Simon Richter
&gt; [mailto:geier@phobos.fachschaften.tu-muenchen.de] 
&gt; Sent: Saturday, July 31, 1999 6:49 PM
&gt; To: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] Organisational stuff and the APIs
&gt; 

&gt; A very important step for the near future will be
&gt; defining the userspace
&gt; API. I've already wasted some thoughts on this:

Isn't kernel-space a better place to be determining
process activity and system resource usage?  I'm
not confident that a lot of applications are going
to be made ACPI-aware and even those that are aren't
going to know all the system resources that they
are using ("Is this file on a local disk? NFS?
Ramdisk?"  "Is the route to this client over my
first or second ethernet card?")

Further, for ACPI-unaware applications I don't
think heuristics (eg. program is niced &gt;10
therefore shouldn't be considered for resource
usage) are going to be adequate.

Why not push this stuff (at least detection
if not control) down into the scheduler and
device drivers allowing for transparent ACPI
support?  There is going to have to be quite a
bit of work in kernel-space anyway to support
D-states.

Thanks,
Andy


_____________________________________________________________
Do You Yahoo!?
Free instant messaging and more at http://messenger.yahoo.com

</body></email><email><emailId>19990802213146</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-02 21:31:46-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

On Mon, 2 Aug 1999, Andy Henroid wrote:

&gt; &gt; A very important step for the near future will be defining the
&gt; &gt; userspace API. I've already wasted some thoughts on this:

&gt; Isn't kernel-space a better place to be determining process activity and
&gt; system resource usage? 

Yes and no. You can get some numbers better and easier from kernelspace,
that is true, but comparison with configured values and things like these
"plugins" are better done in userspace. A second aspect would be kernel
size, of course.

&gt; I'm not confident that a lot of applications are going to be made
&gt; ACPI-aware and even those that are aren't going to know all the system
&gt; resources that they are using ("Is this file on a local disk? NFS? 
&gt; Ramdisk?"  "Is the route to this client over my first or second ethernet
&gt; card?") 

Most of this will be the duty of libacpi, esp. looking what resources are
needed for accessing a file handle. The great difference between an
"aware" application and one that is not is that you don't need to guess on
some things anymore. What exactly these things are is something I cannot
see yet, I'm afraid.

&gt; Further, for ACPI-unaware applications I don't
&gt; think heuristics (eg. program is niced &gt;10
&gt; therefore shouldn't be considered for resource
&gt; usage) are going to be adequate.

Well, don't get me wrong, I don't want to hardcode these rules, but rather
suggest them in the default config file. I think a bit of heuristics is
needed to optimize the system, and I believe that in 99% of cases a task
that is niced &gt; 10 is not meant to use the processor at all cost, so
saving battery power here might be useful.

Many things in computing are based on heuristics, for example branch
prediction and drive readahead. Esp. the latter is a thing I wouldn't want
to miss...

&gt; Why not push this stuff (at least detection
&gt; if not control) down into the scheduler and
&gt; device drivers allowing for transparent ACPI
&gt; support?  There is going to have to be quite a
&gt; bit of work in kernel-space anyway to support
&gt; D-states.

I'm afraid this isn't as easy for Linux as it is under Windows. In fact,
many people I know use X11 remotely, and the ACPI drivers need to cope
with that. If an X server is not used for some time, it should be able to
go to sleep without the clients hanging up on it because it doesn't
respond in time, and the client machine should be able to go to sleep as
well, if all the programs are just waiting for input. And I think that my
clock is not important enough to keep the server awake, so the clock
should be able to note that it is not important, etc.

You see, fully transparent handling is near to impossible. :-/

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  9:09pm  up 2 days,  9:25,  1 user,  load average: 1.03, 1.05, 1.05

</body></email><email><emailId>19990803064526</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-03 06:45:26-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; On Mon, 2 Aug 1999, Andy Henroid wrote:
&gt; 
&gt;&gt; Isn't kernel-space a better place to be
&gt;&gt; determining process activity and system resource
&gt;&gt; usage? 
&gt; 
&gt; Yes and no. You can get some numbers better and
&gt; easier from kernelspace, that is true, but
&gt; comparison with configured values and things like
&gt; these "plugins" are better done in userspace.
&gt; A second aspect would be kernel size, of course.

I'm not sure why comparison between current
values and a policy table would be any more
difficult in kernel space than in user land.
Anyway, I'm not really advocating moving
the entire policy manager into the kernel,
just the resource detection part.

&gt; Most of this will be the duty of libacpi, esp.
&gt; looking what resources are needed for accessing a
&gt; file handle. The great difference between an
&gt; "aware" application and one that is not is that you
&gt; don't need to guess on some things anymore. What
&gt; exactly these things are is something I cannot
&gt; see yet, I'm afraid.

If resource tracking were done down in the kernel
there wouldn't be a need to guess.  And even
for ACPI-aware applications, apps are notoriously bad
for keeping track of their own resources.  How much
pain it is, for instance, to avoid leaking dynamic
memory and that's not [really] even a shared
resource.

&gt; Many things in computing are based on heuristics,
&gt; for example branch prediction and drive readahead.
&gt; Esp. the latter is a thing I wouldn't want
&gt; to miss...

Heuristics for optimization are quite
different from the heuristics you are suggesting
for ACPI.  If an optimization heuristic fails
to accurately predict the behavior of the system,
everything still works, just a bit slower.
If your ACPI heuristics fail there would be
bigger problems.  The system might, for example,
shutdown a device even though it is still in use.

&gt; I'm afraid this isn't as easy for Linux as it is
&gt; under Windows. In fact, many people I know use X11
&gt; remotely, and the ACPI drivers need to cope
&gt; with that. If an X server is not used for some time,
&gt; it should be able to go to sleep without the clients
&gt; hanging up on it because it doesn't respond in time,

I'm not sure I totally follow you here.  So,
you've got an X-server with connected clients but
no actual X traffic so you want to shutdown the
X-server's network card, etc.  Is that right? Cool,
but sounds kind of specialized/contrived.  I
think you are getting in way over your head if
you are looking to dig into the X-server.

If you are really serious about getting ACPI into
Linux you need to start small and you need to
minimize the impact on the rest of the system.
Power management is going to be bitter enough
of a pill without people having to tear into
every application to support it.  (If possible,
save the effort for fixing device drivers
which you can't avoid)

&gt; You see, fully transparent handling is near to
&gt; impossible. :-/

That may be but I'm not yet convinced.

Thanks for lending your ear.

-Andy


_____________________________________________________________
Do You Yahoo!?
Free instant messaging and more at http://messenger.yahoo.com

</body></email><email><emailId>19990803110108</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-03 11:01:08-0400</timestampReceived><subject>Re: [Acpi] Organisational stuff and the APIs</subject><body>

On Mon, 2 Aug 1999, Andy Henroid wrote:

&gt; &gt; these "plugins" are better done in userspace.

&gt; I'm not sure why comparison between current
&gt; values and a policy table would be any more
&gt; difficult in kernel space than in user land.

Reading the config file *will* be more difficult from kernelspace, since
the kernel does not have the necessary structures for accessing the file
system, so I think reading the config file is more fun in userspace. :-)

Where the actual comparison happens is pretty indifferent, but since we
already have a daemon running, we can keep things out of the kernel, which
means additional stability and a smaller kernel.

&gt; Anyway, I'm not really advocating moving
&gt; the entire policy manager into the kernel,
&gt; just the resource detection part.

I think it would be hard to keep that out of the kernel... :-)

&gt; If resource tracking were done down in the kernel
&gt; there wouldn't be a need to guess.

Imagine a program that locks files on a NFS volume, then is sent to sleep
by the user pressing the power button. I'm not sure what I should do in
this case. If the program would give me a hint, I could perhaps do better
than to keep the files locked until someone thinks he needs to wake the
machine up.

&gt; And even for ACPI-aware applications, apps are notoriously bad for
&gt; keeping track of their own resources.  How much pain it is, for
&gt; instance, to avoid leaking dynamic memory and that's not [really] even a
&gt; shared resource. 

I do agree with you that the kernel still needs to track the user
programs' resources, that is for sure, but I want to give them (limited)
control in the form of hints ("I'll need this handle again very soon",
...). libacpi/acpid can then make a statement like "Don't shut down
network card xx").

&gt; If your ACPI heuristics fail there would be
&gt; bigger problems.  The system might, for example,
&gt; shutdown a device even though it is still in use.

I just re-read my mail, and I'm starting to think that it is a bit unclear
on some things (slightly... :-) ). I will try to make a better (official?)
text tonight, when Max and I meet &lt;scribbling it on the agenda&gt;.

But what I haven't found is a rule where a device that is still used is
shut down, except for the case where the CPU may be clocked down under
full load when only nice&gt;10 programs are running. Where did you find that?

[X11]

&gt; I'm not sure I totally follow you here.  So,
&gt; you've got an X-server with connected clients but
&gt; no actual X traffic so you want to shutdown the
&gt; X-server's network card, etc.  Is that right? Cool,
&gt; but sounds kind of specialized/contrived.  I
&gt; think you are getting in way over your head if
&gt; you are looking to dig into the X-server.

Well, the problem is that many users have X11 with remote connections
running, and they will notice that the system will refuse to sleep because
of these connections. We need to treat them in a special way. Another
thing will be NFS, but this can be handled transparently.

[Saving (human) power for more important issues]

You are right, there has to be a priority. I will start on acpid ASAP and
leave the X stuff alone... The kernel drivers are Max's domain, I will
talk to him about that tonight.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
 11:49am  up 3 days, 5 min,  1 user,  load average: 1.02, 1.10, 1.40

</body></email><email><emailId>19991215231226</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-15 23:12:26-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Tuesday, December 14, 1999, 1:36:28 AM, Andy wrote:

&gt;&gt; &gt; Changes
&gt;&gt; &gt; * Allow kernel to be built with both ACPI and APM.
&gt;&gt; &gt;     This is needed so that Linux distribution
&gt;&gt; &gt;     vendors can provide power management support
&gt;&gt; &gt;     to the widest range of systems (both ACPI
&gt;&gt; &gt;     and APM support in a single kernel).
&gt;&gt; &gt;     If building with both ACPI and APM, ACPI
&gt;&gt; &gt;     is tried first and then fallback to APM
&gt;&gt; &gt;     if ACPI is missing or if a broken ACPI
&gt;&gt; &gt;     implementation is detected.
&gt;&gt; 
&gt;&gt; Is that Adam's Patch? Are there any problems
&gt;&gt; expected for ACPI?

&gt; No, not exactly.  This patch allows you to build
&gt; with both ACPI and APM, but only one or the other
&gt; is actually turned on.  Adam's patch relies on
&gt; both ACPI and APM being on and that is a problem.
 
&gt; If ACPI S5 fails, I might be able to flip ACPI
&gt; off, APM on, and then call apm_power_off.  Let
&gt; me give that a try and see if it works.

I hope your patch is included in 2.3.33. Otherwise I've downloaded
13 MB for nothing...

Bug report:
TX97-XE: This board doesn't even boot if ACPI and APM is compiled in.
It stops at the INITxxx line. Ctrl+Alt+Del doesn't work.


P3B-F: With ACPI and APM compiled in it boots, but a shutdown -h now
still doesn't power off the system, but the screen is now blanked!

With only ACPI compiled in shutdown -h now doesn't power off nor blank
the screen...

To my understanding, that's very strange... isn't it?


I'm using the acpid from 1999-11-26


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991216001300</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-16 00:13:00-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;
&gt;&gt; If ACPI S5 fails, I might be able to flip ACPI
&gt;&gt; off, APM on, and then call apm_power_off.  Let
&gt;&gt; me give that a try and see if it works.
&gt; 
&gt; I hope your patch is included in 2.3.33. Otherwise
&gt; I've downloaded 13 MB for nothing...

No, it's not in 2.3.33.  Sorry.  Even the patch
that allows both to be built together (but only one
at a time active) is being held up by Linus.
So, for now, build for one or the other.

Thanks,
Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991217215943</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-17 21:59:43-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Thursday, December 16, 1999, 1:13:00 AM, Andy wrote:

&gt;&gt; I hope your patch is included in 2.3.33. Otherwise
&gt;&gt; I've downloaded 13 MB for nothing...
&gt; No, it's not in 2.3.33.  Sorry.

I thought it, because there was no acpi file in the patch... I hoped
it's called other... :-)

btw: Can I (for the future) just download Linus's patch or does this patch
only contain bugfixes but no new functions?

&gt; Even the patch that allows both to be built together (but only one
&gt; at a time active) is being held up by Linus. So, for now, build for
&gt; one or the other.

OK. I'm going to try your "2.3.32-pre3" patch...



Just another question. I think you know what changed in the acpi stuff
for each new kernel. Would it be possible to just write a line to this
list like this (e.g.)?

Kernel 2.3.33; no new acpi stuff (since 2.3.19).


Or don't you know exactly when a knew kernel comes out and if it's
with your stuff?

That's just an idee and I really don't want you to have more work!



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991218010611</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-18 01:06:11-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Monday, December 13, 1999, 11:44:00 PM, Andy wrote:

&gt; This patch is against 2.3.32-pre3 (also works
&gt; against 2.3.32-pre2)

I've used it against 2.3.33 (final)

&gt; Changes
&gt; * Allow kernel to be built with both ACPI and APM.
&gt;     This is needed so that Linux distribution
&gt;     vendors can provide power management support
&gt;     to the widest range of systems (both ACPI
&gt;     and APM support in a single kernel).
&gt;     If building with both ACPI and APM, ACPI
&gt;     is tried first and then fallback to APM
&gt;     if ACPI is missing or if a broken ACPI
&gt;     implementation is detected.

Now, the P3B-F and the TX97-XE are booting with ACPI and APM compiled
in, but they both don't power off nor blank the screen after
"shutdown -h now".

Also, there's no /proc/apm file available. Not before nor after
loading apmd. Is that correct?





Question: Does the I2O support, if compiled in, hurt ACPI?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991218013256</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-18 01:32:56-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Monday, December 13, 1999, 11:44:00 PM, Andy wrote:
&gt; 
&gt; &gt; This patch is against 2.3.32-pre3 (also works
&gt; &gt; against 2.3.32-pre2)
&gt; 
&gt; I've used it against 2.3.33 (final)

&gt; Now, the P3B-F and the TX97-XE are booting with ACPI
&gt; and APM compiled in, but they both don't power off
&gt; nor blank the screen after "shutdown -h now".
&gt; 
&gt; Also, there's no /proc/apm file available. Not
&gt; before nor after loading apmd. Is that correct?

That patch uses ACPI if it is found and turns
off APM.  If you want to force use of APM, you
can add

  append="acpi=off"

to /etc/lilo.conf.  Like I've been saying, you
can't have both ACPI and APM enabled at once.

I was looking at falling back to APM power off
if ACPI S5 doesn't work.  It now looks like
that might not even be possible to do cleanly.
(Trying to do this causes more problems than it
solves.)

Also a general heads up; Linux 2.3 is fast
approaching code freeze.  Don't expect much
in the way of new features moving toward 2.4
but I should be able to focus on looking
at bugs and problems for various platforms.

Thanks,
Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991012182627</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-12 18:26:27-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.21.

Changes
* changed cli's to irq spinlocks for SMP friendliness
* enable ACPI when user enables one or more events,
  disable ACPI when user disables all events
* claim ACPI I/O ports
* check for sysadmin privileges for ioctl

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.21.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991101213305</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-01 21:33:05-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.25-pre3.

Changes
* added back soft off (S5) on halt.  To use on
  PIIX4, for example

    echo 0x00 &gt; /proc/sys/acpi/s5_slp_typ
    shutdown -h now

* FACS support in preparation for S1-4
* minor array size fix

-Andy




=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.25-3.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991109005818</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-09 00:58:18-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.27-pre1

Changes
* First cut at an ACPI&lt;-&gt;driver interface
  (added acpi_register, acpi_unregister,
   acpi_access, and acpi_dev_idle)
* Modified drivers/char/keyboard.c for very simple
  use of ACPI driver interface (Note that the
  ACPI function calls disappear if CONFIG_ACPI
  is not set)
* Added Documentation/acpi.txt to explain
  ACPI driver interface
* Removed kernel module code as ACPI can no
  longer be built as a module (driver interface
  must be static)

Feedback on the interface?

Thanks,
Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.27-1.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991111033214</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-11 03:32:14-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.27-pre6

Changes
* Retooled acpi_register parameters to ease
  future expansion (adding capabilities and
  latencies)
* Added simple use of ACPI interface to
  drivers/char/console.c
* Use phys_to_virt for table mapping if ioremap
  fails (as it does for at least one system)
* Use ioremap instead of ioremap_nocache
* Pack ACPI structures
* Better error reporting for missing RSDT
* Wipe build-as-module reference from Configure.help

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.27-6.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991123011432</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-23 01:14:32-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.29-pre3

Changes
* Simplified C-state /proc/sys/acpi/ interface
* Improved C3 policy (check bus master activity)
* Return to C0 from C3 on bus mastering request
* Report working C2/C3
* Soft-off (S5) enabled for SMP systems

Using this patch and the updated acpid from my
website

 
http://www.geocities.com/SiliconValley/Hardware/3165/

(uniprocessor) systems that support C2 and/or C3
will use them correctly.

-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.29-3.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991204155214</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-04 15:52:14-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Sunday, November 28, 1999, 12:27:27 AM, Andy wrote:

&gt; This patch is against 2.3.30-pre2

I've used it against 2.2.29 and with the 2.3.30-pre6-patch.

&gt; Changes
&gt; * Added support for S1

Is that the sleep?

&gt; * Minor changes to /proc/sys/acpi/ interface for S1

&gt; Using this patch and the updated acpid from
&gt; my website

&gt; http://www.geocities.com/SiliconValley/Hardware/3165/

&gt; systems that support S1 will be able to use it
&gt; by pressing the sleep button (if you have one)
&gt; or with

&gt;   echo 1 &gt; /proc/sys/acpi/sleep

TX97-XE:
Dec  4 16:37:42 Odo acpid: started
Dec  4 16:37:42 Odo acpid: FACP @ 0x01ffd080
Dec  4 16:37:42 Odo acpid: DSDT @ 0x01ffd100
Dec  4 16:37:42 Odo acpid: S0 SLP_TYP (0x0505)
Dec  4 16:37:42 Odo acpid: S1 SLP_TYP (0x0404)
Dec  4 16:37:42 Odo acpid: S2 not supported
Dec  4 16:37:42 Odo acpid: S3 not supported
Dec  4 16:37:42 Odo acpid: S4 not supported
Dec  4 16:37:42 Odo acpid: S5 SLP_TYP (0x0000)

The TX97-XE should support S1.

After typing
echo 1 &gt; /proc/sys/acpi/sleep
the screen darks and after about one second the screen return's and
the system works as usual.


P3B-F:
Dec  4 16:32:03 Sisko acpid: started
Dec  4 16:32:03 Sisko acpid: FACP @ 0x0fffc080
Dec  4 16:32:03 Sisko acpid: DSDT @ 0x0fffc100
Dec  4 16:32:04 Sisko acpid: S0 SLP_TYP (0x0505)
Dec  4 16:32:04 Sisko acpid: S1 SLP_TYP (0x0606)
Dec  4 16:32:04 Sisko acpid: S2 not supported
Dec  4 16:32:04 Sisko acpid: S3 SLP_TYP (0x0606)
Dec  4 16:32:04 Sisko acpid: S4 SLP_TYP (0x0707)
Dec  4 16:32:04 Sisko acpid: S5 SLP_TYP (0x0707)

The P3B-F should support S1. Interesting is, that STR (S3) and S1 has
the same value! (And again with S4 and S5).

After typing
echo 1 &gt; /proc/sys/acpi/sleep
the screen darks (but my screen doesn't go into suspend mode!). When I
press &lt;space&gt; (afaik shouldn't &lt;space&gt; work during S1, doesn't it?)
the screen returns but the system hangs. Even Ctrl+Alt+Del doesn't
work.

&gt; Pressing either the sleep or power button will
&gt; awaken a sleeping system.

I haven't tested this on my P3B-F...

&gt; Caveats
&gt; * Screen will only be blanked from console mode.
&gt;   If you hit the sleep button from X, the system
&gt;   will sleep but the screen will not be blanked

no X installed.

&gt; * Ability to run control methods and put all system
&gt;   devices into D3 before S1 is not yet there.
&gt;   Some systems want devices (eg. video controller
&gt;   on a laptop I have) in D3 before entering S1.
&gt;   From the spec, it isn't clear that this should
&gt;   be necessary though.
&gt; * I've noticed some network problems (inability
&gt;   to connect) after resuming from a long sleep.
&gt; * The code is currently only enabled to wake
&gt;   from sleep or power buttons.  Wake from
&gt;   other events (USB, LAN, etc.) will take
&gt;   additional work.




 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991206164319</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-06 16:43:19-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:

&gt; &gt; Changes
&gt; &gt; * Added support for S1
&gt; 
&gt; Is that the sleep?

Yes, S1 is the first level system sleep state
and out of S1-S4 it is the most widely supported.

&gt; The TX97-XE should support S1.
&gt; 
&gt; After typing
&gt; echo 1 &gt; /proc/sys/acpi/sleep
&gt; the screen darks and after about one second the
&gt; screen return's and the system works as usual.

Yes, I've heard a couple reports like this.
This sounds like the system claims to support
S1 but when I actually set the registers and
enter S1, it either doesn't go into S1 or
immediately returns from S1.  (the second
pause is the time it takes to fetch and
reset the system time from the real-time
clock)

&gt; The P3B-F should support S1. Interesting is, that
&gt; STR (S3) and S1 has the same value! (And again
&gt; with S4 and S5).

It is not uncommon to have duplicate SLP_TYP
values.  What the system does could really
be the same for S1 and S3 or S4 and S5.  The
only difference is whether the wakeup vector
is called or not.

&gt; After typing
&gt; echo 1 &gt; /proc/sys/acpi/sleep
&gt; the screen darks (but my screen doesn't go into
&gt; suspend mode!). When I
&gt; press &lt;space&gt; (afaik shouldn't &lt;space&gt; work during
&gt; S1, doesn't it?)

No, right now, the system will only wake up
on pressing the power or sleep buttons.  The
ability to wakeup on other events (keyboard,
mouse, modem, LAN, etc.) will be added
in the future.

&gt; the screen returns but the system hangs. Even
&gt; Ctrl+Alt+Del doesn't
&gt; work.

Hmm..  Does the power button work normally
through ACPI? (ie. when the system is running
does the power button cause an orderly shutdown?)
If so, it should wake the system from S1.

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991206225952</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-06 22:59:52-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Monday, December 06, 1999, 5:43:19 PM, Andy wrote:

&gt;&gt; The TX97-XE should support S1.
&gt;&gt; 
&gt;&gt; After typing
&gt;&gt; echo 1 &gt; /proc/sys/acpi/sleep
&gt;&gt; the screen darks and after about one second the
&gt;&gt; screen return's and the system works as usual.

&gt; Yes, I've heard a couple reports like this.
&gt; This sounds like the system claims to support
&gt; S1 but when I actually set the registers and
&gt; enter S1, it either doesn't go into S1 or
&gt; immediately returns from S1.  (the second
&gt; pause is the time it takes to fetch and
&gt; reset the system time from the real-time
&gt; clock)

OK. maybe a false BIOS implementation, that's  possible. But why
should it return immediately (Just a question, not a critique)?

&gt;&gt; The P3B-F should support S1. Interesting is, that
&gt;&gt; STR (S3) and S1 has the same value! (And again
&gt;&gt; with S4 and S5).

&gt; It is not uncommon to have duplicate SLP_TYP
&gt; values.  What the system does could really
&gt; be the same for S1 and S3 or S4 and S5.

S4 is afaik "Suspend to Disk" and S5 is power off. Asus told (on their
hp), that S4 isn't activated yet (so S4 will led to S5). This makes
sence for me.

But why will S3 led to S1? Because of my ISA-SB? Does the board detect
the ISA-Card and deactivate S3? Or is it your daemon (I don't think
so)?

&gt; The only difference is whether the wakeup vector is called or not.

?

&gt;&gt; After typing
&gt;&gt; echo 1 &gt; /proc/sys/acpi/sleep
&gt;&gt; the screen darks (but my screen doesn't go into
&gt;&gt; suspend mode!). When I
&gt;&gt; press &lt;space&gt; (afaik shouldn't &lt;space&gt; work during
&gt;&gt; S1, doesn't it?)

&gt; No, right now, the system will only wake up
&gt; on pressing the power or sleep buttons.  The
&gt; ability to wakeup on other events (keyboard,
&gt; mouse, modem, LAN, etc.) will be added
&gt; in the future.

But what's this for a strange mode, where I can return by pressing
&lt;space&gt;? Sn?

&gt;&gt; the screen returns but the system hangs. Even
&gt;&gt; Ctrl+Alt+Del doesn't
&gt;&gt; work.

&gt; Hmm..  Does the power button work normally
&gt; through ACPI? (ie. when the system is running
&gt; does the power button cause an orderly shutdown?)

Yes, but no power off.

&gt; If so, it should wake the system from S1.

I'll check this. But why is the screen restored with &lt;space&gt;?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991207185711</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-07 18:57:11-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Monday, December 06, 1999, 5:43:19 PM, Andy wrote:
&gt; 

&gt; &gt; This sounds like the system claims to support
&gt; &gt; S1 but when I actually set the registers and
&gt; &gt; enter S1, it either doesn't go into S1 or
&gt; &gt; immediately returns from S1.
&gt; 
&gt; OK. maybe a false BIOS implementation, that's 
&gt; possible. But why should it return immediately
&gt; (Just a question, not a critique)?

The driver sets the registers to go into S1 but
the systems keeps running in S0.  There is really
no good way for the ACPI driver to detect that S1
was not entered.  Even if it could, there is
nothing the driver could do in place of the
sleep.  Is that what you were asking?

&gt; But why will S3 led to S1? Because of my ISA-SB?
&gt; Does the board detect the ISA-Card and deactivate
&gt; S3? Or is it your daemon (I don't think so)?

The more I think about it, the more I suspect that
this is either a bug on ASUS's part or a work-around
for a particular operating system's poor S-state
policy implementation.  It seems that the system
could use S1 for S3, there just would not be as
much power savings as would be expected for S3
and device context would unnecessarily be saved
and restored.  Seems foolish though so maybe this
is just a bug.

&gt; But what's this for a strange mode, where I can
&gt; return by pressing &lt;space&gt;? Sn?

Are you sure the system is actually going to
sleep?  You should probably see a blinking LED
or something on the front panel to indicate
sleep.  It sounds like the display is being
blanked (which is unblanked by a keypress) but
not going to sleep.  Yeah?

Thanks,
Andy

__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991209220445</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-09 22:04:45-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Tuesday, December 07, 1999, 7:57:11 PM, Andy wrote:

&gt;&gt; &gt; This sounds like the system claims to support
&gt;&gt; &gt; S1 but when I actually set the registers and
&gt;&gt; &gt; enter S1, it either doesn't go into S1 or
&gt;&gt; &gt; immediately returns from S1.
&gt;&gt; OK. maybe a false BIOS implementation, that's
&gt;&gt; possible. But why should it return immediately
&gt;&gt; (Just a question, not a critique)?
&gt; The driver sets the registers to go into S1 but
&gt; the systems keeps running in S0.  There is really
&gt; no good way for the ACPI driver to detect that S1
&gt; was not entered.  Even if it could, there is
&gt; nothing the driver could do in place of the
&gt; sleep.  Is that what you were asking?

Not exactly. Why should the system return from S1 immediately? Why
doesn't it tell acpimd it doesn't support S1 if it doesn't or why
doesn't it stay there if it does...? Bugs?

&gt;&gt; But why will S3 led to S1? Because of my ISA-SB?
&gt;&gt; Does the board detect the ISA-Card and deactivate
&gt;&gt; S3? Or is it your daemon (I don't think so)?
&gt; The more I think about it, the more I suspect that
&gt; this is either a bug on ASUS's part or a work-around
&gt; for a particular operating system's poor S-state
&gt; policy implementation.  It seems that the system
&gt; could use S1 for S3, there just would not be as
&gt; much power savings as would be expected for S3
&gt; and device context would unnecessarily be saved
&gt; and restored.  Seems foolish though so maybe this
&gt; is just a bug.

I know the P3B-F does support S3 with Win98. It is also told on the
asus-hp. But, I can't activate S3 in Bios, I can only deactivate it or
set it to auto. If I choose auto, the BIOS detects if my system
supports S3 (beside the board). Maybe the BIOS thinks the board
doesn't support S3 (because of the Soundcard or something else) and
set's S3 to S1...?

&gt;&gt; But what's this for a strange mode, where I can
&gt;&gt; return by pressing &lt;space&gt;? Sn?

&gt; Are you sure the system is actually going to
&gt; sleep?  You should probably see a blinking LED

No. The LED isn't blinking (It does with apm -s, just FYI).

&gt; or something on the front panel to indicate
&gt; sleep.  It sounds like the display is being
&gt; blanked (which is unblanked by a keypress) but
&gt; not going to sleep.  Yeah?

Yes. And I can't even return with the power button!


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991210185124</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-10 18:51:24-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Tuesday, December 07, 1999, 7:57:11 PM, Andy wrote:
&gt; 
&gt; Not exactly. Why should the system return from S1
&gt; immediately? Why doesn't it tell acpimd it doesn't
&gt; support S1 if it doesn't or why doesn't it stay
&gt; there if it does...? Bugs?

Yes, a buggy impl is possible but it's definitely
possible I'm doing something wrong.  Let me take
a closer look at running _PTS and see if that
helps.  Running control methods takes a fully
functional AML interpreter so this might take
a fair amount of effort.  _PTS could also be
how some systems differentiate between, for
example, S1 and S3 so this might answer our
questions about why _S1_ and _S3_ have the
same SLP_TYP values on your system.

Thanks for bearing with me.

-Andy

__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991213224400</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-13 22:44:00-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.32-pre3 (also works
against 2.3.32-pre2)

Changes
* Allow kernel to be built with both ACPI and APM.
    This is needed so that Linux distribution
    vendors can provide power management support
    to the widest range of systems (both ACPI
    and APM support in a single kernel).
    If building with both ACPI and APM, ACPI
    is tried first and then fallback to APM
    if ACPI is missing or if a broken ACPI
    implementation is detected.
* Add kernel command line parsing to ACPI
    Allow user to explicitly disable ACPI from
    the kernel command line.

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com
["acpi_patch-2.3.32-3.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991213231516</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-13 23:15:16-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

 Monday, December 13, 1999, 11:44:00 PM, Andy wrote:

&gt; This patch is against 2.3.32-pre3 (also works
&gt; against 2.3.32-pre2)

Nothing against 2.3.31? :-)

&gt; Changes
&gt; * Allow kernel to be built with both ACPI and APM.
&gt;     This is needed so that Linux distribution
&gt;     vendors can provide power management support
&gt;     to the widest range of systems (both ACPI
&gt;     and APM support in a single kernel).
&gt;     If building with both ACPI and APM, ACPI
&gt;     is tried first and then fallback to APM
&gt;     if ACPI is missing or if a broken ACPI
&gt;     implementation is detected.

Is that Adam's Patch? Are there any problems expected for ACPI?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991214003628</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-14 00:36:28-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Monday, December 13, 1999, 11:44:00 PM, Andy wrote:

&gt; &gt; Changes
&gt; &gt; * Allow kernel to be built with both ACPI and APM.
&gt; &gt;     This is needed so that Linux distribution
&gt; &gt;     vendors can provide power management support
&gt; &gt;     to the widest range of systems (both ACPI
&gt; &gt;     and APM support in a single kernel).
&gt; &gt;     If building with both ACPI and APM, ACPI
&gt; &gt;     is tried first and then fallback to APM
&gt; &gt;     if ACPI is missing or if a broken ACPI
&gt; &gt;     implementation is detected.
&gt; 
&gt; Is that Adam's Patch? Are there any problems
&gt; expected for ACPI?

No, not exactly.  This patch allows you to build
with both ACPI and APM, but only one or the other
is actually turned on.  Adam's patch relies on
both ACPI and APM being on and that is a problem.
 
If ACPI S5 fails, I might be able to flip ACPI
off, APM on, and then call apm_power_off.  Let
me give that a try and see if it works.

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991203230602</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-03 23:06:02-0400</timestampReceived><subject>Re: [Acpi] acpi poweroff under 2.3.30</subject><body>

 Thursday, December 02, 1999, 1:37:50 AM, Andy wrote:

&gt;&gt; Under Windows 98/2000 poweroff's work just fine.

&gt; Ah, this is troubling.  It is possible that
&gt; Windows has work-arounds for specific broken
&gt; BIOSs.  Many vendors only validate their
&gt; implementation for Windows so it is also
&gt; possible that they might not be entirely
&gt; spec compliant but do work for the sequence
&gt; of accesses made by Windows.  If Windows is
&gt; getting the machine to actually power-off
&gt; there must be a way to do it from Linux.

Maybe windows power's down with APM? APM worked pretty good for my
under Linux, but unfortunately it is deactivated since 2.2.25. :-)

&gt;&gt; There has been an update for my BIOS (Abit BH6) and
&gt;&gt; now the using acpidmp
&gt;&gt; DSDT | acpidiasm I get 4 fields in the s5 value, but
&gt;&gt; they are all Zeroop.
&gt;&gt; when I run apicd, the value in
&gt;&gt; /proc/sys/acpi/s5_slp_typ is 0xffffffff.

&gt; Hmm..  Can you send me the output of acpidmp?
&gt; With the BIOS update, sounds like the DSDT
&gt; has changed and may have broken acpid.

I've attached (only to ANdy direct)
- acpidmp (P3B-F)
- acpidmp DSDT / acpidisasm (P3B-F)
- acpidmp (TX97-XE)
- acpidmp DSDT / acpidisasm (TX97-XE)



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991206145947</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-12-06 14:59:47-0400</timestampReceived><subject>[Acpi] Re: [PATCH] S5 test</subject><body>

Sven Kirmess writes:
&gt;How do I have to start acpid? I start acpid from the shell as root.

That's fine.

&gt;During shutting down Linux, all processes will get the TERM and KILL
&gt;signal. Is that OK? I guess acpid will be killed before the system
&gt;halts...?

Yes, it will, but that's OK.  acpid has already told the kernel what
to do to go into S5 state, and the kernel won't forget when acpid
dies.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991206162247</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-06 16:22:47-0400</timestampReceived><subject>Re: [Acpi] acpid under 2.3.29</subject><body>

--- Jim Jensen &lt;jensen@cc38617-a.hwrd1.md.home.com&gt;
wrote:
&gt; 
&gt; However, when I start acpid, I get:
&gt; 

&gt; hda: timeout waiting for DMA
&gt; hda: irq timeout: status=0x58 { DriveReady
&gt; SeekComplete DataRequest }
&gt; ide0: reset: success

OK, I've seen a similar timeout warning on one
of my systems.  It occurs after the system
goes into C3 the first time.  It is definitely
not destructive but is annoying and, on at
least your system, causes a HD reset.  I'll
track down the cause.

Thanks for the bug report.

-Andy

__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991206165854</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-06 16:58:54-0400</timestampReceived><subject>Re: [Acpi] [PATCH] S5 test</subject><body>

--- Yuqing Deng &lt;deng@tinker.chem.brown.edu&gt; wrote:
&gt; &gt; 
&gt; &gt; Could anyone who has been having trouble
&gt; &gt; with S5 (on a system that supports S5*)
&gt; &gt; try this patch?  It's a shot in the
&gt; &gt; dark at least.

&gt; The same thing happens.
&gt; Events don't work.
&gt; "shutdown -h now" only blanks the screen.

Yes, like I said, it was a shot in the dark.
I'll keep thinking about how to fix S5.  If
anyone out there has any suggestions or
knowledge about S5 on the systems that are
having problems

  ABIT BH6
  ASUS P3B-F
  ASUS TX97-XE
  ASUS P2B-D
  
feel free to throw something out.  Or if you
have any other systems that are having
problems, please let me know.

Thanks,
Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991210184218</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-10 18:42:18-0400</timestampReceived><subject>Re: [Acpi] Hello...and a new BIOS I think ;)</subject><body>

&gt; -----Original Message-----
&gt; From: Nils Faerber [mailto:Nils.Faerber@unix-ag.org]
&gt; 
&gt; Sent: Thursday, December 09, 1999 8:45 AM
&gt; To: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] Hello...and a new BIOS I think ;)
&gt; 

&gt; something. I had to switch from APM to ACPI because
&gt; my notebook very obviously has some nasty APM
&gt; bugs which causes it to freeze at random times

OK, if they can't get APM right there is also a
good chance that they did ACPI wrong.  So, keep
that in mind.

&gt; And while we are at it, here are two comments about
&gt; some observations:
&gt; - When starting acpid the first harddisk access
&gt; fails and I get a
&gt;     had: interrupt timed out

I'm trying to get to the bottom of a problem
with similar symptoms.  Looks like this occurs
after going into and waking up from C3 the
first time.  Your system continues to work
fine after that first access, right?

&gt;   The machine then starts to sleep, i.e. the power
&gt; LED flashes, display is blanked but not turned off.
&gt; But now I cannot wake it again!

OK, the display will just be blanked and not
powered off yet.  This is expected.  I'm
hearing reports of inability to return from
S1 and this could be because I'm unable to
run the _PTS (prepare to sleep) and _WAK
(wake) control methods right now (the
interpreter is incomplete)  Stay tuned.

&gt; - I can suspend the machine correctly (to disk) when
&gt; acpid is _not_ running using a keyboard hotkey.
&gt; But after resume the system time is not updated
&gt; correctly, i.e. the time

So are you building your kernel with both ACPI
and APM enabled?  You need to pick one or the
other.  The suspend to disk and resume is APM
and, if anything, the time update problem is
their bug or an APM BIOS problem.

&gt; If acpid is running I cannot suspend anymore using
&gt; that hotkey! Even if acpid is killed again.

Yeah, build with either ACPI or APM, not both.

Thanks for the report.

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991213231416</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-13 23:14:16-0400</timestampReceived><subject>Re: [Acpi] ACPI vs. APM power-off: proposed patch to linux-2.3.31/drivers/misc/acpi.c</subject><body>

 Sunday, December 12, 1999, 12:21:14 AM, Adam wrote:

&gt; All my patch does is call the APM power off if the machine is still
&gt; running after the ACPI power off (if both APM and ACPI have been
&gt; configured). My patch works on the machines on which I have tried
&gt; it. Unless there is some harm in it, I plan to keep it in our source
&gt; tree until you folks figure out something more general that still
&gt; automatically does the right thing (i.e., the power turns off when I
&gt; tell shutdown to do that on both ACPI and APM computers).

I think that's the best solution if it really doesn't harm ACPI.


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991218014846</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-18 01:48:46-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI</subject><body>

--- Sven Kirmess &lt;sven.kirmess@gmx.net&gt; wrote:
&gt;  Thursday, December 16, 1999, 1:13:00 AM, Andy
&gt; wrote:

&gt; btw: Can I (for the future) just download Linus's
&gt; patch or does this patch only contain bugfixes but
&gt; no new functions?

You can always download the Linux patch-2.3.x.gz
files and eventually get all of the ACPI patches
I send out to the mailing list.  I say
"eventually" because it might take a while
or several rounds with Linus before my patch
is accepted.

&gt; Just another question. I think you know what changed
&gt; in the acpi stuff for each new kernel. Would it be
&gt; possible to just write a line to this list like
&gt; this (e.g.)?
&gt; 
&gt; Kernel 2.3.33; no new acpi stuff (since 2.3.19).
&gt; 
&gt; Or don't you know exactly when a knew kernel comes
&gt; out and if it's with your stuff?

I really don't know when a patch I send to
Linus is going to appear in the kernel.  I have
to poll www.kernel.org and dig through the
pre-patches just like everybody else.

The little changelog I send out with every patch
is probably your best source for change information.
Normally (unless a patch is delayed by Linus),
those changes are what is going to appear in
the next patch or pre-patch from Linus.

-Andy


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991226000715</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-26 00:07:15-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI (one more time)</subject><body>

 Saturday, December 25, 1999, 12:39:48 AM, Sven wrote:


&gt;&gt; It allows ACPI and APM to coexist in one
&gt;&gt; built kernel (only one or the other is
&gt;&gt; actually enabled at runtime)

&gt; Can the other (apm) be enabled during shutting down Linux? If not,
&gt; what's the advantage to allow both be built into the kernel?

I guess I've seen the advantage as soon as I posted the message.
Monolithic kernels (as used by the big Linux distributors) can be
build and shipped with both power managers. That's as far as I see the
only advantage and of no big interest for a developer kernel now,
right?

I think that's a good idea, but first ACPI power off has to work on
nearly all systems which have ACPI or no distributor will include both
into his kernels... Or will you prevent all not working system from
using ACPI (and therefore switch to APM)? That would also prevent me
from testing ACPI, wouldn't it?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991231190147</emailId><senderName>Simon Richter</senderName><senderEmail>simon.richter@phobos.fs.tum.de</senderEmail><timestampReceived>1999-12-31 19:01:47-0400</timestampReceived><subject>[Acpi] Administrativia: Phobos off during Y2K switch</subject><body>

Hi,

Just a short note: I'm going to turn phobos off now, in case there is
trouble with the power supply (the power folks expect a peak load shortly
after 12AM, when everyone's turning on their 'puters again, and they are
unsure whether this causes difficulties). A good start into Y2K to
everyone, I'm off to the party... *=:-)

   Simon

Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!

</body></email><email><emailId>19991204021357</emailId><senderName>Jim Jensen</senderName><senderEmail>jensen@cc38617-a.hwrd1.md.home.com</senderEmail><timestampReceived>1999-12-04 02:13:57-0400</timestampReceived><subject>[Acpi] acpid under 2.3.29</subject><body>


I have a IBM Thinkpad i1472, bios v3.0, version R01-A3C that works
well with acpid (acpid-112699) - at least it shuts off like it should.
However, when I start acpid, I get:

# acpid -d
acpid: started
acpid: FACP @ 0x0bff0054
acpid: DSDT @ 0x0bff00cc
acpid: S0 SLP_TYP (0x0404)
acpid: S1 SLP_TYP (0x0303)
acpid: S2 not supported
acpid: S3 not supported
acpid: S4 SLP_TYP (0x0101)
acpid: S5 SLP_TYP (0x0000)
hda: timeout waiting for DMA
hda: irq timeout: status=0x58 { DriveReady SeekComplete DataRequest }
ide0: reset: success

Which causes the hard drive to reset to slow mode.  Resetting via
hdparm to UDMA mode works, and everything is fine after that.

FWIW, using acpitools-111899:
/acpidmp FACP | ./acpitbl 
Signature:        FACP
Length:           116
Revision:         0x01
Checksum:         0xb0
OEMID:            IBM
OEM Table ID:     Hammer
OEM Revision:     0x00000001
Creator ID:       IBM
Creator Revision: 0x00000000
FIRMWARE_CTRL:    0x0bff8000
DSDT:             0x0bff00cc
INT_MODEL:        0x00
SCI_INT:          9
SMI_CMD:          0x000000b1
ACPI_ENABLE:      0x55
ACPI_DISABLE:     0xaa
S4BIOS_REQ:       0x77
PM1a_EVT_BLK:     0x0000f100
PM1b_EVT_BLK:     0x00000000
PM1a_CNT_BLK:     0x0000f104
PM1b_CNT_BLK:     0x00000000
PM2_CNT_BLK:      0x0000f130
PM_TMR_BLK:       0x0000f108
GPE0_BLK:         0x0000f118
GPE1_BLK:         0x0000f11c
PM1_EVT_LEN:      4
PM1_CNT_LEN:      2
PM2_CNT_LEN:      1
PM_TM_LEN:        4
GPE0_BLK_LEN:     4
GPE1_BLK_LEN:     4
GPE1_BASE:        16
P_LVL2_LAT:       99
P_LVL3_LAT:       999
FLUSH_SIZE:       0
FLUSH_STRIDE:     0
DUTY_OFFSET:      0
DUTY_WIDTH:       0
DAY_ALRM:         0x00
MON_ALRM:         0x00
CENTURY:          0x32
Flags:            0x00000000


Let me know if there is any other information that I can provide.
Thanks for your work.

       -Jim Jensen		jensen@computer.org

</body></email><email><emailId>19991204012132</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-04 01:21:32-0400</timestampReceived><subject>[Acpi] [PATCH] S5 test</subject><body>


Could anyone who has been having trouble
with S5 (on a system that supports S5*)
try this patch?  It's a shot in the
dark at least.

The patch is generated against 2.3.30-6
but it will also work fine against the
last patch I sent out.

Thank you,
Andy

* Run acpid and look for "acpid: S5 SLP_TYP (0xXXXX)"
  in /var/log/messages


__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com
["acpi_patch-2.3.30-6.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991204154548</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-04 15:45:48-0400</timestampReceived><subject>Re: [Acpi] [PATCH] S5 test</subject><body>

 Saturday, December 04, 1999, 2:21:32 AM, Andy wrote:

 Linux: SuSE 6.2
 Kernel: 2.3.29 with 2.3.30-pre2 and acpi_patch-2.3.30-6.gz
 
&gt; Could anyone who has been having trouble
&gt; with S5 (on a system that supports S5*)
&gt; try this patch?  It's a shot in the
&gt; dark at least.

&gt; The patch is generated against 2.3.30-6
&gt; but it will also work fine against the
&gt; last patch I sent out.


&gt; * Run acpid and look for "acpid: S5 SLP_TYP (0xXXXX)"
&gt;   in /var/log/messages

Asus P3B-F:
Dec  4 16:32:03 Sisko acpid: started
Dec  4 16:32:03 Sisko acpid: FACP @ 0x0fffc080
Dec  4 16:32:03 Sisko acpid: DSDT @ 0x0fffc100
Dec  4 16:32:04 Sisko acpid: S0 SLP_TYP (0x0505)
Dec  4 16:32:04 Sisko acpid: S1 SLP_TYP (0x0606)
Dec  4 16:32:04 Sisko acpid: S2 not supported
Dec  4 16:32:04 Sisko acpid: S3 SLP_TYP (0x0606)
Dec  4 16:32:04 Sisko acpid: S4 SLP_TYP (0x0707)
Dec  4 16:32:04 Sisko acpid: S5 SLP_TYP (0x0707)


Asus TX97-XE:
Dec  4 16:37:42 Odo acpid: started
Dec  4 16:37:42 Odo acpid: FACP @ 0x01ffd080
Dec  4 16:37:42 Odo acpid: DSDT @ 0x01ffd100
Dec  4 16:37:42 Odo acpid: S0 SLP_TYP (0x0505)
Dec  4 16:37:42 Odo acpid: S1 SLP_TYP (0x0404)
Dec  4 16:37:42 Odo acpid: S2 not supported
Dec  4 16:37:42 Odo acpid: S3 not supported
Dec  4 16:37:42 Odo acpid: S4 not supported
Dec  4 16:37:42 Odo acpid: S5 SLP_TYP (0x0000)


Both should support at least S5.


But, shutdown -h now doesn't power down both systems!
And pressing the power button doesn't power down both systems!

Sorry, but your patch didn't work. :-(


-----

How do I have to start acpid? I start acpid from the shell as root.
During shutting down Linux, all processes will get the TERM and KILL
signal. Is that OK? I guess acpid will be killed before the system
halts...?



 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991111013603</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-11-11 01:36:03-0400</timestampReceived><subject>[Acpi] power off with 2.3.26</subject><body>

  I have the following problem.

  ASUS P3B-F


  Linux 2.3.25 and 2.3.26 (both compiled with ACPI support into the
  kernel (not as module)) detect ACPI during boot.

  Linux 2.3.25
  ------------

  Activated APM power down
  acpid loaded
  echo 0x00 &gt;/proc/sys/acpi/s5_slp_typ

  When I now press the power button, Linux halts and the system powers
  down.

  When I disable APM power down, linux still halts, but the system
  didn't power down.


  Linux 2.3.26
  ------------

  There's no support for APM power down.  ???

  

  Linux 2.3.26 and acpi_patch-2.3.27-1.gz
  ---------------------------------------

  There's no support for APM power down.  ???






  Something different:

  Linux 2.3.26 and acpi_patch-2.3.27-1.gz
  ---------------------------------------

  make menuconfig tell's me it is possible to compile ACPI support as
  module, but you've deactivated it. Maybe you should correct this
  part of the doc... :-)
  

  

 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991209164453</emailId><senderName>Nils Faerber</senderName><senderEmail>nils.faerber@unix-ag.org</senderEmail><timestampReceived>1999-12-09 16:44:53-0400</timestampReceived><subject>[Acpi] Hello...and a new BIOS I think ;)</subject><body>

Hello!
I am new to the ACPI list and maybe can contribute something. I had to
switch from APM to ACPI because my notebook very obviously has some nasty
APM bugs which causes it to freeze at random times :(
OK. So let's try ACPI ;)
The notebook is a Mitac Mi6020. The head of the FACP output looks like
 Signature:        FACP
 Length:           116
 Revision:         0x01
 Checksum:         0xa0
 OEMID:            OID_00
 OEM Table ID:     FACP_000
 OEM Revision:     0x30303030
 Creator ID:       
 Creator Revision: 0x00010000
Does this identify the BIOS enough?

And while we are at it, here are two comments about some observations:
- When starting acpid the first harddisk access fails and I get a
    had: interrupt timed out
  Any idea?
- Second I tried to enter and leave any kind of hibernation or suspend mode.
  I tried this by starting acpid and then do "echo 1 &gt; /proc/sys/acpi/sleep"
  The machine then starts to sleep, i.e. the power LED flashes, display is
  blanked but not turned off. But now I cannot wake it again!
and another question:
- I can suspend the machine correctly (to disk) when acpid is _not_ running
  using a keyboard hotkey.
  But after resume the system time is not updated correctly, i.e. the time
  of suspend is still the actual system time. Is this OK?
  If acpid is running I cannot suspend anymore using that hotkey! Even if
  acpid is killed again.

OK. So far for today ;)
CU
  nils

-- 
Nils Faerber (Linux Nils)        eMail: nils@unix-ag.org
Student of computer science      http://www.si.unix-ag.org/~nils/
Unix user group, University of Siegen, Germany

Siegen ... the arctic rain forest!
--

</body></email><email><emailId>19991209190754</emailId><senderName>Jim Jensen</senderName><senderEmail>jensen@cc38617-a.hwrd1.md.home.com</senderEmail><timestampReceived>1999-12-09 19:07:54-0400</timestampReceived><subject>Re: [Acpi] Hello...and a new BIOS I think ;)</subject><body>

&gt;&gt;&gt;&gt;&gt; "Nils" == Nils Faerber &lt;Nils.Faerber@unix-ag.org&gt; writes:

 Nils&gt; And while we are at it, here are two comments about some
 Nils&gt; observations: - When starting acpid the first harddisk access
 Nils&gt; fails and I get a had: interrupt timed out Any idea?  - Second
Nils: I have a IBM Thinkpad i1472, so I don't know if this will apply to
your laptop; but the symptom is the same.  I have had good luck with:

hdparm -d 0 /dev/hda
acpid
hdparm -d 1 /dev/hda

to turn off dma during the acpi initialization.  the lost interrupt is
apparently caused by a bug in the bios that "&lt;causes&gt; DMA to go awry
when ACPI is enabled."  according to Andy Henroid

It might work for you, or not.

   -Jim Jensen		  jensen@computer.org

</body></email><email><emailId>19991211232114</emailId><senderName>"Adam J. Richter"</senderName><senderEmail>adam@yggdrasil.com</senderEmail><timestampReceived>1999-12-11 23:21:14-0400</timestampReceived><subject>Re: [Acpi] ACPI vs. APM power-off: proposed patch to linux-2.3.31/drivers/misc/acpi.c</subject><body>

Andy Henroid &lt;andy_henroid@yahoo.com&gt; writes:
&gt;Building with both APM and ACPI enabled is a
&gt;problem.  They are mutually exclusive and
&gt;cannot both be turned on.

	All my patch does is call the APM power off if the machine
is still running after the ACPI power off (if both APM and ACPI have
been configured).  My patch works on the machines on which I have
tried it.  Unless there is some harm in it, I plan to keep it in
our source tree until you folks figure out something more
general that still automatically does the right thing (i.e., the
power turns off when I tell shutdown to do that on both ACPI
and APM computers).

Adam J. Richter     __     ______________   4880 Stevens Creek Blvd, Suite 104
adam@yggdrasil.com     \ /                  San Jose, California 95129-1034
+1 408 261-6630         | g g d r a s i l   United States of America
fax +1 408 261-6631      "Free Software For The Rest Of Us."

</body></email><email><emailId>19991222000312</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-22 00:03:12-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI (one more time)</subject><body>


This patch is against Linux 2.3.35-1

It allows ACPI and APM to coexist in one
built kernel (only one or the other is
actually enabled at runtime)  Hopefully,
this lower impact implementation is
palatable.

Changes
* ACPI/APM build coexistence
* moved architecture dependent code into
  arch/i386/acpi.c

Also, to answer the question posed in acpi.c,
the C-state latencies in the ACPI tables are
in uS.  I think we should leave everything
as uS as they are more intuitive than
number of ticks of a 3.58 MHz clock.  Right?
Definitely more user-friendly for the /proc
interface.

Thanks,
Andy



__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com
["acpi_patch-2.3.35-1.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991224233948</emailId><senderName>Sven Kirmess</senderName><senderEmail>sven.kirmess@gmx.net</senderEmail><timestampReceived>1999-12-24 23:39:48-0400</timestampReceived><subject>Re: [Acpi] [PATCH] ACPI (one more time)</subject><body>

  First of all, but a little bit late... MERRY X-MAS.



 Wednesday, December 22, 1999, 1:03:12 AM, Andy wrote:

&gt; This patch is against Linux 2.3.35-1

I've used it against 2.3.34 (unpatched) and got the following output
(patch -p1 &lt; filename)

-----
patching file linux/arch/i386/kernel/Makefile
patching file linux/arch/i386/kernel/acpi.c
patching file linux/arch/i386/kernel/apm.c
patching file linux/drivers/misc/acpi.c
Hunk #3 succeeded at 664 (offset 3 lines).
Hunk #4 succeeded at 743 (offset 4 lines).
Hunk #5 succeeded at 758 (offset 3 lines).
Hunk #6 succeeded at 780 (offset 4 lines).
Hunk #7 succeeded at 1072 (offset 3 lines).
Hunk #8 FAILED at 1081.
Hunk #9 succeeded at 1211 (offset -6 lines).
1 out of 9 hunks FAILED -- saving rejects to file linux/drivers/misc/acpi.c.rej
patching file linux/include/linux/acpi.h
-----

-----[ acpi.c.rej ]-----
***************
*** 1110,1124 ****
                return -ENODEV;
        }
  
-       /*
-        * Are the latencies in uS or in ticks in the tables? 
-        * Maybe this should do ACPI_uS_TO_TMR_TICKS?
-        *
-        * Whatever. Internally we always keep them in timer
-        * ticks, which is simpler and more consistent (what is
-        * an uS to us?). Besides, that gives people more
-        * control in the /proc interfaces.
-        */
        if (acpi_facp-&gt;p_lvl2_lat
            &amp;&amp; acpi_facp-&gt;p_lvl2_lat &lt;= ACPI_MAX_P_LVL2_LAT) {
                acpi_p_lvl2_lat = acpi_facp-&gt;p_lvl2_lat;
--- 1081,1095 ----
                return -ENODEV;
        }
  
+       /*
+        * Are the latencies in uS or in ticks in the tables? 
+        * Maybe this should do ACPI_uS_TO_TMR_TICKS?
+        *
+        * Whatever. Internally we always keep them in timer
+        * ticks, which is simpler and more consistent (what is
+        * an uS to us?). Besides, that gives people more
+        * control in the /proc interfaces.
+        */
        if (acpi_facp-&gt;p_lvl2_lat
            &amp;&amp; acpi_facp-&gt;p_lvl2_lat &lt;= ACPI_MAX_P_LVL2_LAT) {
                acpi_p_lvl2_lat = acpi_facp-&gt;p_lvl2_lat;
----------


&gt; It allows ACPI and APM to coexist in one
&gt; built kernel (only one or the other is
&gt; actually enabled at runtime)

Can the other (apm) be enabled during shutting down Linux? If not,
what's the advantage to allow both be built into the kernel?

&gt; Hopefully, this lower impact implementation is palatable.

&gt; Changes
&gt; * ACPI/APM build coexistence
&gt; * moved architecture dependent code into
&gt;   arch/i386/acpi.c

&gt; Also, to answer the question posed in acpi.c,
&gt; the C-state latencies in the ACPI tables are
&gt; in uS.  I think we should leave everything
&gt; as uS as they are more intuitive than
&gt; number of ticks of a 3.58 MHz clock.  Right?
&gt; Definitely more user-friendly for the /proc
&gt; interface.

What's uS? micro S?


Report: On both systems I got the following lines during booting
(&lt;...&gt; means something I haven't wrote down).

ACPI: &lt;...&gt; found.
apm: &lt;...&gt;
apm: disabled on user request

When I build the kernel with ACPI and APM, but no additional
APM-option enabled, both system's (P3B-F and TX97-XE) don't power down
nor blank the screen when I run "shutdown -h now" or press the power
button.

When I build the kernel with ACPI, APM and enable the option "...real
mode APM BIOS to power off..." I get the same behaviour.

I'm using the acpid-112699_tar.gz daemon.



Question: I have enabled all I2O options. Is that OK or can that cause
problems?


APM-Question: Can APM (presumably the apmd) track the power button and
shut down the system correctly if I press the power button (or can it
only enter sleep/suspend mode)? I quess that's a ACPI only feature
because APM doesn't talk much with the OS...?


 Sven

-- 
PGP-Key-ID: 0x881BF222

</body></email><email><emailId>19991212174958</emailId><senderName>"Adam J. Richter"</senderName><senderEmail>adam@yggdrasil.com</senderEmail><timestampReceived>1999-12-12 17:49:58-0400</timestampReceived><subject>[Acpi] ACPI vs. APM power-off: proposed patch to linux-2.3.31/drivers/misc/acpi.c</subject><body>

	On every computer on which I have tried the last few linux-2.3.x
releases, the hardware power off did not work.  This is because if the
kernel is built with both CONFIG_ACPI and CONFIG_APM, the acpi routine
is the one that is set to be the power off handler, because it is
initialized later and overwrites the variable.  I guess the machines
experiencing the problem support APM power down but not ACPI power down.

	The following patch fixes the problem by having the ACPI
power off handler call the previous value of acpi_power_off (usually
apm_power_off).  This implementation does not add any direct references
to the apm code, so it does not introduce any new usage of autoconfig.h.
It also does not impede the unloading of acpi, so it should not impede
any effort to modularize the acpi support.  So, I think this is the
right approach for supporting software power down functinality on
the widest variety of hardware platforms.

	Anyhow, this patch works for me.

Adam J. Richter     __     ______________   4880 Stevens Creek Blvd, Suite 104
adam@yggdrasil.com     \ /                  San Jose, California 95129-1034
+1 408 261-6630         | g g d r a s i l   United States of America
fax +1 408 261-6631      "Free Software For The Rest Of Us."
-------------------------------CUT HERE-----------------------------------

Index: linux/drivers/misc/acpi.c
===================================================================
RCS file: /usr/src.repository/repository/linux-2.3/drivers/misc/acpi.c,v
retrieving revision 1.1.1.11
diff -u -r1.1.1.11 acpi.c
--- acpi.c	1999/12/07 00:24:48	1.1.1.11
+++ acpi.c	1999/12/12 16:32:35
@@ -55,6 +55,8 @@
 #define DECLARE_WAIT_QUEUE_HEAD(x) struct wait_queue * x = NULL
 #endif
 
+static void (*old_acpi_power_off)(void) = NULL;
+
 /*
  * Yes, it's unfortunate that we are relying on get_cmos_time
  * because it is slow (&gt; 1 sec.) and i386 only.	 It might be better
@@ -826,6 +828,8 @@
 static void acpi_power_off_handler(void)
 {
 	acpi_enter_sx(ACPI_S5);
+	if (old_acpi_power_off != NULL)
+		(*old_acpi_power_off)();
 }
 
 /*
@@ -1140,6 +1144,7 @@
 			    NULL,
 			    CLONE_FS | CLONE_FILES | CLONE_SIGHAND);
 
+	old_acpi_power_off = acpi_power_off;
 	acpi_power_off = acpi_power_off_handler;
 
 	/*
@@ -1163,7 +1168,7 @@
 static void __exit acpi_exit(void)
 {
 	acpi_idle = NULL;
-	acpi_power_off = NULL;
+	acpi_power_off = old_acpi_power_off;
 
 	unregister_sysctl_table(acpi_sysctl);
 	acpi_disable(acpi_facp);

</body></email><email><emailId>19991213174022</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-12-13 17:40:22-0400</timestampReceived><subject>Re: [Acpi] ACPI vs. APM power-off: proposed patch to linux-2.3.31/drivers/misc/acpi.c</subject><body>

--- "Adam J. Richter" &lt;adam@yggdrasil.com&gt; wrote:
&gt; 
&gt; On every computer on which I have tried the last
&gt; few linux-2.3.x releases, the hardware power off
&gt; did not work.  This is because if the
&gt; kernel is built with both CONFIG_ACPI and
&gt; CONFIG_APM, the acpi routine

Building with both APM and ACPI enabled is a
problem.  They are mutually exclusive and
cannot both be turned on.  (On some systems,
turning one on disables the other but the
behavior is undefined.)  So, this patch
doesn't really solve the problem.

I do understand that Linux distribution vendors
are going to want to enable both to get power
management support on the widest range of
machines.  It would probably be best to check
for ACPI and if that does not exist or is a
broken implementation, fallback to APM.  To
determine if a system has a broken ACPI
implementation, I guess we could just have
a bad ACPI BIOS list.

What do people think?

-Andy



__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com

</body></email><email><emailId>19991112210112</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-12 21:01:12-0400</timestampReceived><subject>[Acpi] Re: power off with 2.3.26</subject><body>

"Michael K. Johnson" writes:
&gt;If you want me to look into it tomorrow on the server,
&gt;where I ought to be able to make the magic sysreq key
&gt;work, let me know.

Well, I couldn't reproduce it on the server, even when
I booted up with the nosmp flag.  I was using the old
acpid (I double-checked and recompiled to make sure)
and it just doesn't happen there.

However, I found the key combination to get the alt-scrlk
going (altgr-fn-F11/numlk) and discoverd that the EIP is
always in acpi_{read,write}_pge_status().  Unfortunately,
no stack information is available, so I don't know if it
is being called from acpi_irq or somewhere else at that
point.  I can imagine a race condition involving acpi_disable
and acpi_irq involving the while loop in acpi_disable, but
I don't really know what might be happening there.  And
I haven't instrumented it.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991124161031</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-24 16:10:31-0400</timestampReceived><subject>[Acpi] Re: [PATCH] ACPI</subject><body>

Andy Henroid writes:
&gt;* Soft-off (S5) enabled for SMP systems
&gt;
&gt;Using this patch and the updated acpid from my
&gt;website

Works on the 4-way I've been testing here.  The notebook has returned
to its maker (it was here for certification) so I can't test there.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991127232727</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-11-27 23:27:27-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.30-pre2

Changes
* Added support for S1
* Minor changes to /proc/sys/acpi/ interface for S1

Using this patch and the updated acpid from
my website

http://www.geocities.com/SiliconValley/Hardware/3165/

systems that support S1 will be able to use it
by pressing the sleep button (if you have one)
or with

  echo 1 &gt; /proc/sys/acpi/sleep

Pressing either the sleep or power button will
awaken a sleeping system.

Caveats
* Screen will only be blanked from console mode.
  If you hit the sleep button from X, the system
  will sleep but the screen will not be blanked
* Ability to run control methods and put all system
  devices into D3 before S1 is not yet there.
  Some systems want devices (eg. video controller
  on a laptop I have) in D3 before entering S1.
  From the spec, it isn't clear that this should
  be necessary though.
* I've noticed some network problems (inability
  to connect) after resuming from a long sleep.
* The code is currently only enabled to wake
  from sleep or power buttons.  Wake from
  other events (USB, LAN, etc.) will take
  additional work.

-Andy

__________________________________________________
Do You Yahoo!?
Thousands of Stores.  Millions of Products.  All in one place.
Yahoo! Shopping: http://shopping.yahoo.com
["acpi_patch-2.3.30-2.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991129192645</emailId><senderName>Yuqing Deng</senderName><senderEmail>deng@tinker.chem.brown.edu</senderEmail><timestampReceived>1999-11-29 19:26:45-0400</timestampReceived><subject>Re: [Acpi] acpi poweroff under 2.3.30</subject><body>

&gt; 
&gt; 
&gt; echo 0x00 &gt; /proc/sys/acpi/s5_slp_typ
&gt; (Abit BH6 is a BX PIIX4  board)(i think)
&gt; now when I shutdown -h now, it reboots. Even though it is runlevel 0.
&gt; 

I have the same problem with ASUS P2B-D.
The value set by acpid was 0x606.
S0, S1 and S5 are supported.  But when I power
the computer down with "shutdonw -h now",
the screen blanks the power is still on.

&gt; 
&gt; Also sleep is a little odd, echo 1 &gt; sleep, the console blanks for about 1
&gt; second and then it comes back out of sleep mode, even though I don't touch a
&gt; thing, maybe this a bios setting or something, as it is the same under
&gt; windows 9x and 2000.
&gt; 

Sleep works.  but the "echo 1 &gt; sleep" never returns.
It's not even interruptable.  If I switch to another
console by Ctrl+Alt+F2 and do "echo 1 &gt; sleep" one more time,
the system locks up.

Event report doesn't work.  The pm1_enable is already 0x100
before I run acpid.  But nothing happens when I press the power
button while doing "cat /proc/sys/acpi/event".

Yuqing

</body></email><email><emailId>19991111144709</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-11-11 14:47:09-0400</timestampReceived><subject>[Acpi] Re: [PATCH] ACPI</subject><body>

Andy Henroid writes:
&gt;* Use phys_to_virt for table mapping if ioremap
&gt;  fails (as it does for at least one system)

FWIW, both systems that I have been playing with have their tables in
about the same spot, around the 100MB mark.  One is a 64MB system, on
which ioremap() works fine, obviously, and the other is a 256MB system,
on which phys_to_virt() is required.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991004231728</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-04 23:17:28-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI "thin driver"</subject><body>


This is the implementation of my minimalist ACPI
"thin driver" idea.  Debate over this approach
has not yet settled within the ACPI4Linux project
but this does seem to be a workable ACPI solution
for now.

I made the changes you suggested before vacation
and added support for S5 and C-states (Actually,
a reformat was also requested but I wasn't sure
of what you were looking for.  Give me an idea
and I'd be happy to reformat accordingly)

I did touch cpu_idle (for C-states) and
machine_power_off (to activate S5) in
arch/i386/kernel/process.c.  Hopefully,
none of those modifications are too invasive.

Also, acpi.c is under drivers/misc but I
plan to move it to arch/i386/kernel/ as
it contains x86-specific code (sti-hlt)

The associated user-space acpid is available from

 
http://www.geocities.com/SiliconValley/Hardware/3165/

Thanks,
Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.18.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991006182710</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-06 18:27:10-0400</timestampReceived><subject>Re: [Acpi] prior kernel version</subject><body>

--- Marcos Dione &lt;root@deepblue.famaf.unc.edu.ar&gt;
wrote:
&gt; 
&gt; 	hi, i'm not in the list, but i tried to use the
&gt; patch. the problem is that a just use "stable"
&gt; kernel versions (by now, 2.2.x) but the patch,
&gt; as you already know, is for 2.3.x
&gt; 
&gt; don't you have a patch to this version, or i need
&gt; to wait to the 2.4.x version of the kernel?

If you are willing to deal with a little overall
kernel instability, the beginnings of generic
ACPI support are now in the main 2.3.19 kernel
source tree.  Future patches (well, at least the
ones I generate) will be against the latest
development kernel release so you really need
to track 2.3 if you want to keep up.

If you look at the source (drivers/misc/acpi.c)
you'll see some #defines for 2.2 so it would be
pretty easy to backport to 2.2.  You really
just need to fix Makefiles.  If that's all
too much work then, yes, ACPI support _should_
carry over into 2.4

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991006220620</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-06 22:06:20-0400</timestampReceived><subject>Re: [Acpi] basis for size estimations?</subject><body>

--- "Michael K. Johnson" &lt;johnsonm@redhat.com&gt; wrote:

&gt; interpreter.  I would assume that an in-kernel AML
&gt; interpreter would be done as a state machine in a
&gt; large case statement, possibly including computed
&gt; gotos (a gcc-only feature, but that is allowed in

You are right, there are more compact ways to
implement an AML interpreter.  My claim is that
even if you do things the optimal way, you are
still going to end up with something of roughly
equivalent size to the sub-optimal (but
clearly not worst) implementation.

I could very well be wrong though.  Unfortunately,
the only way to show that would be to actually
write the super-compact interpreter.

Taking a step back, even if you produced that
micro-interpreter, there is no guarantee that
it would be accepted into the kernel (ie. I
could not give you a hard size or complexity
limit of what would get in)  I think the most
viable path to the kernel is to ease ACPI
functionality in as we go.  If we could do
that by building up from a minimal kernel
interpreter, I would say "great!" but (as I
mentioned in the last mail) the interpreter
is pretty much all or nothing.

&gt; Can you give an outline or overview of what AML
&gt; features aren't yet implemented in it?

Handling of several of the ACPI object types
(eg. Processor, Power, Thermal, ... objects)
and OpRegions was incomplete.

&gt; It's interesting that you say that.  Kaffe's JVM
&gt; (no JIT, obviously) fits in 4K on some
&gt; architectures, I'm told.

Please keep dynamic memory footprint in mind.
In kernel-space, dynamic memory (kmalloced memory)
is just as precious as code and static data size
since it is non-pageable.  With an interpreter
you are going to be using dynamic memory pretty
heavily.  For instance, AML is not conducive
to in-place interpretation.  The first step
you need to take is to parse and break all of
the AML out into a namespace and tree of
AML operations.  Already there, you've burned
a fair amount of memory.

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991006222911</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-06 22:29:11-0400</timestampReceived><subject>Re: [Acpi] Understanding section 16</subject><body>

--- "Michael K. Johnson" &lt;johnsonm@redhat.com&gt; wrote:

&gt; semantics.  It occurred to me that a significant
&gt; chunk of ASL and its associated AML byte stream
&gt; would help glue the two together in my understanding
&gt; and make it possible for me to use section 15 to
&gt; fully understand section 16.  Without, it feels
&gt; rather like nailing jelly to a tree.

This site has an AML compiler (DOS-based, sorry)
and some sample ASL.

  http://www.teleport.com/~acpi/samples.htm

I don't know if it would be useful but the source
to an AML disassembler is here.

 
http://www.geocities.com/SiliconValley/Hardware/3165/

-Andy




=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991007165042</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-07 16:50:42-0400</timestampReceived><subject>[Acpi] VM possibilities</subject><body>

Max Berger writes:
&gt;Let me get this right - you suggest a small, but slow in-kernel VM and a
&gt;larger, but faster Userspace VM. This would enable us to do REAL device
&gt;initialisazion during bootup, and have emergency AML support for thermal
&gt;management. When, however speed is wanted (regular operation), a userspace
&gt;program is used. And if you have security concerns, you can turn off the
&gt;daemon-VM during kernel-compilation.

I'm suggesting a whole range of possibilities, actually.  I'm suggesting
the small in-kernel VM (if I/we can manage to write such a beast)
primarily for boot-time initialization purposes.  Before deciding whether
that VM should then be removed from kernel memory to save space or left
around to do some or all processing, I would want to have it implemented.

Another possibility is to have a two-part VM, part in-kernel and part
out of kernel.  For example, some of the ACPI object types are probably
not necessary for initialization (I mean, who wants to do thermal
management as part of the boot process?  We already hlt when the CPU
is idle...).  The in-kernel VM could defer to a userland VM for some
operations via extentions to the ioctl interface Andy set up, or via
a read/write interface, with the namespace exported in a sane manner.
I see this as rather difficult to get right, but perhaps there will
emerge some logical division.

Or the in-kernel VM could have extra pieces loaded as kernel modules
automatically when they are needed, then automatically unloaded when
they aren't needed, if it carefully maintains reference counts.

I'm not sure that there's really any need for speed when interpreting
AML -- even if we interpret AML at 1 AML instruction per several hundred
CPU instructions, we're still interpreting AML on the order of 1 Mhz,
which is plenty fast for the minimal stuff I'm seeing in AML code.
Practically speaking, individual instructions in a method will run at
nearly machine speed, and lookups will take up to several hundred
instructions.  Who cares?  I see no evidence that AML needs to run
any faster than that in any case.

&gt;This idea definitifely sounds like a winner to me! 

If we can make it work, that is.

&gt;I personally think this is a solution we can work on

Well, it's a plurality of ideas, and I respect Andy's skeptical
comments because he has experience with ACPI and I don't yet have
any real experience with it.

If you are interested in working together with me to attempt to
write this beast, I'll first state a few things: I do not have
significant experience writing interpreters, I'm not an ACPI
expert, I haven't the foggiest idea how to split up work between
us, and it will be at least a few days before I start work on it
while I play with the tools Andy pointed me to so that I can get
a better understanding.  I'd also like to take some time to reflect
on the architecture before getting started.  That said, if you
want to work together on it, I'm all for working together.  :-)
When I'm ready, I'll post some sort of an architectural summary
for you to critique; if you are willing and have time, it would be
worthwhile for you to write up how you would go about it and then
we can choose the best ideas to start from.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991007204700</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-07 20:47:00-0400</timestampReceived><subject>Re: [Acpi] Re: basis for size estimations?</subject><body>

On Thu, 7 Oct 1999, Michael K. Johnson wrote:

&gt; What I want is:
&gt;  o  alternative design proposals
&gt;  o  criticism of my design proposals when I make them
&gt;  o  help with code if/when we agree on a design
&gt; If you can give any of those, great.  If not, I certainly understand
&gt; not having much time; I'm usually in that condition myself.  :-)

I think the maillist has everything you want. :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19991007222331</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-07 22:23:31-0400</timestampReceived><subject>[Acpi] Done: Cleaned up the repository</subject><body>

Hi,

I have cleaned up the repository, and will import 2.3.19 over that
tomorrow. Please do not make any changes until that.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19991008142219</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-08 14:22:19-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI event fixes</subject><body>


This patch is against 2.3.19

Event handling in the last release was workable
but fairly broken.  There were some races
between user and kernel mode with accessing
the event status/enable registers especially
for level-triggered general-purpose events.
There was also the possibility of events
getting dropped as they were not queued.
This patch fixes all of that.

I also rolled in the changes you made for
pre-patch-2.3.20-1/2.  I don't know if that's
convenient or just annoying.

As always, the matching user-level skeleton
acpid is at

 
http://www.geocities.com/SiliconValley/Hardware/3165/

Thanks,
Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.19.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991014215527</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-10-14 21:55:27-0400</timestampReceived><subject>Re: [Acpi] More: "prior kernel version" and now "bad news"</subject><body>

On Thu, 14 Oct 1999, Marcos Dione wrote:
&gt; Andy Henroid wrote:
&gt; 
&gt; &gt; If you are willing to deal with a little overall
&gt; &gt; kernel instability, the beginnings of generic
&gt; &gt; ACPI support are now in the main 2.3.19 kernel
&gt; 
&gt; 	ok, that "bad" news makes me think a litle more. so, What should I
&gt; spect drom ACPI? what can ACPI give me than I need? please, can someone
&gt; answer me that, so I reconsiderate from changing to 2.3.x?

To be honest: Currently nothing. We are still at an very early stage, and
there are two different people who should benefit from ACPI: Developers
and End-Users. If you are a developer, and if you are willing to help us,
which I hope you do, then you'd have to switch over to the latest kernels. 
If, however, you want to USE acpi, please don't expect to much out of it
YET. There is currently a lot going on. We have different ideas, and we
have an actual developer meeting at ALS 99, so expect more news to come
soon. 

As soon as we have enough code out, the advantages of ACPI will be
immense! I've written a short paper zbout this, and I will (re)publish it
again, in about two weeks after ASL, since I will be presenting my ideas,
and you should actually have a reason to come down here :)

But for now: Wait for 2.4.... Then we'll (hopefully) have some more work
done.

Max Berger
e-mail: max.berger@phobos.fs.tum.de

--
ACPI4Linux: http://phobos.fs.tum.de/acpi/ FBR-Info: http://www.fs.tum.de/FSMPI/
Sysop: http://wwwbrauer.in.tum.de/ Worldforge: http://www.worldforge.org/  JOS:
http://www.jos.org PGP: 9CF77B603671BB18 D5110085483230BB ftp://phobos.fs.tum.d
e/pub/pgp/max.berger.asc Home: http://phobos.fs.tum.de/~mage/ Fillup: Some Data

</body></email><email><emailId>19991005220146</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-05 22:01:46-0400</timestampReceived><subject>[Acpi] basis for size estimations?</subject><body>

In joining this list, I read the last few months of discussion, and
found that an in-kernel implementation is being estimated at 300k.
Having read large portions of the ACPI spec, including the AML spec,
I'm boggled by this.  I'm having trouble understanding why an AML
interpreter should take more than a few pages.  I understand
that 300k even less when I consider that everyone seems to agree
that all policy will be managed from outside the kernel, so that
regardless of implementation, there will be a daemon that will
manage complex policy decisions.  I assume I'm missing something.
Could someone break this 300k figure down into parts so I can see
how it is derived?  This would be useful not only for me but for
anyone browsing the web archives of this discussion.

I'm also wondering if anyone has considered the possibility of a
small AML interpreter that was in discarded initcode for initializing
devices in the ACPI model, then using a user-level AML interpreter
after that.  I'm not sure what effect that would have on recovery
from S4, though.  FWIW, The current software-save-to-disk code does
not save all state (for example, no network connections or video
state are saved), so it's not sufficient for S4; it's kind of an
S4.5...

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991006193631</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-06 19:36:31-0400</timestampReceived><subject>[Acpi] Understanding section 16</subject><body>

I have come to the conclusion that sectin 16 of the ACPI spec is
heavy on syntax and light on semantics.  It occurred to me that
a significant chunk of ASL and its associated AML byte stream
would help glue the two together in my understanding and make it
possible for me to use section 15 to fully understand section 16.
Without, it feels rather like nailing jelly to a tree.

In the old 1.0 version of the spec from 1996, I found that pages
5-96 and 5-97 contained such an example, but that the example has
been removed from the 1.0b version of the spec from this february.
Does anyone know why the byte code sequence was removed?  (The
ASL example from 5-97 is still there.)  Has there been some change
to the AML spec that has rendered the byte code sequence obsolete?

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991007142251</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-07 14:22:51-0400</timestampReceived><subject>[Acpi] Re: basis for size estimations?</subject><body>

Andy Henroid writes:
&gt;I could very well be wrong though.  Unfortunately,
&gt;the only way to show that would be to actually
&gt;write the super-compact interpreter.

Well, you have far more expertise than I do in
this area, but I would certainly gain lots of
understanding of ACPI and AML if I tried it,
even if it ended up being throw-away code.

What I'm doing now is trying to find out if
there are concrete reasons that the attempt
is hopeless from the start.  I know that I'm
asking for a lot, perhaps more than it is
possible to give -- I've been in the same position
of trying to explain to a newcomer why what they
suggest is impossible, and I know how tiring it
is, so I really do appreciate the time you are
taking to respond.  Thank you!

&gt;Taking a step back, even if you produced that
&gt;micro-interpreter, there is no guarantee that
&gt;it would be accepted into the kernel

Correct.  But I feel quite confident that the
possibility that a 300k+ interpreter will get
into Linus's official kernel is extremely close
to zero, whereas I would not say the same about
a, say, 8k text 32k bss/dynamic memory interpreter
-- what I'd like to see in an in-kernel interpreter
is a reasonable probability that Linus would accept
it.

&gt;Please keep dynamic memory footprint in mind.

Oh, I do, very much.  I've spent a good deal of
time trying to think of ways to reduce it.

&gt;In kernel-space, dynamic memory (kmalloced memory)
&gt;is just as precious as code and static data size
&gt;since it is non-pageable.

It is true that dynamic memory is non-pageable, but it
is not true that they are equally precious.  300k of
text would compress moderately well into a boot image,
but would be a significant portion of the size of the
boot image.  300k of bss, well, compresses pretty well
and would not have the same impact on boot time and
boot image size, and dynamically-allocated data figures
in at about the same rate.  :-)

Furthermore, my assumption is that it is quite likely
that even with my hypothetical small, rewritten in-kernel
interpreter, it might still be used only for boot and
then the interpreter would be removed from memory and
any necessary data/state passed to a user-level daemon,
in which case dynamic data of the size we are discussing
is quite cheap, since it would be needed only directly
after boot and in an amount significantly smaller than
available kernel memory, and would not be allocated at
all on small old systems that lack ACPI support, but
are booting a generic kernel that contains ACPI support.

So I think I'm justified in worrying far more about
the text size than the bss or dynamic memory size.

That said, I'm quite aware that all dynamic memory
allocated within the kernel is a highly precious,
non-swappable resource.

&gt;For instance, AML is not conducive
&gt;to in-place interpretation.

Here's another surprise.  It looked to me like
the namespace tree could be quite compact and
point to in-place AML.  It even looked to me
like when initializing the namespaces, you would
not even need to store method names as long as
the surrounding namespace was in place, and the
methods could then be looked up dynamically by
name when invoked.  I think that it is reasonable
to trade off speed against every other objective
in an in-kernel AML interpreter, as AML should
be simple; as the documentation points out, it
should be considered a declarative language, not
a procedural language.  Is that naive?

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991007170343</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-07 17:03:43-0400</timestampReceived><subject>Re: [Acpi] Re: basis for size estimations?</subject><body>

--- "Michael K. Johnson" &lt;johnsonm@redhat.com&gt; wrote:

&gt; Correct.  But I feel quite confident that the
&gt; possibility that a 300k+ interpreter will get
&gt; into Linus's official kernel is extremely close
&gt; to zero, whereas I would not say the same about
&gt; a, say, 8k text 32k bss/dynamic memory interpreter
&gt; -- what I'd like to see in an in-kernel interpreter
&gt; is a reasonable probability that Linus would accept
&gt; it.

I definitely like the idea of having the interpreter
in the kernel if it is small and stable enough to
be accepted.  Clearly that solves a lot of
problems of the user-space implementation.
The onus of proof is now on your shoulders to
show such an interpreter exists.

&gt; It is true that dynamic memory is non-pageable, but
&gt; it is not true that they are equally precious.
&gt; 300k of text would compress moderately well into
&gt; a boot image, but would be a significant portion of
&gt; the size of the boot image.  300k of bss, well,
&gt; compresses pretty well

Oh, I wasn't even thinking of boot image size.
Good point, text is more valuable than dynamic/BSS
memory.  You could build as a kernel module, in
which case text size is of about the same value,
but your point is still valid.

&gt; Furthermore, my assumption is that it is quite
&gt; likely that even with my hypothetical small,
&gt; rewritten in-kernel interpreter, it might still be
&gt; used only for boot

I'm not sure I like the idea of two separate
interpreters but that's just a small gripe.

&gt; &gt;For instance, AML is not conducive
&gt; &gt;to in-place interpretation.
&gt; 
&gt; Here's another surprise.  It looked to me like
&gt; the namespace tree could be quite compact and
&gt; point to in-place AML.  It even looked to me

It's possible to do things in-place but inefficient
and a lot of hassle.  You do have to parse over
everything at least once to build the namespace.
While you are doing that, I figure, you might as
well break the AML out into something reasonably
interpretable.  You don't have to do that but
you would have to keep a parser stack (AML and
all of its nested packages).  It just seems
cleaner to separate parsing from interpretation.

&gt; methods could then be looked up dynamically by
&gt; name when invoked.  I think that it is reasonable
&gt; to trade off speed against every other objective
&gt; in an in-kernel AML interpreter, as AML should

Meaning, "sacrifice speed for smaller memory
footprint"?  Sounds fine to me as performance is
not a big issue here.

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991007172442</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-07 17:24:42-0400</timestampReceived><subject>[Acpi] Re: basis for size estimations?</subject><body>

Andy Henroid writes:
&gt;The onus of proof is now on your shoulders to
&gt;show such an interpreter exists.

Yep.  With the exception of asking questions and possibly
chronicling my success or failure, I'll put up or shut up.
Maybe Max will help me put up.  :-)

&gt;I'm not sure I like the idea of two separate
&gt;interpreters but that's just a small gripe.

I don't like it either, in the abstract.  We'll see if/when I
complete my in-kernel VM whether we need another one from a
practical standpoint.  I'm mostly leaving the door open to the
idea for now.

Thanks again for your helpful comments and code.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991007192031</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-07 19:20:31-0400</timestampReceived><subject>Re: [Acpi] Re: basis for size estimations?</subject><body>

On Thu, 7 Oct 1999, Michael K. Johnson wrote:

&gt; Andy Henroid writes:
&gt; &gt;The onus of proof is now on your shoulders to
&gt; &gt;show such an interpreter exists.
&gt; Yep.  With the exception of asking questions and possibly
&gt; chronicling my success or failure, I'll put up or shut up.
&gt; Maybe Max will help me put up.  :-)

Sure will. Time will be a scarce ressource on my side in the next few
weeks, but I sure will help you in any way I can. Tell me what you need:
CVS, Webspace, [ as long as it's not money :-) ] whatever it is. 

&gt; &gt;I'm not sure I like the idea of two separate
&gt; &gt;interpreters but that's just a small gripe.
&gt; I don't like it either, in the abstract.  We'll see if/when I
&gt; complete my in-kernel VM whether we need another one from a
&gt; practical standpoint.  I'm mostly leaving the door open to the
&gt; idea for now.

If we have a good, small, VM, this could be the one.


Max Berger
e-mail: max.berger@phobos.fs.tum.de

--
ACPI4Linux: http://phobos.fs.tum.de/acpi/ FBR-Info: http://www.fs.tum.de/FSMPI/
Sysop: http://wwwbrauer.in.tum.de/ Worldforge: http://www.worldforge.org/  JOS:
http://www.jos.org PGP: 9CF77B603671BB18 D5110085483230BB ftp://phobos.fs.tum.d
e/pub/pgp/max.berger.asc Home: http://phobos.fs.tum.de/~mage/ Fillup: Some Data

</body></email><email><emailId>19991007195522</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-07 19:55:22-0400</timestampReceived><subject>[Acpi] Re: basis for size estimations?</subject><body>

Max Berger writes:
&gt;Sure will. Time will be a scarce ressource on my side in the next few
&gt;weeks, but I sure will help you in any way I can. Tell me what you need:
&gt;CVS, Webspace, [ as long as it's not money :-) ] whatever it is. 

I've got web space.  Phobos CVS access isn't useful during initial
development unless there is someone else who wants to work on it
with me.  What I want is:
 o  alternative design proposals
 o  criticism of my design proposals when I make them
 o  help with code if/when we agree on a design
If you can give any of those, great.  If not, I certainly understand
not having much time; I'm usually in that condition myself.  :-)

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991006002712</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-06 00:27:12-0400</timestampReceived><subject>Re: [Acpi] basis for size estimations?</subject><body>

&gt; From: Michael K. Johnson
&gt; [mailto:johnsonm@redhat.com] 
&gt; Sent: Tuesday, October 05, 1999 3:02 PM
&gt; To: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] basis for size estimations?

&gt; In joining this list, I read the last few months of
&gt; discussion, and found that an in-kernel
&gt; implementation is being estimated at 300k.
&gt; Having read large portions of the ACPI spec,
&gt; including the AML spec, I'm boggled by this.

The 300k figure is an estimate based on the
code and dynamic data size of a partially complete
AML interpreter I submitted to the project back
in July.  Included is the "very approximate"
additional size necessary to extend that
implementation to a full interpreter.  I now
suspect 300k might actually be a bit of an
underestimation.

I'm not saying that the size of that
implementation is the lower bound on the size
of all AML interpreters.  It should at least
give us a ball-park figure though.

&gt; I'm having trouble understanding why an AML
&gt; interpreter should take more than a few pages.  I
&gt; understand that 300k even less when I consider

Parsing and running AML is not exactly trivial.
With the exception of function calls, an AML
parser, interpreter, and namespace manager is
possibly on the order of complexity of a Java VM.

&gt; I'm also wondering if anyone has considered the
&gt; possibility of a small AML interpreter that was in
&gt; discarded initcode for initializing devices in the
&gt; ACPI model, then using a user-level AML interpreter
&gt; after that.  I'm not sure what effect that would

Any AML interpreter would really have to be able
to parse and interpret the entire language so there
really is no way to do a smaller interpreter for
initialization.  You might be able to save on
dynamic memory by only parsing the AML involved
in device configuration but it's not clear how
you would determine that and I don't think you'd
really be saving much there anyway.

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991014185745</emailId><senderName>Marcos Dione</senderName><senderEmail>mdione@hal.famaf.unc.edu.ar</senderEmail><timestampReceived>1999-10-14 18:57:45-0400</timestampReceived><subject>[Acpi] More: "prior kernel version" and now "bad news"</subject><body>

Simon Richter wrote:

&gt; mess. We will generate patches against 2.3.16 (I think, could as well
&gt; be 17) and up, but everything below that is unsupported because it would
&gt; require hard work to fit the patches to the old memory detection code.
&gt; Sorry that I have no better answer.

Andy Henroid wrote:

&gt; If you are willing to deal with a little overall
&gt; kernel instability, the beginnings of generic
&gt; ACPI support are now in the main 2.3.19 kernel

	ok, that "bad" news makes me think a litle more. so, What should I
spect drom ACPI? what can ACPI give me than I need? please, can someone
answer me that, so I reconsiderate from changing to 2.3.x?

and:

&gt; If you look at the source (drivers/misc/acpi.c)
&gt; you'll see some #defines for 2.2 so it would be
&gt; pretty easy to backport to 2.2.  You really
&gt; just need to fix Makefiles.

	I may seem some lazy, but, can you tell me which fixes and where
aply them?


	I'll be watchin the mailing list archives for responses.

</body></email><email><emailId>19991006180131</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-06 18:01:31-0400</timestampReceived><subject>Re: [Acpi] basis for size estimations?</subject><body>

Andy Henroid writes:
&gt;The 300k figure is an estimate based on the
&gt;code and dynamic data size of a partially complete
&gt;AML interpreter I submitted to the project back
&gt;in July.

Thanks, I've downloaded it and am studying it.

Please take the following comments as coming from a newcomer
playing devil's advocate, not as coming from a know-it-all
(I don't) interloper (I hope I'm not).  In other words, feel
free to tell me why I'm wrong.  :-)

It certainly doesn't follow the model that I would assume
would be necessary for an in-kernel AML interpreter.  I
would assume that an in-kernel AML interpreter would be
done as a state machine in a large case statement, possibly
including computed gotos (a gcc-only feature, but that is
allowed in the kernel when it improves things), and certainly
including AML stack management by hand in non-stack memory
instead of recursion in the interpreter proper.

I would expect that the interpreter you provided would be
extremely useful documentation for writing a small in-kernel
AML interpreter, though the form would be completely different.

&gt;I now suspect 300k might actually be a bit of an
&gt;underestimation.

So you think that it will grow by a factor of 5?  Can you
give an outline or overview of what AML features aren't yet
implemented in it?

&gt;With the exception of function calls, an AML
&gt;parser, interpreter, and namespace manager is
&gt;possibly on the order of complexity of a Java VM.

It's interesting that you say that.  Kaffe's JVM (no JIT,
obviously) fits in 4K on some architectures, I'm told.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991020183525</emailId><senderName>"Michael K. Johnson"</senderName><senderEmail>johnsonm@redhat.com</senderEmail><timestampReceived>1999-10-20 18:35:25-0400</timestampReceived><subject>[Acpi] Namespace management issues</subject><body>

At ALS, Max suggested that he could write a completely dynamic namespace
manager that did not need to create a tree, but instead would dynamically
parse through all the AML on the machine looking for a name that it was
given, and that it would go through this process every time a name was
encountered while executing AML.  My main concern at the time was that
you really need to parse the whole stream in order to do that, because
you can have, for example, a "Package" containing data anywhere right in
the middle of an instruction stream within some arbitrary method.  This
forces it to be tied rather intimately in with the AML parser...

However, I've come up with another objection: named data elements.  You
can store data in them -- is there any guarantee that you can write
directly to the address where you found the data element while parsing
AML?  I mean, if you have ASL like
	Name(BUF1, Buffer(){0, 1, 2, 3, 4, 5})
	Store(Local0, BUF1)
is it guaranteed that the byte locations 0-5 are not in ROM, but have
been copied out into RAM?  I understand that the DSDT is normally in
writable memory, but the FACS is explicitly mentioned to have read-write
memory, that doesn't seem to be the case for DSDT.  Also, I'm assuming
here that these objects are what we would call "static" objects in C
code because I see no way to deallocate them later -- am I wrong?  In
any case, unless these objects are guaranteed to be in read-write memory,
we need to allocate separate memory for them, memory allocated as part
of looking up that name for the first time.

In section 5.4 of the 1.0b version of the ACPI standard, it says,

	At some point, the system software decides to "load" a
	Definition Block.  Loading is accomplished when the system
	makes a pass over the data and populates the ACPI name space
	and initializes objects accordingly.  The name space for
	which population occurs is either from the current name
	space location, as defined by all nested packages or from
	the root if the name is preceded with `/'.

This implies, to me, that the standard expects that objects will
be created in new memory and their values initialized from the
data in the AML byte stream.  It also implies, to me, that we
do not have to populate the whole namespace before starting;
rather, I think that we can populate namespace as we go along.

However, I *do* think that we need to create a namespace tree
of the blocks we have loaded and include pointers to memory that
we dynamically allocate to put things like Buffers in.

michaelkjohnson

"Magazines all too frequently lead to books and should be regarded by the
 prudent as the heavy petting of literature."            -- Fran Lebowitz
 Linux Application Development     http://people.redhat.com/johnsonm/lad/

</body></email><email><emailId>19991021035156</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-21 03:51:56-0400</timestampReceived><subject>Re: [Acpi] Namespace management issues</subject><body>

--- "Michael K. Johnson" &lt;johnsonm@redhat.com&gt; wrote:
&gt; 

&gt; At ALS, Max suggested that he could write a
&gt; completely dynamic namespace manager that did not
&gt; need to create a tree, but instead would dynamically
&gt; parse through all the AML on the machine looking for
&gt; a name

&gt; My main concern at the time was that you really
&gt; need to parse the whole stream in order
&gt; to do that

Right, in the worst case you would have to parse
through all of the AML to find a name you were
looking for.  I have a system with AML that
looks like this

  Scope _SB {
    Device PCI0 {
      ...
    }
  }

And sometime later, arbitrarily nested
 
  {
    ...
    Scope \_SB {
      Device PCI1 {
        ...
      }
    }
  }

The problem is you can prefix just about any
name with a "Scope", "\", or "^" and
this really ruins the possibility for quick
searching.  Nice for the system vendor
as it allows them to tack on extra devices,
methods, etc. when building the DSDT on the fly.
It is not so pleasant for the AML parser.

&gt; However, I've come up with another objection: named
&gt; data elements.  You can store data in them -- is
&gt; there any guarantee that you can write directly to
&gt; the address where you found the data element while
&gt; parsing AML?

The memory where ACPI tables are located (type 3)
is RAM and can be reused according to the spec
(section 14.1).  Problem is the AML is just
declarations.  If a buffer of 512 bytes is declared
it doesn't mean that the AML actually contains
space for 512 bytes of buffer data.  So, no, I
don't think there is any way you can avoid
allocating memory for objects.

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991025163229</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-10-25 16:32:29-0400</timestampReceived><subject>[Acpi] Re: [PATCH] ACPI fixes</subject><body>


On Fri, 22 Oct 1999, Andy Henroid wrote:
&gt;
&gt; * fixed iomapped memory accesses - filled in
&gt;   readl's and just kmalloc and copy the FACP
&gt;   (using just readl's makes the code look
&gt;   pretty evil)

Actually, you shouldn't even need to use "readl()" as it should be in real
memory, not in "IO memory". 

The problem, of course, is that Linux currently thinks of high memory as
IO memory even if it isn't always, and thus on the x86 you have to use
"ioremap()" to get at it - which makes it look like IO accesses.

And I can certainly imagine thinking about the system ROM as a device
behind the PCI bus, although with ROM shadowing it really isn't, at least
on PC's.

So it's kind of a gray area. I would suggest just using "ioremap()" 
together with plain dereferences (ie no "readl()" and friends). 

I'll apply the patch, of course, but just for future reference..

		Linus

</body></email><email><emailId>19991029140620</emailId><senderName>Jurgen Kramer</senderName><senderEmail>gtm.kramer@inter.nl.net</senderEmail><timestampReceived>1999-10-29 14:06:20-0400</timestampReceived><subject>[Acpi] ACPI support for Alpha AXP (with recent HW)?</subject><body>

Hi,

Today I downloaded the latest AlphaBIOS for my 164SX which is 5.70 (and
is available
for almost all Alpha systems) as I was reading the release notes they
mentioned that ACPI support was introduced in version 4.69 of the
AlphaBIOS. Here is the excerpt from the release notes:

"Windows 2000 Advanced Configuration &amp; Power Interface (ACPI)

Where system platform allows, this version of AlphaBIOS release provides
the fullest support for Advanced Configuration &amp; Power Interface (ACPI)
features that will be present in Windows 2000.  If you are planning to
install the Beta 3 or later releases of Windows 2000, you must update
your system with this AlphaBIOS release."

I'm not sure which Alpha systems have ACPI compliant hardware, probably
all 21264 based models. Do you think ACPI support for Alpha is possible
with Linux?

Greetings,

Jurgen

</body></email><email><emailId>19991029143922</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-29 14:39:22-0400</timestampReceived><subject>Re: [Acpi] ACPI support for Alpha AXP (with recent HW)?</subject><body>

--- Jurgen Kramer &lt;GTM.Kramer@inter.nl.net&gt; wrote:
&gt; 
&gt; I'm not sure which Alpha systems have ACPI compliant
&gt; hardware, probably all 21264 based models. Do you
&gt; think ACPI support for Alpha is possible with Linux?

Yes, the Linux code should work on Alpha too.  There
are a lot of x86-isms in the ACPI spec so I'm not
sure of all the details of the Alpha implementation.
I know if we have someone to try out the code
(you?), any architecture dependence could be
wiped out.

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991025182449</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-25 18:24:49-0400</timestampReceived><subject>[Acpi] Re: [PATCH] ACPI fixes</subject><body>

--- Linus Torvalds &lt;torvalds@transmeta.com&gt; wrote:
&gt; 
&gt; On Fri, 22 Oct 1999, Andy Henroid wrote:
&gt; &gt;
&gt; &gt; * fixed iomapped memory accesses - filled in
&gt; &gt;   readl's and just kmalloc and copy the FACP
&gt; &gt;   (using just readl's makes the code look
&gt; &gt;   pretty evil)
&gt; 
&gt; Actually, you shouldn't even need to use "readl()"
&gt; as it should be in real memory, not in "IO memory". 

Yeah, the tables I'm accessing will definitely
be in real RAM and I knew I could get away without
the readl's on x86.  I took a look at the
implementation of ioremap and readl on the
Alpha and it wasn't so clear that I didn't
need readl there.

In the next patch, I'll go back to the old way
(without readl) unless somebody gripes.

Thanks,
Andy




-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19991021110234</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-10-21 11:02:34-0400</timestampReceived><subject>Re: [Acpi] Namespace management issues</subject><body>

On Wed, 20 Oct 1999, Michael K. Johnson wrote:

&gt; I understand that the DSDT is normally in writable memory, but the
&gt; FACS is explicitly mentioned to have read-write memory, that doesn't
&gt; seem to be the case for DSDT.

The DSDT is, I think, explicitly allowed to be in ROM.

&gt; This implies, to me, that the standard expects that objects will
&gt; be created in new memory and their values initialized from the
&gt; data in the AML byte stream.  It also implies, to me, that we
&gt; do not have to populate the whole namespace before starting;
&gt; rather, I think that we can populate namespace as we go along.

We can build the tree "on demand" if we want to, but I think it would
cause some troubles to the memory management if we'd add small chunks of
memory all the time. We can reduce the memory footprint by allocating a
bunch of buffers, parsing the tree there and copying it into one
contiguous memory block that we kmalloc(), and we do the same for each
SSDT. This way, we end up with a few allocations a bit (&lt;4k) greater than
the original ?SDTs and mm doesn't get confused. However, it requires
parsing the tree at once (Also important: Will we store names of or
pointers to named variables in the tree? The latter requires relocating
the tree when we copy it around, the former a bit of extra parsing each
time a variable is referenced).

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19991023015232</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-23 01:52:32-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI fixes</subject><body>


This patch is against 2.3.23

Small changes
* exported __io_virt_debug so ACPI can be
  built as a module
* fixed iomapped memory accesses - filled in
  readl's and just kmalloc and copy the FACP
  (using just readl's makes the code look
  pretty evil)
* added self to maintainers list - hopefully
  we'll have some functionality (bugs) in the
  near future to complain about

Would like soon to..
* switch from /dev/acpi to /proc/sys/acpi (sysctl)
* add back S5 on power off
* add support for non-ACPI PIIX4 C-states (VAIO)
* move assembly to an arch-dependent header file
* take a crack at some kind of device power arch

-Andy



=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.23.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991025182926</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-10-25 18:29:26-0400</timestampReceived><subject>[Acpi] Re: [PATCH] ACPI fixes</subject><body>


On Mon, 25 Oct 1999, Andy Henroid wrote:
&gt;
&gt; Yeah, the tables I'm accessing will definitely
&gt; be in real RAM and I knew I could get away without
&gt; the readl's on x86.  I took a look at the
&gt; implementation of ioremap and readl on the
&gt; Alpha and it wasn't so clear that I didn't
&gt; need readl there.

On the alpha, the ioremap() should always end up being a no-op, as RAM is
always fully mapped on the alpha. The same will most probably be true on
any other 64-bit architectures.

The correct thing to do is probably eventually to have a special
"memoryremap()" thing that is similar to ioremap() but expressly does a
memory mapping - and will usually do the same thing as ioremap(). But
let's wait until we actually have problems. I hate fixing bugs that
aren't.

		Linus

</body></email><email><emailId>19991026181212</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-10-26 18:12:12-0400</timestampReceived><subject>[Acpi] [PATCH] ACPI</subject><body>


This patch is against 2.3.24-pre1

Changes
* Switched from /dev/acpi to sysctl interface
  in /proc/sys/acpi.  Also modified the skeleton acpid
  to use the new interface.  Available at

     
http://www.geocities.com/SiliconValley/Hardware/3165/

* Began adding back support for non-ACPI PIIX4
  platforms. This should allow people with PIIX4
  but no ACPI tables to use ACPI (eg. VAIO)
* Also added support for using CPU cycles
  when there is no power management timer.
  I might rip this out later if no systems need it
  (I don't think non-ACPI PIIX4 should)
* Switched back to ioremap with no readl's based
  on mailing list discussion

-Andy


=====

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.24-1.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19991029145915</emailId><senderName>Jurgen Kramer</senderName><senderEmail>gtm.kramer@inter.nl.net</senderEmail><timestampReceived>1999-10-29 14:59:15-0400</timestampReceived><subject>Re: [Acpi] ACPI support for Alpha AXP (with recent HW)?</subject><body>

I am more then willing to test it on my Alpha. Just let me know.
But I have to say I'm not sure if my oldish system support it.

Andy Henroid wrote:

&gt; --- Jurgen Kramer &lt;GTM.Kramer@inter.nl.net&gt; wrote:
&gt; &gt;
&gt; &gt; I'm not sure which Alpha systems have ACPI compliant
&gt; &gt; hardware, probably all 21264 based models. Do you
&gt; &gt; think ACPI support for Alpha is possible with Linux?
&gt;
&gt; Yes, the Linux code should work on Alpha too.  There
&gt; are a lot of x86-isms in the ACPI spec so I'm not
&gt; sure of all the details of the Alpha implementation.
&gt; I know if we have someone to try out the code
&gt; (you?), any architecture dependence could be
&gt; wiped out.
&gt;
&gt; -Andy
&gt;
&gt; =====
&gt;
&gt; __________________________________________________
&gt; Do You Yahoo!?
&gt; Bid and sell for free at http://auctions.yahoo.com
&gt;
&gt; _______________________________________________
&gt; acpi maillist  -  acpi@phobos.fachschaften.tu-muenchen.de
&gt; http://phobos.fachschaften.tu-muenchen.de/mailman/listinfo/acpi

</body></email><email><emailId>19990903113004</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-03 11:30:04-0400</timestampReceived><subject>[Acpi] The future of ACPI4Linux</subject><body>

Hi,

As some of you might already know, there are now (at least :-) ) two
concurrent approaches to implementing ACPI. I do not think that
concurrently developing them is a good idea, and I hope you all agree on
this. I will summarize the advantages and disadvantages of these solutions
briefly:

The "classic" ACPI4Linux patch: This is a rather huge patchset which
already does some things that do not require the AML VM to work. Its
greatest strength is that it contains much useful code, its greatest
weakness size and complexity. I believe that following this track will
need enlarging the kernel by about 300k before we can even dare to
activate any real features.

A modular approach: This is a solution that is entirely module-based as
opposed to the ACPI4Linux patch which is not modularisable. It should work
on 95% of all PCs without patching the kernel, and on 100% with a 2k sized
patch to memory management. The current concept leaves the effective work
to a userspace daemon, the module itself just registers the interrupts and
reaches the events down to userspace. Its greatest strength is simplicity,
its greatest weakness the fact that ACPI devices need to be initialized by
an ACPI enumerator to work correctly, which would require e.g. the IDE
driver to reinitialize the device while the machine is already up and
running, a thing I would not like.

Both patches will require greater changes to other drivers, such as IDE
and USB later on.

I, personally, would vote for the ACPI4Linux patch because testing is
easier if you play with the hardware at a stage where you cannot do much
damage, but other people, including Max Berger, who is the "kernel guy" of
the project (I'm more into userland code) think different on this issue
[Max, Andy, I think it would be good to post something more about the
module here].

We need to make a decision soon, and we would like to have your opinion.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990905100537</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-05 10:05:37-0400</timestampReceived><subject>Re: [Acpi] file organization?</subject><body>

On Fri, 3 Sep 1999, brandon wrote:

&gt; i think my problem is that i don't fully understand the organization of
&gt; the directories.

I don't either. Perhaps that's because I'm doing mainly userspace stuff,
perhaps because it is a mess. Perhaps both.

&gt; i noticed that there are declarations for the acpi table header, root
&gt; system description table, etc. in both acpiint.h and
&gt; subsystem/include/acpitables.h, and i don't understand that.

The code in the subsystem directory is external code that Max has been
trying to merge. Duplicates happen if you have two implementations.

&gt; i'm not really expecting any solutions to what's wrong with my
&gt; modifications(unless by some chance you know exactly whats wrong), but any
&gt; help is of course welcome.

Well, we don't know your modifications yet. :-) Could you send in a patch
or something like that?

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990905104701</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-05 10:47:01-0400</timestampReceived><subject>[Acpi] Bad news: Starting over the repository</subject><body>

Hi,

In the last time it became more and more evident that our approach to the
problem was fundamentally wrong. The fact that the repository contained
some errors that have accumulated over time makes this no better. Thus we
restart the repository from a clean 2.3.16. The old linux tree wil be
available as "linuxold". If you want to commit some changes back into that
tree, you should do so in the next week, so we can take it over to the new
tree if it is usable. Please use the following command to change the
necessary files in your repository:

for i in `find . | grep CVS\/Repository`; do sed -e \
 'swacpi/linuxwacpi/linuxoldwg' $i &gt;$i.tmp; mv $i.tmp $i; done

I'm sorry that we had to take this step, but the old tree is a real mess.
The same goes for the X11 tree, but since noone has committed into that
tree except for me, I can easily delete that and start over. :-)

The acpid, amlc and libacpi directories are not affected, since I never do
imports there.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990905111720</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-05 11:17:20-0400</timestampReceived><subject>[Acpi] Good news: New strategy should make testing easier</subject><body>

Hi,

we have determined that we would run into a huge problem with the current
approach because we need the VM to initialize the hardware, however we
cannot test the VM from a running system without initializing the
hardware, because the results would not be reliable. Also, having the VM
statically in the kernel would increase the kernel size too much.

Alan Cox has pointed out an interesting idea: We boot with a kernel that
preserves all ACPI tables. Then an userspace program is run, compiling
native "drivers" out of the AML code and appending them to the kernel
image. On the next boot, we have the methods needed to use the hardware
available from the start, and boot into ACPI mode. The kernel size
increases only a few kbytes by this, and the code generation is an
userspace program which can easily be tested.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990906171846</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-06 17:18:46-0400</timestampReceived><subject>[Acpi] [patch] ACPI groundbreaking stuff</subject><body>

Hi,

Since the ACPI4Linux project has restarted their repository (the direction
the code went into was a dead end that made testing basically impossible),
we start from a clean kernel now.

This very first patch makes memory init more verbose and adds the
configuration options for ACPI (also known as the big red switch), so we
can play. :-)

Also, it adds the possibility to free ACPI tables that are not required by
the BIOS anymore instantly (for those who do not want ACPI support) and
adds the ACPI4Linux project to the maintainers list. It should apply
cleanly to 2.3.16.



Index: acpi/linux/MAINTAINERS
diff -u acpi/linux/MAINTAINERS:1.1.1.1 acpi/linux/MAINTAINERS:1.2
--- acpi/linux/MAINTAINERS:1.1.1.1	Sun Sep  5 13:19:19 1999
+++ acpi/linux/MAINTAINERS	Mon Sep  6 17:17:58 1999
@@ -93,6 +93,15 @@
 L:	linux-net@vger.rutgers.edu
 S:	Maintained
 
+ACPI POWER MANAGEMENT
+P:	Max Berger
+P:	Simon Richter
+M:	acpi-project@phobos.fs.tum.de
+M:	Max.Berger@phobos.fs.tum.de
+M:	Simon.Richter@phobos.fs.tum.de
+L:	acpi@phobos.fs.tum.de
+S:	Maintained
+
 AD1816 SOUND DRIVER
 P:	Thorsten Knabe
 M:	Thorsten Knabe &lt;tek@rbg.informatik.tu-darmstadt.de&gt;
Index: acpi/linux/Documentation/Configure.help
diff -u acpi/linux/Documentation/Configure.help:1.1.1.1 acpi/linux/Documentation/Configure.help:1.2
--- acpi/linux/Documentation/Configure.help:1.1.1.1	Sun Sep  5 13:22:50 1999
+++ acpi/linux/Documentation/Configure.help	Mon Sep  6 17:18:32 1999
@@ -9136,6 +9136,30 @@
 
   If unsure, say N.
 
+Advanced Configuration and Power Interface
+CONFIG_ACPI
+  ACPI is a new specification designed as a replacement for APM. It
+  allows a much finer grained power management that APM did, plus it
+  provides temperature management control (when to turn on fans, that
+  is) and configuration management (docking/undocking devices, ...).
+  It can not only make coffee but the entire breakfast.
+
+  ACPI is available on some Pentium and almost all PentiumII and
+  PentiumIII motherboards. The best thing is to look into your
+  mainboard documentation. 386 and 486 owners should say N here.
+
+Free ACPI tables on boot
+CONFIG_ACPI_NOTATALL
+  If you choose not to enable ACPI but your system has ACPI support,
+  your BIOS will mark some areas as being "reserved for ACPI". If you
+  enable this, these areas will be freed. On systems without ACPI
+  support, this option has no effect.
+
+  Say Y only if you know that you will not need ACPI. If you enable
+  this, you will not be able to build the initializer module unless
+  you boot with a new kernel without this option. On the other hand,
+  this will free some more memory if you don't want ACPI.
+
 Advanced Power Management
 CONFIG_APM
   APM is a BIOS specification for saving power using several different
Index: acpi/linux/arch/i386/config.in
diff -u acpi/linux/arch/i386/config.in:1.1.1.1 acpi/linux/arch/i386/config.in:1.3
--- acpi/linux/arch/i386/config.in:1.1.1.1	Sun Sep  5 13:22:09 1999
+++ acpi/linux/arch/i386/config.in	Mon Sep  6 18:52:59 1999
@@ -92,17 +92,29 @@
 
 source drivers/parport/Config.in
 
-tristate 'Advanced Power Management BIOS support' CONFIG_APM
-if [ "$CONFIG_APM" != "n" ]; then
-  bool '   Ignore USER SUSPEND' CONFIG_APM_IGNORE_USER_SUSPEND
-  bool '   Enable PM at boot time' CONFIG_APM_DO_ENABLE
-  bool '   Make CPU Idle calls when idle' CONFIG_APM_CPU_IDLE
-  bool '   Enable console blanking using APM' CONFIG_APM_DISPLAY_BLANK
-  bool '   Power off on shutdown' CONFIG_APM_POWER_OFF
-  bool '   Ignore multiple suspend' CONFIG_APM_IGNORE_MULTIPLE_SUSPEND
-  bool '   Ignore multiple suspend/resume cycles' CONFIG_APM_IGNORE_SUSPEND_BOUNCE
-  bool '   RTC stores time in GMT' CONFIG_APM_RTC_IS_GMT
-  bool '   Allow interrupts during APM BIOS calls' CONFIG_APM_ALLOW_INTS
+if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
+  bool 'Advanced Configuration and Power Interface support (EXPERIMENTAL)' CONFIG_ACPI
+else
+  define_bool CONFIG_ACPI n
+fi
+
+if [ "$CONFIG_ACPI" = "n" ]; then
+  if [ "$CONFIG_EXPERIMENTAL" = "y" ]; then
+    bool '   Free ACPI tables on boot (EXPERIMENTAL)' CONFIG_ACPI_NOTATALL
+  fi
+
+  tristate 'Advanced Power Management BIOS support' CONFIG_APM
+  if [ "$CONFIG_APM" != "n" ]; then
+    bool '   Ignore USER SUSPEND' CONFIG_APM_IGNORE_USER_SUSPEND
+    bool '   Enable PM at boot time' CONFIG_APM_DO_ENABLE
+    bool '   Make CPU Idle calls when idle' CONFIG_APM_CPU_IDLE
+    bool '   Enable console blanking using APM' CONFIG_APM_DISPLAY_BLANK
+    bool '   Power off on shutdown' CONFIG_APM_POWER_OFF
+    bool '   Ignore multiple suspend' CONFIG_APM_IGNORE_MULTIPLE_SUSPEND
+    bool '   Ignore multiple suspend/resume cycles' CONFIG_APM_IGNORE_SUSPEND_BOUNCE
+    bool '   RTC stores time in GMT' CONFIG_APM_RTC_IS_GMT
+    bool '   Allow interrupts during APM BIOS calls' CONFIG_APM_ALLOW_INTS
+  fi
 fi
 
 endmenu
Index: acpi/linux/arch/i386/mm/init.c
diff -u acpi/linux/arch/i386/mm/init.c:1.1.1.1 acpi/linux/arch/i386/mm/init.c:1.2
--- acpi/linux/arch/i386/mm/init.c:1.1.1.1	Sun Sep  5 13:22:10 1999
+++ acpi/linux/arch/i386/mm/init.c	Mon Sep  6 17:20:00 1999
@@ -413,11 +413,34 @@
 	/* walk the whitelist, unreserving good memory
 	 */
 	for (avail = i = 0; i &lt; e820.nr_map; i++) {
-		if (e820.map[i].type != 1)	/* not usable memory */
-			continue;
-		printk("memory region: %luk @ %08lx\n",
+		printk("memory region: %luk @ %08lx ",
 				    ((long)(e820.map[i].size)) / 1024,
 				    (long)(e820.map[i].addr) );
+		switch(e820.map[i].type) {
+		case 1:
+			printk("(system memory)");
+			break;
+		case 2:
+			printk("(reserved)");
+			break;
+		case 3:
+#ifdef CONFIG_ACPI_NOTATALL
+			printk("(system memory [ACPI reclaim])");
+			e820.map[i].type = 1;
+#else
+			printk("(ACPI reclaim memory)");
+#endif
+			break;
+		case 4:
+			printk("(ACPI NVS memory)");
+			break;
+		default:
+			printk("(unknown memory type, unusable)");
+		}
+		printk("\n");
+
+		if (e820.map[i].type != 1)	/* not usable memory */
+			continue;
 		for (addr=PAGE_ALIGN(((long)(e820.map[i].addr)))+PAGE_OFFSET,
 								     tmp = 0;
 				     tmp &lt; (unsigned long)(e820.map[i].size);

Is the patch acceptable this way?

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990909173900</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-09 17:39:00-0400</timestampReceived><subject>[Acpi] ACPI "thin driver" patch (against 2.3.17)</subject><body>


I haven't seen much in the way of ACPI support
appearing in any of the recent development kernels.
Is it possible we've missed the feature freeze
window or that the patches submitted so far are
unacceptible?

If the window is still open, I'm submitting a patch
that implements the "thin ACPI driver" idea
that we've been discussing with Alan Cox.  It
is "thin" in that as little code as possible is
built into the kernel and a majority of the ACPI
work will be done by a user-space daemon (AML
interpreter, resource managment, etc.)

A skeleton for the user-space daemon is here

  http://www.geocities.com/SiliconValley/Hardware/3165/

It doesn't really do much right now (enables ACPI,
detects and handles power/sleep button events) but
I am in the process of integrating our AML
interpreter, which would make this pretty fully
functional.  C-states and S-states, for example,
would work by pre-interpreting the AML up in
user-space and then handing the I/O register poking
sequence to the kernel driver.

Please let me know what you think.

Thank you,
Andy Henroid
andy_henroid@yahoo.com

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.17.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19990909221752</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-09 22:17:52-0400</timestampReceived><subject>[Acpi] Administravive: CVS Access</subject><body>

Hi,

this is an administrative mail concerning CVS access. The :pserver: is
insecure and will (hopefully soon) be converted to an anonymous access.

Everyone wanting to access our repository should do the following

first time:
&gt;export CVS_RSH=ssh
&gt;export CVSROOT=(yourusername)@phobos.fs.tum.de:/work/cvs
&gt;cvs checkout acpi

This ensures you are using a secure connection. Ssh can be found at
www.ssh.fi -&gt; protocols. We have an ssh1 AND an ssh2 server, to provide
Access for US and Non-US residents. (ssh2 does not use RSA)

cvs update:
&gt;export CVS_RSH=ssh
&gt;cvs update

What, you don't have an CVS account? Are you an developer? Are you willing
to participate? Write to acpi-project@phobos.fs.tum.de, sent us an
crypt-ed password, and we'll set things up

Max Berger
e-mail: max.berger@phobos.fs.tum.de

-- ACPI4Linux project: http://phobos.fs.tum.de/acpi/
-- Plees doont mind se spelink misstakss
-- PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
-- PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990910164055</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-10 16:40:55-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

On Fri, 10 Sep 1999, Linus Torvalds wrote:

&gt; I don't buy for a moment that we don't have a functional system: it will
&gt; have to be fairly functional just to load the kernel off the harddisk.

Yes, but there is a reason why you need the IDE driver linked statically
into the kernel if you wnat to boot off an IDE harddisk, and you also need
the PCI enumerator if the controller is a PCI one. The same goes for ACPI.
You will need ACPI enum if you want to access an ACPI IDE controller. This
is why we need this stuff in kernelspace later.

&gt; Ergo, the harddisk controller has already been initialized, and the
&gt; argument that you need ACPI to do initialization has to be a obvious red
&gt; herring.

Nope. It has been initialized to read data. It has not been initialized to
do power saving. IDE has been a standard since years, I don't believe the
BIOS programmers changed their code to init those registers, because this
is not required in the spec and they can use their code on more different
chipsets if they do not use these registers. So we need to reinitialize
the devices, so that we can save power. If we use the AML methods without
initializing these registers, we risk data loss and weird crashes.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990913224813</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-13 22:48:13-0400</timestampReceived><subject>[Acpi] Re: ACPI "thin driver" patch</subject><body>


I was out of town Friday and over the weekend so
I may have missed my opportunity to get this
patch in on time.  If that is not the case,
attached is a patch against 2.3.18 with suggested
changes.  The accompanying user-space skeleton
is at

  http://www.geocities.com/SiliconValley/Hardware/3165/

--- Linus Torvalds &lt;torvalds@transmeta.com&gt; wrote:
&gt; 
&gt; Ok, you're getting pretty close to convincing me
&gt; you're right.

Also, the ACPI specification allows the AML inside
the DSDT to change at runtime in response to ACPI
events.  When you attach your laptop to its docking
station, for example, a new DSDT can appear to
describe the new devices available.  This seems
somewhat ugly to support with the AML to kernel
module compiler or similar models.

&gt; Minor changes, though:
&gt;  (a) the ACPI_FIND_TABLES interface is wrong as-is:
&gt;      you must _not_ return a kernel linear address
&gt;      into user space. The user space code should
&gt;      get the _physical_ addresses of the tables,
&gt;      because that's the interface it can use
&gt;      for "mmap(/dev/mem)".
&gt;  (b) Always just do a "ioremap()" on the physical
&gt;      address - if it's in kernel memory it will
&gt;      just return the virtual address. Your current
&gt;      code tries to be more complex than necessary
&gt;      with the conditionals.
&gt;  (c) mind re-formatting the code so that I can
&gt;      read it?

OK.  I've made your suggested changes (a) and (b).
I'm not sure what formatting you are looking for
to address (c) though.  Give me some idea of
what you want (or don't like) and I'd be happy
to reformat.

Thank you,
Andy
andy_henroid@yahoo.com

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com
["acpi_patch-2.3.18.gz" (application/x-gzip-compressed)]

</body></email><email><emailId>19990915172827</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-15 17:28:27-0400</timestampReceived><subject>RE: [Acpi] Re: ALS</subject><body>

On Wed, 15 Sep 1999, Dave J Woolley wrote:

&gt; &gt; If the 300k solution does not add weird callback chaining that would be

&gt; 	You are talking of 40 to 50% kernel bloat, all of which 
&gt; 	has to be tested to a much higher standard than user
&gt; 	space code, or you'll have the stability of Windows 3.1.

Right. We *will* have to be careful, but at least it is better than having
parts of the device enumeration depend on an userspace daemon. :-)

&gt; &gt; necessary with the 4k one, works on more different hardware and does not
&gt; &gt; rely on userspace code not being modifiable by any remote attacker, it is.

&gt; 	Why is /dev/kmem or /vmlinuz any less vulnerable to an
&gt; 	attacker than user space code.

/dev/kmem requires CAP_RAWIO. You would want to disallow that for a
server, and /vmlinuz can be made immutable. The latter does not mean much,
I know, but at least it may be possible in the future to disallow any IO
requests from userspace in the future, and I do not want to have a daemon
on my system that stops me from taking this step.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990925195801</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-25 19:58:01-0400</timestampReceived><subject>Re: [Acpi] Re: [PATCH] generic ACPI support</subject><body>

On Thu, 23 Sep 1999, Andy Henroid wrote:

&gt; When Linux comes along, storage devices will
&gt; be ready for use on, for example, the PCI bus.

Yes, and we need to shut them down cleanly, reinitialize them and then
restart the drivers. #2 is difficult from userspace after #1. 

&gt; I'm talking about the initial boot process.
&gt; Once you are post-boot (as you would be before
&gt; you'd go into a sleep state) you have a chance
&gt; to initialize devices correctly with ACPI.

Yes, but you have to do legacy init again then and have the driver save
state before that so it can restart properly afterwards. Also, how do you
want to handle conditionals in the AML code? You disagreed with the idea
of a compiler that would build modules and insert them and with the idea
of a static VM. I cannot see how this should work otherwise.

&gt; I believe the chances for kernel inclusion of
&gt; the thick model *right now* are fairly close to
&gt; zero and for me that's pretty much a trump
&gt; for the thin model.

Do you really think that the chance for inclusion into the kernel should
be the unit of measure here? I like a clean solution that I have to apply
manually more than a dirty one that comes with the tarball.

Anyways, there is much to be done before, for example the shutdown/restart
code in the native drivers. Assuming they maintain state is nice, but a
clean shutdown is better.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990801141404</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-01 14:14:04-0400</timestampReceived><subject>[Acpi] Mirrors</subject><body>

Hi,

I thought that it may be wise to have some of the files mirrored across
the world, to make downloading a more convenient experience :-). If you
know anyone who could provide a little FTP space and a mirror script,
please write Max or me.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:09pm  up 1 day,  4:24,  2 users,  load average: 1.05, 1.07, 1.09

</body></email><email><emailId>19990909200122</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-09-09 20:01:22-0400</timestampReceived><subject>[Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>


On Thu, 9 Sep 1999, Andy Henroid wrote:
&gt;
&gt; I haven't seen much in the way of ACPI support
&gt; appearing in any of the recent development kernels.
&gt; Is it possible we've missed the feature freeze
&gt; window or that the patches submitted so far are
&gt; unacceptible?

I have looked at the patches, and in all cases I have just wondered what
the point is for me to integrate this?

As far as I can tell, in order to fully support the real ACPI states (CPU
idle etc), you'll need much more than this, and this looks like a good way
to explore the ACPI tables, but it does not appear to be a good way to
actually have a real ACPI implementation. 

The way I see ACPI, you need to do the full work of parsing the AML stuff
eventually anyway (or then you take the current rather cheezy approach of
hardcoding it for the one portable I have access to ;)

And it is fairly clear that you want to do the AML parsing in user space. 

So then, with the kind of approach you suggest, you would upload a "action
table" from user space into this generic ACPI driver, no? A "ioctl()" that
uploads a table of events into a "ACPI parser" inside the kernel to handle
in-kernel ACPI events.

And I think that just sucks, excuse my french.

If you parse the ACPI tables, you might as well instead of generating
action tables and using ioctl's etc to upload them, you could just
generate C code, and compile it as a module that you load into the kernel.

No complex action interpreter - all the complexity is done by the C
compiler.

No need for the kernel to ever parse any ACPI table at all: the user space
thing has done everything for it, can hardcode all the events in the
binary, and you're all done. No need for any infrastructure that doesn't
actually give you anything real in return.  No need for the kernel to have
the ACPI parse code. And you can free up the ACPI memory after you've
created the module if you want to.

No need for a extended user mode interface - if the ACPI module exports
the same interface as apm does, you can get battery events etc that the
user cares about, but you don't need to have any interface for the
uploading of acpi data because all of that has been "compiled" into the
module by the ACPI table parser.

Does anybody see any real gotchas with this kind of approach? 

		Linus

</body></email><email><emailId>19990914225937</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-14 22:59:37-0400</timestampReceived><subject>[Acpi] Re: ALS</subject><body>

Forwarding this discussion to the mailing list
to keep it open.  I hope that's OK.

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; [The thin driver model]
&gt; 

My point in my argument for the thin driver model
is that it is a workable solution even for systems
without legacy device initialization (as there is
*always* going to be legacy initialization on
boot devices)  Sure, we might have to go back and
reconfigure devices later and, yes, that could
be a pain but it definitely is possible.

The only way around this and the thing you seem
to keep coming back to is building an interpreter
statically into the kernel.  Listen to Alan Cox.
Listen to Linus.  Because of size, that's not an
option.  (Even with an extremely slim
implementation, the AML interpreter is doing
a lot and it's going to be pretty sizeable)

&gt;&gt; You would also need to recompile and reload
&gt;&gt; your kernel module whenever the system's
&gt;&gt; AML changes (eg. when your laptop is attached
&gt;&gt; to its docking station)  That's pretty bad.
&gt; 
&gt; I know. It is no real solution. It was never meant
&gt; to be, as it assumes, like your code, that we can
&gt; boot the system, which may not always be true.

Relying on legacy boot is not the problem with
the AML-to-C compiler model.  The problem is it
would be really ugly to do right.  Everyone that
wishes to have ACPI support installs a compiler?
Docking your laptop causes a recompile and
reinstall of the ACPI kernel module?

&gt; Yes, actually. A friend of both Max and mine
&gt; suggested that if we had a working table parser
&gt; (which can be developed in userspace using "#define
&gt; kmalloc(x) malloc(x)"), it would be possible to grab
&gt; a powerful machine, an ACPI capable machine with
&gt; a boot prom and x (=number of people involved)
&gt; terminals and just implement it by trial

OK, I think you are suggesting an implementation
strategy here but not really a solution to the
problem.  Am I mistaken?  Maybe I don't understand
what you are saying here..

Thanks,
Andy


__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990919042549</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-19 04:25:49-0400</timestampReceived><subject>[Acpi] Re: [PATCH] generic ACPI support</subject><body>

On Thu, 16 Sep 1999, Andy Henroid wrote:

&gt; This is one of the two ideas floating around in
&gt; the ACPI4Linux project.  I'm calling this one the
&gt; "thin ACPI driver" model.  The alternate idea
&gt; basically integrates the AML interpreter directly
&gt; into the kernel which adds quite a bit of size
&gt; to the kernel (guessing maybe 300k+, ouch)

I think there is still need for discussion here (Obviously, I favor the
idea with the VM in the kernel...).

I think that the "thin driver" model has some important drawbacks:

ACPI does device enumeration, and although current systems do not require
that for booting, doing the enumeration after booting (when the daemon is
running) means shutting down all affected subsystems (IDE, USB, PCMCIA,
...), reinitializing the hardware using the AML method the BIOS provided
for this (there is no way to circumvent this, as only this AML code knows
about the ACPI specific registers in the chipset) and then restart the
drivers. Also, even if we do this, we still have to go to a solid VM when
hardware is available that relies on ACPI enum.

The second big drawback is that not only sleeping but also proper waking
depends on a userspace program, which needs to take precautions not to get
swapped out because it needs to work even when only the CPU and memory are
powered. You can easily shoot yourself in the foot with that. :-)

The third thing that disturbs me is that a userspace program tells the
kernel where to peek and poke. This program can easily be replaced by
someone breaking in from the network, while this is harder to do for the
kernel. Also, you cannot easily determine what accesses are legal because
the driver needs to be able to access all hardware. By a skilled attacker,
this can be used to circumvent the file system and low level harddisk
drivers, or to read or write arbitrary memory. Short, a huge security
hole.

This is why I favor the static solution, even if it bloats the kernel and
is hard to debug.

&gt; &gt; Also please consider a good generic power management
&gt; &gt; interface underneath ACPI.  Non-ACPI devices[1] can
&gt; &gt; use this interface to achieve the same things.

If a device complies to the ACPI hardware requirements, the easiest way to
support it is to add own AML code for that device. If it does not, it is
perhaps possible to kludge some AML code as well, but the best idea is not
to touch that device. Handling non-compliant power management devices adds
too much complexity, I fear.

&gt; I definitely need to start putting together a good
&gt; device power management interface to implement
&gt; ACPI D-states.  Something like (to the driver)
&gt; "going into D2, save your device state".

We are too few people to do everything at the same time. This is why I've
frozen the userland code.

&gt; Support for broken or non-ACPI devices will
&gt; certainly be kept in mind.  Of course, the
&gt; ACPI4Linux project needs to get a bit further
&gt; along before that's even an issue.

Implementing non-ACPI devices will be a PITA. I want compliant devices to
work first, so that we have some working code to go back to if support for
noncompliant devices starts to get messy.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990920233731</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-20 23:37:31-0400</timestampReceived><subject>[Acpi] Re: [PATCH] generic ACPI support</subject><body>

-- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; I think that the "thin driver" model has some
&gt; important drawbacks:

[1. device enumeration/initialization]

This will not be an issue until hardware that
depends on ACPI for initialization appears. That's
going to be a while and, even then, boot devices
will always be initialized by the system so the
OS can be loaded.

Yes, with the thin driver model, device
re-initialization is going to be necessary on
platforms without legacy initialization.  And
yes, that's going to be complicated but I think
it is definitely workable.

[2. device sleep/wake]

Right, we can't rely on user-space for turning
storage devices on and off.  What we can do
is pre-run the AML in user-space and upload
the I/O access sequence to the kernel for
execution.

[3. security]

It's just as easy to install a new kernel or
kernel module as it is to replace a system
daemon.  If someone has root access you are
vulnerable with either model.

&gt; This is why I favor the static solution, even if it
&gt; bloats the kernel and is hard to debug.

#1 and #2 are definitely important issues but
I think there are solutions to both while keeping
the bulk of ACPI code in user-space.

You are going to need a much more convincing argument
to get that much code into the kernel initially.
Why don't we go the thin way and as specific issues
arise or new hardware appears, then push more of the
code into the kernel?

Thanks,
Andy


__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990921191351</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-21 19:13:51-0400</timestampReceived><subject>[Acpi] Re: [PATCH] generic ACPI support</subject><body>

On Mon, 20 Sep 1999, Andy Henroid wrote:

Sorry that it took so long to reply, our network is currently out, and I
don't know when we will be back online.

&gt; &gt; I think that the "thin driver" model has some important drawbacks:

&gt; [1. device enumeration/initialization]

&gt; This will not be an issue until hardware that depends on ACPI for
&gt; initialization appears. That's going to be a while and, even then,
&gt; boot devices will always be initialized by the system so the OS can be
&gt; loaded.

Well, this is not Windows. You cannot use the BIOS for more than loading
the kernel image.

&gt; Yes, with the thin driver model, device re-initialization is going to
&gt; be necessary on platforms without legacy initialization.

Nope, on all machines. Legacy init does not care about ACPI registers. If
you go to sleep without initializing them, *Kaboom*

&gt; [2. device sleep/wake]

&gt; Right, we can't rely on user-space for turning storage devices on and
&gt; off.  What we can do is pre-run the AML in user-space and upload the
&gt; I/O access sequence to the kernel for execution.

Okay, but we also need to precompile all the code that will be necessary
to get the devices back up that are required for the daemon to be
executed.

&gt; [3. security]

&gt; It's just as easy to install a new kernel or kernel module as it is to
&gt; replace a system daemon.  If someone has root access you are
&gt; vulnerable with either model.

Yes, but this is about the possible damage. I have the last four versions
of each file on tape, so I don't care too much if someone does a "rm -rf
/", I just need to get my backup floppy and be up and running again within
four hours. If you turn off my CPU fan, the damage is much greater.

&gt; #1 and #2 are definitely important issues but
&gt; I think there are solutions to both while keeping
&gt; the bulk of ACPI code in user-space.

I need something more than that to start developing code. I don't want to
throw it all away because there is no solution to the problems. Also, I'd
like to have #3 solved.

&gt; You are going to need a much more convincing argument
&gt; to get that much code into the kernel initially.

Aren't security, stability and simplicity enough? :-)

&gt; Why don't we go the thin way and as specific issues
&gt; arise or new hardware appears, then push more of the
&gt; code into the kernel?

Because it is difficult to move the code you are suggesting into the
kernel. I can live with a solution like the one you suggest, but only if
it has no important disadvantages. I still see those three. If you manage
to convince me that these are no issues, or that I can also live with that
and put that on a server safely (We have a server room without cooling
here), you can count me in.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990923151143</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-23 15:11:43-0400</timestampReceived><subject>[Acpi] Re: [PATCH] generic ACPI support</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; &gt; [1. device enumeration/initialization]
&gt; 
&gt;&gt; This will not be an issue until hardware that
&gt;&gt; depends on ACPI for initialization appears. That's
&gt;&gt; going to be a while and, even then, boot devices
&gt;&gt; will always be initialized by the system so the OS
&gt;&gt; can be loaded.
&gt; 
&gt; Well, this is not Windows. You cannot use the BIOS
&gt; for more than loading the kernel image.

No, I'm not talking about using the BIOS after boot.
Storage devices are going to be initialized on
their respective buses for the boot process.
When Linux comes along, storage devices will
be ready for use on, for example, the PCI bus.

&gt;&gt; Yes, with the thin driver model, device
&gt;&gt; re-initialization is going to be necessary on
&gt;&gt; platforms without legacy initialization.
&gt; 
&gt; Nope, on all machines. Legacy init does not care
&gt; about ACPI registers. If you go to sleep without
&gt; initializing them, *Kaboom*

I'm talking about the initial boot process.
Once you are post-boot (as you would be before
you'd go into a sleep state) you have a chance
to initialize devices correctly with ACPI.

&gt;&gt; #1 and #2 are definitely important issues but
&gt;&gt; I think there are solutions to both while keeping
&gt;&gt; the bulk of ACPI code in user-space.
&gt; 
&gt; I need something more than that to start developing
&gt; code. I don't want to throw it all away because
&gt; there is no solution to the problems. Also, I'd
&gt; like to have #3 solved.

I don't think there is any debate over where policy
management is going to be (user-space) or where
the device power management work is (kernel-space)
So, there is plenty to get started on while the
debate over the location of the interpreter
continues.

&gt; solution like the one you suggest, but only if
&gt; it has no important disadvantages. I still see those
&gt; three. If you manage to convince me that these are
&gt; no issues, or that I can also live with that
&gt; and put that on a server safely (We have a server
&gt; room without cooling here), you can count me in.

I'm not going to be able to convince you that there
are no issues with this approach because clearly
there are.  It's really a matter of weighing the
importance of issues for the thin driver model vs.
issues for the thick :) driver model.

I believe the chances for kernel inclusion of
the thick model *right now* are fairly close to
zero and for me that's pretty much a trump
for the thin model.

Bottom up development is the way things work in
the Linux kernel and what will guarantee kernel
inclusion and a rapid pace of development.  Look
into what happened to the Linux USB project.  The
lesson there is start off small and acceptible and
build on additional layers or move things around
as specific issues arise.

-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990914232209</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-14 23:22:09-0400</timestampReceived><subject>[Acpi] Re: ALS</subject><body>

On Tue, 14 Sep 1999, Andy Henroid wrote:

&gt; My point in my argument for the thin driver model
&gt; is that it is a workable solution even for systems
&gt; without legacy device initialization (as there is
&gt; *always* going to be legacy initialization on
&gt; boot devices)

The boot and root device can be totally different (I have a client that
runs Windows95 and loads Linux using loadlin, then the rest happens via
NFS, also there is TFTP, floppies). Also, the method that the BIOS uses to
find the devices is not necessarily one that an OS would use.

&gt; The only way around this and the thing you seem
&gt; to keep coming back to is building an interpreter
&gt; statically into the kernel.  Listen to Alan Cox.
&gt; Listen to Linus.  Because of size, that's not an
&gt; option.  (Even with an extremely slim
&gt; implementation, the AML interpreter is doing
&gt; a lot and it's going to be pretty sizeable)

This is the only option IMO. It is the only way a system running ACPI
could be made secure and the only one that will definitely work with
future devices. Linux and Alan will have to accept that or come up with a
better solution.

&gt; &gt; Yes, actually. A friend of both Max and mine
&gt; &gt; suggested that if we had a working table parser
&gt; &gt; (which can be developed in userspace using "#define
&gt; &gt; kmalloc(x) malloc(x)"), it would be possible to grab
&gt; &gt; a powerful machine, an ACPI capable machine with
&gt; &gt; a boot prom and x (=number of people involved)
&gt; &gt; terminals and just implement it by trial

&gt; OK, I think you are suggesting an implementation
&gt; strategy here but not really a solution to the
&gt; problem.  Am I mistaken?  Maybe I don't understand
&gt; what you are saying here..

I suggest testing what can be tested in userspace, then merging it into
the kernel and implement the rest of the VM statically in the kernel in a
closed session with the necessary equipment to test the VM on a live
system in a reasonable amount of time. This means having direct eye
contact to the other developers, so that no two guys try to compile at the
same time.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990915003737</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-15 00:37:37-0400</timestampReceived><subject>Re: [Acpi] Re: ALS</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; The boot and root device can be totally different (I
&gt; have a client that runs Windows95 and loads Linux
&gt; using loadlin, then the rest happens via NFS, also
&gt; there is TFTP, floppies). Also, the method
&gt; that the BIOS uses to find the devices is not
&gt; necessarily one that an OS would use.

If a platform has no legacy device initialization
and the device you want to boot off of is not
a standard boot device (ie. not a hardrive
or floppy), I don't think it is unreasonable to
say "no".  Along the same lines, you can't boot
from a PCMCIA drive or network card.  This
doesn't seem to be an unreasonable restriction.

&gt; &gt; The only way around this and the thing you seem
&gt; &gt; to keep coming back to is building an interpreter
&gt; &gt; statically into the kernel.
&gt; 
&gt; This is the only option IMO. It is the only way a
&gt; system running ACPI could be made secure and the
&gt; only one that will definitely work with future
&gt; devices. Linux and Alan will have to accept
&gt; that or come up with a better solution.

No, this is the only option for booting from
a non-standard boot device on a platform without
legacy device initialization.  Come on, this
scenario is totally contrived considering
the hardware doesn't even yet exist.

So, your goal is to convince Linus that we need
to add 300k+ to the kernel to support ACPI
when a workable solution that will add about
4k to the kernel and works for all existing
hardware and most configurations of future
hardware exists?

-Andy


__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990915151606</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-15 15:16:06-0400</timestampReceived><subject>Re: [Acpi] Re: ALS</subject><body>

On Tue, 14 Sep 1999, Andy Henroid wrote:

&gt; If a platform has no legacy device initialization
&gt; and the device you want to boot off of is not
&gt; a standard boot device (ie. not a hardrive
&gt; or floppy), I don't think it is unreasonable to
&gt; say "no".  Along the same lines, you can't boot
&gt; from a PCMCIA drive or network card.  This
&gt; doesn't seem to be an unreasonable restriction.

I have to disagree here. Of the five machines I have at home, two are
net-booted. Having a proper solution is important to me.

&gt; No, this is the only option for booting from
&gt; a non-standard boot device on a platform without
&gt; legacy device initialization.  Come on, this
&gt; scenario is totally contrived considering
&gt; the hardware doesn't even yet exist.

"Yet" is the keyword. I don't want to throw it all away when the hardware
does exist.

&gt; So, your goal is to convince Linus that we need
&gt; to add 300k+ to the kernel to support ACPI
&gt; when a workable solution that will add about
&gt; 4k to the kernel and works for all existing
&gt; hardware and most configurations of future
&gt; hardware exists?

If the 300k solution does not add weird callback chaining that would be
necessary with the 4k one, works on more different hardware and does not
rely on userspace code not being modifiable by any remote attacker, it is.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990804123609</emailId><senderName>Johan Danielsson</senderName><senderEmail>joda@pdc.kth.se</senderEmail><timestampReceived>1999-08-04 12:36:09-0400</timestampReceived><subject>[Acpi] Re: Hello from ACPI4Linux...</subject><body>

Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt; writes:

&gt; We are wondering whether a similar thing is under way for NetBSD

I really don't know about this, but I'm interested in having it done
(which might not equal doing it :-) What is the status on the linux
front? How much is working? What about other os:es? The only other
project I know is the one for FreeBSD (which didn't do much the last
time I checked).

&gt; if it would be possible to synchronize our efforts (common API,
&gt; common support library code).

That would probably be a good idea, but forgive my ignorance, how much
of this do you think can be shared between different os classes? The
AML interpreter?

/Johan

</body></email><email><emailId>19990815074609</emailId><senderName>David Fries</senderName><senderEmail>dfries@mail.win.org</senderEmail><timestampReceived>1999-08-15 07:46:09-0400</timestampReceived><subject>[Acpi] fix some panics, please try</subject><body>

My commit fixes the problem I was having with panics on bootup.  The
problem was the tables were above main memory.  My changes ioremap the page
before memcpy_fromio is called if it is above main memory and unioremap the
page after memcpy_fromio.  This is tested and done in the function
memcpy_fromioacpi, please use this function when the table could be outside
of main memory.  The initial system pointer is the only exception I cn
think of right now.

If you turned off CONFIG_ACPI_MEMORY_BIOS_CALL because of panics on bootup,
please try enabling it and see if with this patch it doesn't panic on
bootup.

Because of how the patch is implimented using ioremap, the acpi_init had to
be moved later in the bootup sequence to allow some other kernel structures
to be initalized.  Is this early enough?  (It seems like it to me).

pcmcia is working with pcmcia-cs version 3.0.14 although my cards don't
seem to be setting themselves up properly, I have to manually tell them to
eject and insert for the ethernet to work.  --really isn't acpi related--

The patch is in the cvs tree and will not be in the daily snapshot until
tomorrow.

-- 
		+---------------------------------+
		|      David Fries                |
		|      dfries@mail.win.org        |
		+---------------------------------+

</body></email><email><emailId>19990815112404</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-15 11:24:04-0400</timestampReceived><subject>Re: [Acpi] fix some panics, please try</subject><body>

On Sun, 15 Aug 1999, David Fries wrote:

&gt; The patch is in the cvs tree and will not be in the daily snapshot until
&gt; tomorrow.

I have told my WWW Makefile to create tomorrow's snapshot today (it's not
published on the page, but the file is there...), so you can pick it up
there (the file will be overwritten by tomorrow's nightly make call and
replaced by the real snapshot), or alternatively look into cvsweb
(http://phobos.fs.tum.de/cgi-bin/cvsweb).

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990804131610</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-04 13:16:10-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

On 4 Aug 1999, Johan Danielsson wrote:

&gt; What is the status on the linux front?  How much is working?

Well, we have a dirty hack that does power off on shutdown (actually that
is the only thing that the user can see that works), everything else is
under development... Max, who is the guy responsible for the kernel stuff
is currently incorporating another implementation, but that is about as
much as I know about the proceedings of the kernel parts (my domain is the
userland code).

&gt; What about other os:es? The only other project I know is the one for
&gt; FreeBSD (which didn't do much the last time I checked).

Unfortunately alter.net has some router problems, so I can't reach the
ACPI/FreeBSD pages...

I thought about having a common API for ACPI support under all Un*ces, so
that one would not have to support multiple different solutions (I think
the API would also be accepted more easily then). How much of the kernel
code can be shared has to be seen, but I'm not an expert in kernel
programming.

&gt; &gt; if it would be possible to synchronize our efforts (common API,
&gt; &gt; common support library code).

&gt; That would probably be a good idea, but forgive my ignorance, how much
&gt; of this do you think can be shared between different os classes? The
&gt; AML interpreter?

The interpreter is kernel code, I'm afraid, but I thought about the
userland code -- The client libary, the X extension, ... Especially for
the X stuff it is very important to get a good, accepted solution because
it may very well happen that someone uses a Linux box as an X terminal to
access a NetBSD box or vice versa, and I want that to run smoothly.

I forgot to put that into my first mail: The homepage of the ACPI4Linux
project is http://phobos.fs.tum.de/acpi/ .

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  2:43pm  up 4 days,  3:00,  2 users,  load average: 1.39, 1.33, 1.20

</body></email><email><emailId>19990804135117</emailId><senderName></senderName><senderEmail>takawata</senderEmail><timestampReceived>1999-08-04 13:51:17-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

In message &lt;Pine.LNX.3.96.990804144350.19586D-100000@phobos.fachschaften.tu-mue
nchen.de&gt;, Simon Richter Wrote:
&gt;On 4 Aug 1999, Johan Danielsson wrote:

&gt;&gt; What about other os:es? The only other project I know is the one for
&gt;&gt; FreeBSD (which didn't do much the last time I checked).
&gt;
&gt;Unfortunately alter.net has some router problems, so I can't reach the
&gt;ACPI/FreeBSD pages...
What page do you mention?
As far as I know,the people who is interested in writing code for ACPI 
on FreeBSD is limited.
Warner Losh,Doug Rabson,and me, I think.
And I put some code to read ACPI infomation for FreeBSD at
http://www.planet.sci.kobe-u.ac.jp/~takawata/acpi/
But not so useful,I think,especially lack of document.

Takanori Watanabe.
&lt;a href="http://www.planet.kobe-u.ac.jp/~takawata/key.html"&gt;
Public Key&lt;/a&gt;
Key fingerprint =  2C 51 E2 78 2C E1 C5 2D  0F F1 20 A3 11 3A 62 2A 

</body></email><email><emailId>19990804140928</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-04 14:09:28-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

On Wed, 4 Aug 1999 takawata@shidahara1.planet.sci.kobe-u.ac.jp wrote:

&gt; &gt;Unfortunately alter.net has some router problems, so I can't reach the
&gt; &gt;ACPI/FreeBSD pages...

&gt; What page do you mention?

http://www.cse.ucsc.edu/~dkulp/fbsd/laptop.html (I cannot tell whether
this is the official page as the net is down. But the excerpt AV displayed
looked somewhat promising... :-)

&gt; As far as I know,the people who is interested in writing code for ACPI 
&gt; on FreeBSD is limited.
&gt; Warner Losh,Doug Rabson,and me, I think.

&gt; And I put some code to read ACPI infomation for FreeBSD at
&gt; http://www.planet.sci.kobe-u.ac.jp/~takawata/acpi/
&gt; But not so useful,I think,especially lack of document.

To be honest, I still haven't looked at your code... :-/ I will do this
when I'm in Berlin (huge outdoor computer meeting :-) ) this weekend.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990804155543</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-04 15:55:43-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; On 4 Aug 1999, Johan Danielsson wrote:

&gt; I thought about having a common API for ACPI support
&gt; under all Un*ces, so that one would not have to
&gt; support multiple different solutions (I think
&gt; the API would also be accepted more easily then).
&gt; How much of the kernel code can be shared has to
&gt; be seen, but I'm not an expert in kernel
&gt; programming.

Unfortunately because of licensing issues, GPL vs.
BSD, code can not be shared either way.  The most
that can probably be leveraged are APIs and
experience.

-Andy

_____________________________________________________________
Do You Yahoo!?
Free instant messaging and more at http://messenger.yahoo.com

</body></email><email><emailId>19990813055604</emailId><senderName>David Fries</senderName><senderEmail>dfries@mail.win.org</senderEmail><timestampReceived>1999-08-13 05:56:04-0400</timestampReceived><subject>[Acpi] good news</subject><body>

Support for my laptop Toshiba Protege 3015CT is comming along nicely.  It
boots without panics and I can cat some of the /proc/acpi/* files, although
it is panicing on one so I think I need to modify some code.

The good news is, the tables are above main memory and so they aren't being
overwritten because only main memory is mapped at bootup.
The bad news is, the tables are above main memory and so they can't be
accessed at bootup because only main memory is mapped at bootup.

To map the memory I had to move the acpi_init call after
kmem_cache_sizes_init, and I think it is at a more acceptable kernel
position to make the call instead of the previous place.

I need to do some code cleanups of what I've modified so far and there is
other code I need to modify to get rid of the panics I am having.  I
haven't even looked for this code.

It's about two hours after my bed time and tomorrow I have to figure out
assembly code so I really could have used the sleep, but I really hate to
stop when I'm making so much progress!

Expect patches.  I'm planning to just send a patch to the list for others
to try to see if I broke any other systems.  Unless you want me to just
apply it to the cvs repository.

2.2.11 just came out, could you hold off a couple days before putting it in
the repository so putting in my patch would be easier?  There might not be
any common changed files, but it would be easier.

-- 
		+---------------------------------+
		|      David Fries                |
		|      dfries@mail.win.org        |
		+---------------------------------+

</body></email><email><emailId>19990816175841</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-16 17:58:41-0400</timestampReceived><subject>Meeting Protocol (WAS: [Acpi] IRC meeting tonight)</subject><body>

On Mon, 16 Aug 1999, Simon Richter wrote:
&gt; Hi,
&gt; we will have an IRC meeting tonight, on IRCNet, channel #ACPI at 1800 CEST
&gt; (1600 GMT), hopefully s.t., possibly c.t. :-):

Unfortunately this meeting was set up too late. But we did reach some
agreements:

&gt; 1. Code organisation

The Code will be better documented. Andrew patches will be included soon
and stay mostly as they were, the current patch will be adapted to it.
Header files: Since public header files are only needed in
Kernel/Userspace communication, only they should go to linux/include, all
others should stay locally in the driver/acpi directory.

&gt; 2. Inclusion into the mainstream kernel and testing (2.2 vs. 2.3)

We will start to develop patches for the newest 2.3 kernel and hopefully
be included in the mainstream 2.4. 
2.2. will be fully supported until at least 2.4.1 is out.

&gt; 3. The interface beween userspace and the kernel

A userspace program send packets to /dev/acpi. The kernel passes this
packet on to the acpid which authorizes and checkes it and sends it back
to the kernel, which finally executes the order and notifies interested
clients.

&gt; 4. Legal texts

Will be passed on for later meetings.

&gt; 5. Working together with the *BSD people

We would like to have the same libraries and acpi-daemon, we would even
host ther projects, if they want to.

&gt; 6. Kernel size issues

Until ACPI reaches production state kernel size is not an issue. After
that everything that is not really necessary and increases kernel size
must be able to be turned off.

&gt; 7. More work (cron, atd, ...?)

Yes, indeed more work, but not now.

&gt; 8. Web pages and release management (possibly only interesting to
&gt;     webmasters, so I put this last)
[closed subject,  [...] ] see our webpage on how we do on this issue.

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990812052801</emailId><senderName>David Fries</senderName><senderEmail>dfries@mail.win.org</senderEmail><timestampReceived>1999-08-12 05:28:01-0400</timestampReceived><subject>[Acpi] init help</subject><body>

My laptop is giving me a kernel panic on this line in init.c of the alsa
code.

memcpy_fromio(&amp;acpi_tabledata[acpi_tablelast], tableAddress, 36);

This is on a Toshiba Protege 3015CT laptop.  tableAddress is set to
0x2010000, that would be at location 32.0625 megs which is more memory
thatn the laptop has.

Where is the table located on other systems?

The other question is I assume memcpy_fromio is using iospace.  Shouldn't
it be comming from memory not io port access?  How high does io port access
go?

-- 
		+---------------------------------+
		|      David Fries                |
		|      dfries@mail.win.org        |
		+---------------------------------+

</body></email><email><emailId>19990812060124</emailId><senderName>David Fries</senderName><senderEmail>dfries@mail.win.org</senderEmail><timestampReceived>1999-08-12 06:01:24-0400</timestampReceived><subject>Re: [Acpi] init help</subject><body>

The Root System Description Pointer Structure is pointing to address
0x2010000 which appears to actually exist on the laptop!

I need some VM help to actually access it though :(

More information, windows lists a bunch of address owned by 'system board
extension for ACPI BIOS'
       0-   9ffff
   f0000-   fffff
  100000- 200ffff
 2010000- 203ffff
fef80000-feffffff
fff00000-ffffffff

The one that I'm interested in is 0x2010000-0x203ffff.  I need to add a
physical to virtual translation for this 192K, which would be 48 4K pages.
I'll be kernel digging if someone doesn't post the call to add a physical
to virtual translation.

I don't know right now if I'm getting valid data from those reads, but I'm
guessing that I am, because it isn't crashing at the memory reference now,
but because I used mem=33m (the laptop has 32m) later on when the kernel
goes to use the last meg as memory it bombs.

Anyone else running into anything like this?

-- 
		+---------------------------------+
		|      David Fries                |
		|      dfries@mail.win.org        |
		+---------------------------------+

</body></email><email><emailId>19990824235115</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-24 23:51:15-0400</timestampReceived><subject>[Acpi] ACPI support in 2.3.14</subject><body>

Has anyone noticed Linus added some ACPI support
for the PIIX4 to 2.3.14?  Interesting...  Looks
like there is initial support for C1-3. It's
unfortunate, though, that he's using hardcoded
values instead of the FACP.

-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990825081527</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-25 08:15:27-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

On Tue, 24 Aug 1999, Andy Henroid wrote:

&gt; Has anyone noticed Linus added some ACPI support
&gt; for the PIIX4 to 2.3.14?  Interesting...  Looks
&gt; like there is initial support for C1-3. It's
&gt; unfortunate, though, that he's using hardcoded
&gt; values instead of the FACP.

Yes, and I've already written to him about this. The response read
somewhat as "You didn't send me patches, so I started something myself".
Well, now we sent patches, ... :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990826173911</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-26 17:39:11-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

On Thu, 26 Aug 1999, Andy Henroid wrote:

&gt; &gt; Well, now we sent patches, ... :-)

&gt; Did Linus give any indication of how acceptible
&gt; those patches were or when we can expect to see
&gt; them in 2.3?  Nothing yet in 2.3.15 which was
&gt; just released.

I'm afraid not, the only thing I heard was a statement on linux-kernel
that he received many patches this week and is not yet through looking at
them all. So I guess we'll have to be patient, the most we can do is
update the offsets in the patch (but this is Max's duty).

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990826174104</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-26 17:41:04-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; On Tue, 24 Aug 1999, Andy Henroid wrote:
&gt; 
&gt; &gt; Has anyone noticed Linus added some ACPI support
&gt; &gt; for the PIIX4 to 2.3.14?  Interesting...  Looks
&gt; &gt; like there is initial support for C1-3. It's
&gt; &gt; unfortunate, though, that he's using hardcoded
&gt; &gt; values instead of the FACP.
&gt; 
&gt; Yes, and I've already written to him about this. The
&gt; response read somewhat as "You didn't send me
&gt; patches, so I started something myself".
&gt; Well, now we sent patches, ... :-)

Did Linus give any indication of how acceptible
those patches were or when we can expect to see
them in 2.3?  Nothing yet in 2.3.15 which was
just released.

-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990830200215</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-30 20:02:15-0400</timestampReceived><subject>Re: [Acpi] progress?</subject><body>

On Mon, 30 Aug 1999, Andy Henroid wrote:
&gt; I haven't heard much movement in this project
&gt; lately.  Is it that you have become busy and
&gt; not a whole lot is being done?  Are there any
&gt; specific areas that you'd like help with? (I'm
&gt; not sure that the "parts page" is current or
&gt; fine-grained enough for me to determine this
&gt; for myself)
&gt; 
&gt; Thanks,
&gt; Andy
Hi,

yes, unfortunately work keeps me kinda busy lately.
These are the open ends we are working on:
- Combining you code and our code
  (and I mean not only the few thing I did so far, but really making 
   one out of it)
- Finding some good way to define kernel - user interfaces and 
  libraries (this it what Simon currently does)
- Keeping up-to-date with the newest 2.3 kernel and trying to get into 
  the mainstream kernel (this is what I've been doing lately)

So much for what we do. Unfortunately there is nothing much to see on the
outside.

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990826201829</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-26 20:18:29-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; On Thu, 26 Aug 1999, Andy Henroid wrote:
&gt; 
&gt; &gt; &gt; Well, now we sent patches, ... :-)
&gt; 
&gt; &gt; Did Linus give any indication of how acceptible
&gt; &gt; those patches were or when we can expect to see
&gt; &gt; them in 2.3?  Nothing yet in 2.3.15 which was
&gt; &gt; just released.
&gt; 
&gt; I'm afraid not, the only thing I heard was a
&gt; statement on linux-kernel that he received many
&gt; patches this week and is not yet through looking at
&gt; them all. So I guess we'll have to be patient, the
&gt; most we can do is update the offsets in the patch
&gt; (but this is Max's duty).

And what you submitted was acpi-19990821.gz?  It looks
like Linus was starting to lay out the framework for
entering C-states from the idle loop.  Any thought
about integrating into his work?

-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990826204718</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-26 20:47:18-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

On Thu, 26 Aug 1999, Andy Henroid wrote:

[Sent a patch to Linus]

&gt; And what you submitted was acpi-19990821.gz?  It looks
&gt; like Linus was starting to lay out the framework for
&gt; entering C-states from the idle loop.  Any thought
&gt; about integrating into his work?

Well, there are not only the C-States but also the possibility to change
the actual clock to adapt to the system load. Changing his implementation
to call ACPI routines is not a big thing, however the heuristics involved
in finding out whether sleeping or reducing speed is better will be.
Luckily they are not required to get a working implementation, so we can
place this at the bottom of the list. :-)

The other way 'round it makes no sense to me because he's accessing the
chipset without the BIOS, which (from the reports on linux-kernel) doesn't
work always.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990826221033</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-26 22:10:33-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; On Thu, 26 Aug 1999, Andy Henroid wrote:
&gt; 
&gt; Well, there are not only the C-States but also the
&gt; possibility to change the actual clock to adapt to
&gt; the system load.  Changing his implementation
&gt; to call ACPI routines is not a big thing, however
&gt; the heuristics involved in finding out whether
&gt; sleeping or reducing speed is better will be.

I don't believe there are any heuristics involved
in deciding between clock throttling and processor
power states.  From the idle loop you are always
going to want to enter one of the C-states.  Clock
throttling is used when you aren't idle but need
to control thermal output or conserve battery life.

&gt; Luckily they are not required to get a working
&gt; implementation, so we can place this at the bottom
&gt; of the list. :-)

I'm not sure I understand what you mean here.
Are you saying "There is no need to integrate
C-states on idle because ...." ?

&gt; The other way 'round it makes no sense to me because
&gt; he's accessing the chipset without the BIOS, which
&gt; (from the reports on linux-kernel) doesn't work
&gt; always.

Agreed, it is a bad idea to be poking at the chipset
directly.  His code could just as easily have used the
information from ACPI tables, allowing it to work
for other ACPI implementations.

-Andy


__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990812075744</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-12 07:57:44-0400</timestampReceived><subject>Re: [Acpi] init help</subject><body>

On Thu, 12 Aug 1999, David Fries wrote:

&gt; This is on a Toshiba Protege 3015CT laptop.  tableAddress is set to
&gt; 0x2010000, that would be at location 32.0625 megs which is more memory
&gt; thatn the laptop has.

&gt; Where is the table located on other systems?

Usually the BIOS creates these data structures on its stack, which (also
usually) starts at the highest possible location. Thus they are in most
cases near to the top of the memory.

I will take a look into that later, so expect another reply.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  9:53am  up 11 days, 22:16,  2 users,  load average: 1.15, 1.06, 1.01

</body></email><email><emailId>19990813100935</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-13 10:09:35-0400</timestampReceived><subject>Re: [Acpi] good news</subject><body>

On Fri, 13 Aug 1999, David Fries wrote:

&gt; Expect patches.  I'm planning to just send a patch to the list for others
&gt; to try to see if I broke any other systems.  Unless you want me to just
&gt; apply it to the cvs repository.

I think this is what CVS is for: Making reversible changes and
distributing them to the other developers. Go ahead and commit the
changes, it will be easier for everyone then. Those of you who want diffs
can pick them up on the webserver as soon as the restructuring is done,
which will be Monday (hopefully).

&gt; 2.2.11 just came out, could you hold off a couple days before putting it in
&gt; the repository so putting in my patch would be easier?  There might not be
&gt; any common changed files, but it would be easier.

I think we will be moving to 2.3.x soon, because it is due for a
feature-freeze soon and we should try to get ACPI into 2.4. But Max does
this. :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990804155701</emailId><senderName>Dave J Woolley</senderName><senderEmail>djw@bts.co.uk</senderEmail><timestampReceived>1999-08-04 15:57:01-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

&gt; From:	Andy Henroid [SMTP:andy_henroid@yahoo.com]
&gt; 
&gt; Unfortunately because of licensing issues, GPL vs.
&gt; BSD, code can not be shared either way.  The most
&gt; that can probably be leveraged are APIs and
&gt; experience.
&gt; 
	Berkeley licensed code can be used in GPLed code.

	More importantly, you can license code under more
	than one licence provided that you create it yourself,
	or have sufficient rights on the input material.

	Actually, to the extent that you are using multiple
	sources of code, it would probably be a good idea to
	start tracking copyright ownership now, and possibly
	agree on mechanisms for changing the licence and/or
	using alternative licenses.  One problem that the Lynx
	browser has is that, although the GPL has been getting
	in the way, of, for example, SSL versions, it is not
	practicable to trace the copyrights to get all the
	necessary clearances to issue it under a different
	licence.

</body></email><email><emailId>19990804163529</emailId><senderName>Johan Danielsson</senderName><senderEmail>joda@pdc.kth.se</senderEmail><timestampReceived>1999-08-04 16:35:29-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt; writes:

&gt; The interpreter is kernel code

But does it have to be? Couldn't you do this with a device driver that
talks to the bios, and do the rest in a userland daemon? You wouldn't
get any powermanagement without the daemon, but it would be a lot
easier to get something to work.

&gt; The client libary, the X extension, ... 

X-extension for what? Management of the display hardware? Do you need
more than what the current interface (xset) allows for?

My confusion is probably because I've had a hard time figuring out
exactly what acpi is supposed to do, and what it isn't.

/Johan

</body></email><email><emailId>19990915160513</emailId><senderName>Dave J Woolley</senderName><senderEmail>djw@bts.co.uk</senderEmail><timestampReceived>1999-09-15 16:05:13-0400</timestampReceived><subject>RE: [Acpi] Re: ALS</subject><body>

&gt; If the 300k solution does not add weird callback chaining that would be
&gt; 
	You are talking of 40 to 50% kernel bloat, all of which 
	has to be tested to a much higher standard than user
	space code, or you'll have the stability of Windows 3.1.

&gt; necessary with the 4k one, works on more different hardware and does not
&gt; rely on userspace code not being modifiable by any remote attacker, it is.
&gt; 
	Why is /dev/kmem or /vmlinuz any less vulnerable to an
	attacker than user space code.

</body></email><email><emailId>19990909221854</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-09 22:18:54-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

On Thu, 9 Sep 1999, Linus Torvalds wrote:

&gt; As far as I can tell, in order to fully support the real ACPI states (CPU
&gt; idle etc), you'll need much more than this, and this looks like a good way
&gt; to explore the ACPI tables, but it does not appear to be a good way to
&gt; actually have a real ACPI implementation. 

This is definitely correct. What we need is an idea how to get stuff
running, and how to get a solution that is worthy to carry the "The Right
Thing(tm)" stamp. These are two different things IMO.

We (Alan Cox, Max Berger, Andy Henroid and me) had an interesting
discussion about this last weekend. We saw four approaches:

 - A full parser in the kernel: This is definitely "The Right Thing", as
we need the code contained in the tables to enumerate the ACPI devices
(and as some devices appear on the PCI bus as well, this has to happen
before PCI enum), and the code is not guaranteed to stay the same across
reboots. But as we have seen, it is an insane thing to try writing this
from scratch, because we have to boot the system for each test run.

 - A full parser as a module: This was merely an idea to ease the
development of the first solution, however, it has shown that this is
basically undebuggable because the devices need to be initialized
correctly (which is by interpreting the AML code) to function correctly
(besides, I think this was the reason why the PIIX4 ACPI stuff behaved so
differently on different systems). Initializing the devices after booting
is close to impossible, as it would mean taking each affected subsystem
down, init'ing the hardware and restarting the subsystem. Imagine doing
that for IDE, USB, serial, parallel, ...

 - A full parser in userspace: This could be debugged more easily, however
there is still the init problem, which is even worse here because we
cannot merge the code into the kernel later.

 - Preprocessing tables in userspace, then adding them to the kernel
image: This is the approach we are currently (since a week) going after.
You boot the system using a kernel which exports the tables in userspace,
the compiler runs over them, generates something platform-independent (C
or a syntax tree), lets gcc run over that, gzip the result and append it
to the kernel image. At boot time, we unpack it, verify that it matches
the tables we parsed (a laptop could have different tables for different
configurations, for example docked and undocked) and boot. This is the
solution that is most easily debuggable, because we can verify that the
compiler creates semantically equivalent code without rebooting, however,
it has severe disadvantages: If you insert any new ACPI compliant device,
you have to compile the code for that device, too. Doing this once is
enough for every device should be enough, but it's still annoying. So it's
a temporary thing that helps us develop the "Right Thing" solution,
nothing more, nothing less.

So we went for the last approach, although it is going to take some time
until you really can do anything with it, and if that is running, we start
working on a real VM in the kernel, as the hardware is properly
initialized, and we can test the implementation without having to fear
side effects.

I will try to get everything on the web pages tomorrow, but I still have a
daytime job, so expect it to be late evening.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN9gyXvFUmCYJPaUlAQGG7AgArgQwcVEQTiDAeOQaCrPAqETAz0a6ZWxI
/MtRTFYO7m++5+GHgzlK81o3FxosHubjLxDSiKnjQxTtyFgF4uV4XgXk2uQ+ODxh
3SW+pvU7W4NLgW6RpVMf25bYoyST72xvlHPR/eF1RkJKzhgh+fouO9X/u1Z3B9GR
93hnuzqDYoNqkbT7fk85ZoeI09yvrhGFb4U1jDSPFnleUhF0YBslHU6ClUYHdCZB
1OHgHJ+cmORKoFMm9jWwtS3xvtZRMF17YbgbGxJ48zVLkGEocpMZ2fa5yLMZO+H2
rTWODLBxcsnwk5tFeKhQxqj/cX5dQaPm1NTDcfnQuSTGUl/aO2Ce9A==
=uguG
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990909222237</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-09-09 22:22:37-0400</timestampReceived><subject>[Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

--- Linus Torvalds &lt;torvalds@transmeta.com&gt; wrote:
&gt; 
&gt; So then, with the kind of approach you suggest, you
&gt; would upload a "action
&gt; table" from user space into this generic ACPI
&gt; driver, no? A "ioctl()" that
&gt; uploads a table of events into a "ACPI parser"
&gt; inside the kernel to handle
&gt; in-kernel ACPI events.

No, actually event handling would be done up in
user-space (check out how my skeleton driver/acpid
works).  The only thing that needs to be
uploaded is any ACPI I/O register poking that
absolutely can't be done in user-space.  That
would be nothing more than, for example,
"to enter C2, write this value to this I/O
register"  Not really quite as complex as you
are envisioning.  No need to be doing any
interpretation at all in the kernel.

&gt; If you parse the ACPI tables, you might as well
&gt; instead of generating
&gt; action tables and using ioctl's etc to upload them,
&gt; you could just
&gt; generate C code, and compile it as a module that you
&gt; load into the kernel.

&gt; Does anybody see any real gotchas with this kind of
&gt; approach? 

So everybody that wants to use ACPI support has a
compiler and is set up to build a kernel module?
The kernel module build would essentially have to
be done on a per-machine basis as each machine is
going to have different AML (different hardware
configuration, different BIOS revision, etc.)

Think how unbelievably painful this would make
it to put together a Linux distribution with ACPI
support.
 
-Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990909224007</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-09-09 22:40:07-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>


On Fri, 10 Sep 1999, Simon Richter wrote:
&gt; 
&gt; So we went for the last approach, although it is going to take some time
&gt; until you really can do anything with it, and if that is running, we start
&gt; working on a real VM in the kernel, as the hardware is properly
&gt; initialized, and we can test the implementation without having to fear
&gt; side effects.

Do we really even need a full AML parser in the kernel _ever_?

My suggestion hinges on that very fact. I think that once you boot, you
might as well parse it in user space, and just create a module that you
load (or hard-link - you'd have the option to say "do this kernel for
_this_ particular machine only") that does NOT contain an AML parser at
all, because it has been compiled in.

			Linus

</body></email><email><emailId>19990910001601</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-10 00:16:01-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

On Thu, 9 Sep 1999, Linus Torvalds wrote:
&gt; On Thu, 9 Sep 1999, Andy Henroid wrote:
&gt; &gt; No, actually event handling would be done up in
&gt; &gt; user-space (check out how my skeleton driver/acpid
&gt; &gt; works).  The only thing that needs to be
&gt; &gt; uploaded is any ACPI I/O register poking that
&gt; &gt; absolutely can't be done in user-space.  That
&gt; &gt; would be nothing more than, for example,
&gt; &gt; "to enter C2, write this value to this I/O
&gt; &gt; register"  Not really quite as complex as you
&gt; &gt; are envisioning.  No need to be doing any
&gt; &gt; interpretation at all in the kernel.
&gt; Works for me.
&gt; Ok, you're getting pretty close to convincing me you're right.

Hi,

I personally don't care if AML processing has to be done in user space,
kernel space, or even outer space. What I do know is that it has to be
done during/before bootup for proper device initialisation. And, what I do
know is that I had 3 people telling me at least 5 "proper" ways on where
and how this should be done.

And, what I also know is that I haven't been able to produce a single line
of code for the last two weeks, since everything I would have done would
have been discarded anyways.

Please, for the sake of getting something done, could someone PLEASE tell
me a way which makes us ALL happy?


Max Berger
e-mail: max.berger@phobos.fs.tum.de

-- ACPI4Linux project: http://phobos.fs.tum.de/acpi/
-- Plees doont mind se spelink misstakss
-- PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
-- PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990910010334</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-09-10 01:03:34-0400</timestampReceived><subject>[Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>


On Thu, 9 Sep 1999, Andy Henroid wrote:
&gt; 
&gt; No, actually event handling would be done up in
&gt; user-space (check out how my skeleton driver/acpid
&gt; works).  The only thing that needs to be
&gt; uploaded is any ACPI I/O register poking that
&gt; absolutely can't be done in user-space.  That
&gt; would be nothing more than, for example,
&gt; "to enter C2, write this value to this I/O
&gt; register"  Not really quite as complex as you
&gt; are envisioning.  No need to be doing any
&gt; interpretation at all in the kernel.

Works for me.

Ok, you're getting pretty close to convincing me you're right.

Minor changes, though:
 (a) the ACPI_FIND_TABLES interface is wrong as-is: you must _not_ return
     a kernel linear address into user space. The user space code should
     get the _physical_ addresses of the tables, because that's the
     interface it can use for "mmap(/dev/mem)".
 (b) Always just do a "ioremap()" on the physical address - if it's in
     kernel memory it will just return the virtual address. Your current
     code tries to be more complex than necessary with the conditionals.
 (c) mind re-formatting the code so that I can read it?

		Linus

</body></email><email><emailId>19990910061351</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-09-10 06:13:51-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>


On Fri, 10 Sep 1999, Max Berger wrote:
&gt; 
&gt; I personally don't care if AML processing has to be done in user space,
&gt; kernel space, or even outer space. What I do know is that it has to be
&gt; done during/before bootup for proper device initialisation.

You do?

I've not seen a single case of that at least yet. Sure, it may change, but
so far the ACPI stuff I've seen has been happy to be initialized "late",
way after boot. It may be using more power early on, and it may not be
taking advantage of all the hardware until after the init sequence, but it
should be ok.

The BIOS must have initialized enough of the CPU and the boot hardware
that we have access to a disk etc without any further ACPI.

&gt; Please, for the sake of getting something done, could someone PLEASE tell
&gt; me a way which makes us ALL happy?

It's clear at least to me that a lot of the early code has to be done in
user space. It's just too hard to experiment any other way. I assume
everybody agrees on that one. The disagreement is mainly about how much
kernel support there needs to be. Pretty much none, early on.

The latest patch flying around was pretty minimal, and I certainly
heartily like that. I would probably have liked it even more to make it
zero (and use a dynamically generated module), but I see the arguments for
the alternate way, and if there is something I'm good at it is at changing
my mind. Sometimes several times a day, in fact.

		Linus "some call it alzheimer, I prefer to call
			it a 'flexible' mind" Torvalds

</body></email><email><emailId>19990910114939</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-10 11:49:39-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

On Thu, 9 Sep 1999, Linus Torvalds wrote:

&gt; Do we really even need a full AML parser in the kernel _ever_?

Definitely. For now, we can boot (in "legacy mode") without parsing AML,
however future systems (I believe Andy is right when he says ia64) will no
longer have that mode. Starting to develop a parser *then* is much too
late. Besides, I think the "compile a module while in userspace" method is
a PITA, but the best we can currently offer. For laptop owners, enabling
ACPI support will look this way:

 - boot using an ACPI enabled kernel
 - compile a module
 - dock the laptop
 - reboot, using the same kernel
 - compile a module for docked state
 - link both modules to the kernel
 - reboot using the final kernel

This is necessary for every kernel change and every addition of hardware
that is recognized by a driver that is statically in the kernel. I doubt
this sounds like the ultimate solution.

&gt; My suggestion hinges on that very fact. I think that once you boot,

Exactly this is the point. ACPI does device enumeration. You cannot boot
without your harddisk controller. :-/

&gt; you might as well parse it in user space, and just create a module
&gt; that you load (or hard-link - you'd have the option to say "do this
&gt; kernel for _this_ particular machine only") that does NOT contain an
&gt; AML parser at all, because it has been compiled in.

Yes, this is what is in our repository now, but as I said it will only be
a temporary thing, to help us debug the real driver.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990910123145</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-09-10 12:31:45-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>

On Thu, 9 Sep 1999, Linus Torvalds wrote:

[ACPI init]

&gt; I've not seen a single case of that at least yet. Sure, it may change, but
&gt; so far the ACPI stuff I've seen has been happy to be initialized "late",
&gt; way after boot. It may be using more power early on, and it may not be
&gt; taking advantage of all the hardware until after the init sequence, but it
&gt; should be ok.

I'm afraid not. The ACPI state data in the hardware needs to be
initialized, and this is done by an AML method called _INI. This method,
however, resets the entire piece of hardware, which is unhealthy if the
hardware is in use. This is the main reason why it needs to be there at
that early stage.

&gt; The BIOS must have initialized enough of the CPU and the boot hardware
&gt; that we have access to a disk etc without any further ACPI.

It does initialize the registers it needs to. It doesn't care about the
ACPI registers, that is the duty of the OS.

&gt; It's clear at least to me that a lot of the early code has to be done in
&gt; user space. It's just too hard to experiment any other way. I assume
&gt; everybody agrees on that one. The disagreement is mainly about how much
&gt; kernel support there needs to be. Pretty much none, early on.

Well, we need to export the tables to /proc, so we can experiment with
some real world data. I thought about merging the /proc code back into the
"official" ACPI4Linux patch when I'm done with my other work, which will
not be before Sunday, alas. If someone else would do it, I would be glad.

&gt; The latest patch flying around was pretty minimal, and I certainly
&gt; heartily like that.

Well, there are many patches floating around. I know of three different
patches, submitted by three different people pulling into three different
directions:

 - The old ACPI4Linux patch, as submitted by Max a few weeks ago was quite
huge. We know that this thread of development has led to nothing, and
abandoned it.

 - The new ACPI4Linux patch, as I submitted it a few days ago, does not do
anything. It allows those who are not interested to free the memory, and
cares about turning off any code that might get in our way. The /proc
stuff is not yet merged back in, I planned to do it this weekend, but I
just got a mail from my boss.

 - The third patch is Andy Henroid's version, it basically does the
exporting (which I like, because it helps testing amlc [the compiler]),
but IMO the whole approach is fundamentally wrong, because you cannot do
init that late. It won't work with ia32 and even less with ia64.

&gt; I would probably have liked it even more to make it
&gt; zero (and use a dynamically generated module), but I see the arguments for
&gt; the alternate way, and if there is something I'm good at it is at changing
&gt; my mind. Sometimes several times a day, in fact.

If you had followed the discussion lately, you would have noticed that we
all do. We even disagree with the people we just convinced, because we
feel they are wrong. :-)

Still, we need to find a solution that leads us to a kernel based VM and
that is not too much of a PITA.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990910153046</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-09-10 15:30:46-0400</timestampReceived><subject>Re: [Acpi] Re: ACPI "thin driver" patch (against 2.3.17)</subject><body>


On Fri, 10 Sep 1999, Simon Richter wrote:
&gt; 
&gt; Definitely. For now, we can boot (in "legacy mode") without parsing AML,
&gt; however future systems (I believe Andy is right when he says ia64) will no
&gt; longer have that mode.

Note that for ia64, we're going to have a different bootup sequence. 

I don't buy for a moment that we don't have a functional system: it will
have to be fairly functional just to load the kernel off the harddisk.

Linux already boots on ia64, so don't worry about being late.

&gt; Exactly this is the point. ACPI does device enumeration. You cannot boot
&gt; without your harddisk controller. :-/

EXACTLY. You CANNOT boot without your harddisk controller.

Ergo, the harddisk controller has already been initialized, and the
argument that you need ACPI to do initialization has to be a obvious red
herring.

Don't make it more complicated than it needs to be for some "theoretical"
reasons.  

		Linus

</body></email><email><emailId>19990803111238</emailId><senderName>Dave J Woolley</senderName><senderEmail>djw@bts.co.uk</senderEmail><timestampReceived>1999-08-03 11:12:38-0400</timestampReceived><subject>RE: [Acpi] Organisational stuff and the APIs</subject><body>

&gt; From:	Andy Henroid [SMTP:andy_henroid@yahoo.com]
&gt; 
&gt; Isn't kernel-space a better place to be determining
&gt; process activity and system resource usage?  I'm
&gt; 
	In my view, kernel space code should do
	as little as possible.

&gt; Why not push this stuff (at least detection
&gt; if not control) down into the scheduler and
&gt; device drivers allowing for transparent ACPI
&gt; support?  There is going to have to be quite a
&gt; 
	Windows is well known for the ability of
	kernel space drivers to bring down the 
	whole system.  Please try to use the
	least privilege principle.

</body></email><email><emailId>19990804100054</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-04 10:00:54-0400</timestampReceived><subject>[Acpi] Hello from ACPI4Linux...</subject><body>

Hi,

the ACPI4Linux project is an effort to get power management via the
Advanced Configuration and Power interface up and running under Linux.

We are wondering whether a similar thing is under way for NetBSD, as we
could not find anything on the web, and if so, if it would be possible to
synchronize our efforts (common API, common support library code).

   Simon

PS: Please CC me, as I'm not on this list.

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990805084322</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-05 08:43:22-0400</timestampReceived><subject>Re: [Acpi] Re: Hello from ACPI4Linux...</subject><body>

On 4 Aug 1999, Johan Danielsson wrote:

&gt; &gt; The interpreter is kernel code

&gt; But does it have to be? Couldn't you do this with a device driver that
&gt; talks to the bios, and do the rest in a userland daemon? You wouldn't
&gt; get any powermanagement without the daemon, but it would be a lot
&gt; easier to get something to work.

I'm afraid not, because you need the interpreter when you are enumerating
ACPI devices (which has to happen before the PCI devices, because some
companies have their devices appear in both ACPI and PCI PnP).

&gt; &gt; The client libary, the X extension, ... 

&gt; X-extension for what? Management of the display hardware? Do you need
&gt; more than what the current interface (xset) allows for?

Power management in conjunction with wake-on-lan will have the problem
that as soon as you are running X11 with remote connections, the network
load from the keepalive packets will keep both server and client machine
awake. By extending the server and the toolkits we can manage that the
server may request to close the connection and wait for notification
(which will happen on a listening port, so wake-on-lan is sufficient).

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
 10:35am  up 4 days, 22:53,  1 user,  load average: 1.01, 1.02, 1.00

</body></email><email><emailId>19990805183901</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-05 18:39:01-0400</timestampReceived><subject>[Acpi] ACPI debug/informational tools</subject><body>

I've recently put together some ACPI tools that
might be useful for debug or informational purposes.
They can be found at

  http://www.geocities.com/SiliconValley/Hardware/3165/

1) A utility that disassembles the AML from the raw
   DSDT data.
   Example: (left column is the AML byte offset)

     gnu% ./acpidisasm /proc/acpi/dsdt
       00000000: Scope _PR_
       00000007:   Processor CPU0
       0000000e:     0x00
       0000000f:     0x0000fd10
       00000013:     0x06
       00000014:   Processor CPU1
       0000001b:     0x01
       0000001c:     0x0000fd16
       00000020:     0x06
       00000021: Name _S5_
       00000026:   Package
       00000028:     0x02
       00000029:     0x00
       0000002a:     0x00
       ...

2) A Perl script that displays the contents (fields)
   of ACPI tables from the raw table data.
   Example:

     gnu% ./acpitbl /proc/acpi/facp
       Signature:        FACP
       Length:           116
       Revision:         0x01
       Checksum:         0x89
       OEMID:            Intel
       OEM Table ID:     S450NX
       OEM Revision:     0x00000001
       Creator ID:       INT
       Creator Revision: 0x000f4240
       FIRMWARE_CTRL:    0x0fffffc0
       DSDT:             0x0ffac6b
       INT_MODEL:        0x00
       SCI_INT:          9
       SMI_CMD:          0x000000b2
       ACPI_ENABLE:      0xf0
       ACPI_DISABLE:     0xf1
       ...

Max/Simon if any of these tools looks useful
could you add them to the main ACPI4Linux
downloads page?

Thanks,
Andy


_____________________________________________________________
Do You Yahoo!?
Free instant messaging and more at http://messenger.yahoo.com

</body></email><email><emailId>19990811221441</emailId><senderName>Gert Menke</senderName><senderEmail>gert@menke.za.net</senderEmail><timestampReceived>1999-08-11 22:14:41-0400</timestampReceived><subject>[Acpi] Suspend-To-Disk</subject><body>

Hi!

I just installed ACPI4Linux on my Notebook (Acer Travelmate 512T) and it
works fine. (BTW: APM-Support crashes while booting. :-( )

There are two features that I'm interested in:

1. (maybe the easier one) when I don't touch the keyboard for a few
minutes, the screen is blanked. wouldn't it be nice to switch off the
display's backlight then? (I believe, this is what APM does, but I couldn't
test it.)

2. Suspend-To-Disk. An extremely cool thing. :-)

Is there already someone working on these things?
Will it perhaps even work in the near future?

tia,
Gert

</body></email><email><emailId>19990815155914</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-15 15:59:14-0400</timestampReceived><subject>Re: [Acpi] fix some panics, please try</subject><body>

On Sun, 15 Aug 1999, Simon Richter wrote:

&gt; &gt; The patch is in the cvs tree and will not be in the daily snapshot until
&gt; &gt; tomorrow.
&gt; I have told my WWW Makefile to create tomorrow's snapshot today (it's not
&gt; published on the page, but the file is there...), so you can pick it up
&gt; there (the file will be overwritten by tomorrow's nightly make call and
&gt; replaced by the real snapshot), or alternatively look into cvsweb
&gt; (http://phobos.fs.tum.de/cgi-bin/cvsweb).

An even better idea: I switched the www pages to the new system. Now it is
an official experimental release... :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
!noitpyrcne devorppa yllatnemnrevog dna eruces ylno esu I

</body></email><email><emailId>19990816124117</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-16 12:41:17-0400</timestampReceived><subject>[Acpi] IRC meeting tonight</subject><body>

Hi,

we will have an IRC meeting tonight, on IRCNet, channel #ACPI at 1800 CEST
(1600 GMT), hopefully s.t., possibly c.t. :-):

The agenda so far:

1. Code organisation
2. Inclusion into the mainstream kernel and testing (2.2 vs. 2.3)
3. The interface beween userspace and the kernel
4. Legal texts
5. Working together with the *BSD people
6. Kernel size issues
7. More work (cron, atd, ...?)
8. Web pages and release management (possibly only interesting to
    webmasters, so I put this last)

Please mail suggestions/additions/corrections to me.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990816183950</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-16 18:39:50-0400</timestampReceived><subject>Re: [Acpi] good news</subject><body>

--- Simon Richter &lt;geier@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; I think we will be moving to 2.3.x soon, because it
&gt; is due for a feature-freeze soon and we should try
&gt; to get ACPI into 2.4. But Max does this. :-)

We've probably missed the 2.3.x window for ACPI.
New features that are going to get in at this point
are things like additional functionality for existing
subsystems not something entirely new like ACPI.

I think we can realistically look to 2.5 (or whatever
the next development release is) for kernel inclusion.
And there is certainly a lot of work to do between
now and then to make sure we are ready as soon as
2.5 is started.

What do you think?

-Andy


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com

</body></email><email><emailId>19990816190128</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-16 19:01:28-0400</timestampReceived><subject>Re: Meeting Protocol (WAS: [Acpi] IRC meeting tonight)</subject><body>

--- Max Berger &lt;mage@phobos.fs.tum.de&gt; wrote:
&gt; 
&gt; Unfortunately this meeting was set up too late. But
&gt; we did reach some agreements:

Sorry I didn't make the meeting.  By the time I
checked my mail, it was already over.

&gt; Header files: Since public header files are only
&gt; needed in
&gt; Kernel/Userspace communication, only they should go
&gt; to linux/include, all
&gt; others should stay locally in the driver/acpi
&gt; directory.

Sounds good.  Besides, kernel people would not
appreciate us littering linux/include with a bunch
of ACPI headers.

&gt; &gt; 2. Inclusion into the mainstream kernel and
&gt; testing (2.2 vs. 2.3)
&gt; 
&gt; We will start to develop patches for the newest 2.3
&gt; kernel and hopefully
&gt; be included in the mainstream 2.4. 
&gt; 2.2. will be fully supported until at least 2.4.1 is
&gt; out.

Please see my previous mail about 2.3/4 inclusion.

&gt; &gt; 4. Legal texts
&gt; 
&gt; Will be passed on for later meetings.

What do you have in mind?  GPL as is, right?

&gt; &gt; 6. Kernel size issues
&gt; 
&gt; Until ACPI reaches production state kernel size is
&gt; not an issue. After
&gt; that everything that is not really necessary and
&gt; increases kernel size
&gt; must be able to be turned off.

Well, ACPI itself obviously has to be able to
be compiled in or out.  If you get very fine-grained
about which ACPI features you can turn on or off,
I think you are going to make the config process
pretty confusing without saving a lot of kernel
space.

One thing I think should be considered is the
ability to compile ACPI as a kernel module (except
for the little bit, like address map, that needs to
be static)  This would really simplify debug
and would probably be appreciated by Linux
distribution vendors when ACPI gets into the
mainstream kernel.

Thanks,
Andy


_________________________________________________________
Do You Yahoo!?
Get your free @yahoo.com address at http://mail.yahoo.com

</body></email><email><emailId>19990817115916</emailId><senderName>Stephen Early</senderName><senderEmail>stephen.early@cl.cam.ac.uk</senderEmail><timestampReceived>1999-08-17 11:59:16-0400</timestampReceived><subject>Re: [Acpi] init help</subject><body>

&gt; More information, windows lists a bunch of address owned by 'system board
&gt; extension for ACPI BIOS'
&gt;        0-   9ffff
&gt;    f0000-   fffff
&gt;   100000- 200ffff
&gt;  2010000- 203ffff
&gt; fef80000-feffffff
&gt; fff00000-ffffffff
&gt; 
&gt; The one that I'm interested in is 0x2010000-0x203ffff.  I need to add a
&gt; physical to virtual translation for this 192K, which would be 48 4K pages.
&gt; I'll be kernel digging if someone doesn't post the call to add a physical
&gt; to virtual translation.

The memory detection patch that I submitted a few months ago should
print out the memory range information during boot. Please run 'dmesg'
shortly after boot and post the information here.

The BIOS ought to report the range 2010000--203ffff as type 3 or type
4, and the memory sizing code ought to arrange for this area to be
accessible by the memcpy_fromio() call. Either the BIOS is reporting
the memory range incorrectly or you have defined
NO_ACPI_MEMORY_BIOS_CALL (or whatever it's called these days).

Steve Early

</body></email><email><emailId>19990821222714</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-21 22:27:14-0400</timestampReceived><subject>[Acpi] added true S5 and power/sleep button support</subject><body>

I've been working for a while now on an ACPI driver
that has been paralleling and, in fact, sharing
core code with the ACPI4Linux driver.  I've just
added some new features to my driver and would love
to see them merged or help merge them into the main
ACPI4Linux driver.  A lot of the code in my driver
that I'm now using got cut out in the last merge
into the ACPI4Linux.  Otherwise, I would have just
built up from that.

True S5 support (not just a hack) and some power
and sleep button support has just been added
to my driver.  Power button causes the machine
to reboot (by signalling "init").  I would have preferred shutdown
(read the notes for why
I didn't).  Sleep button just output a debug
message (nothing really useful for it to do at
the moment).  If a supplied kernel patch is
applied, "shutdown -h" will cause the system to
enter S5.  The /proc/acpi/namespace interface
now has some useful device information (PnP IDs,
PCI info, ...) and actually uses the PnP ID to
determine what type of device is being displayed.
I've also fixed a pretty major memory mapping bug
(same one just fixed in ACPI4Linux) that was
causing problems on some hardware.

I'm releasing the driver as-is for the moment but
intend to merge in the system address map code and
probably package it as a single kernel patch in
the near future.

I would appreciate people trying it out and letting
me know what you think.

  http://www.geocities.com/SiliconValley/Hardware/3165/

Thanks,
Andy
andy_henroid@yahoo.com


__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990827114952</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-27 11:49:52-0400</timestampReceived><subject>Re: [Acpi] ACPI support in 2.3.14</subject><body>

On Thu, 26 Aug 1999, Andy Henroid wrote:

[Deciding between a C-State and throttling]

&gt; I don't believe there are any heuristics involved
&gt; in deciding between clock throttling and processor
&gt; power states.  From the idle loop you are always
&gt; going to want to enter one of the C-states.  Clock
&gt; throttling is used when you aren't idle but need
&gt; to control thermal output or conserve battery life.

When the load is below 1 but not zero, I think we should reduce the CPU
speed rather that sleep, because sleeping neither saves power nor reduces
thermal output. But that is only an option. :-)

&gt; &gt; Luckily they are not required to get a working
&gt; &gt; implementation, so we can place this at the bottom
&gt; &gt; of the list. :-)

&gt; I'm not sure I understand what you mean here.
&gt; Are you saying "There is no need to integrate
&gt; C-states on idle because ...." ?

No, I'm saying "There is no need to change anything in Linus'
implementation before we can provide at least the same functionality".
Then, it should be easy to change the functions to use the AML methods.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
NP: Lamb - "Alien"

</body></email><email><emailId>19990827222225</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-27 22:22:25-0400</timestampReceived><subject>[Acpi] ACPI4Linux patch for 2.3.15</subject><body>

I rerolled the ACPI kernel patch for 2.3.15 if
you guys could resubmit to Linus.  It's here

  http://www.geocities.com/SiliconValley/Hardware/3165/

I did pull out the memory BIOS call as there is
currently a better (more generic) patch on its way
into the kernel.

  http://kernelnotes.org/lnxlists/linux-kernel/lk_9908_04/msg00485.html

ACPI4Linux's patch should be more palatable to
Linus without it.  Other than that it is pretty
much the same as acpi-19990821pub.gz  Minor
changes
* moved some of config.in modification into
  drivers/acpi/Config.in as you should
* made some Makefile/Config.in corrections to allow
  ACPI to be built as a module in the future
* generated the patch in the standard form
  expected by Linus

-Andy



__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990830133939</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-08-30 13:39:39-0400</timestampReceived><subject>[Acpi] Memory detection code?</subject><body>

[CCed to David Parsons, Stephen Early and the ACPI4Linux mailing list]

Hi,

I would like to ask what your plans for the memory detection code are.
AFAICR there have been two patches so far:

 - Stephen Early's adaption of the int15h call
 - David Parsons' "memory map from hell" patch

Currently Stephen's patch is also contained in modified form in the
ACPI4Linux patchset, which Max, our kernel guy, sent to Linus a few days
ago.

It would be great to know what patch you will be going after, and (that's
why I CCed all those folks) what needs to be changed in that respective
patch so that the areas containing ACPI tables (memory types 2 and 3
AFAIK) can be preserved for later parsing. Also, are all methods employed
fully capable of recognizing these areas?

Looking forward to hearing from you,
   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

</body></email><email><emailId>19990830201603</emailId><senderName>Andy Henroid</senderName><senderEmail>andy_henroid@yahoo.com</senderEmail><timestampReceived>1999-08-30 20:16:03-0400</timestampReceived><subject>[Acpi] progress?</subject><body>

I haven't heard much movement in this project
lately.  Is it that you have become busy and
not a whole lot is being done?  Are there any
specific areas that you'd like help with? (I'm
not sure that the "parts page" is current or
fine-grained enough for me to determine this
for myself)

Thanks,
Andy

__________________________________________________
Do You Yahoo!?
Bid and sell for free at http://auctions.yahoo.com

</body></email><email><emailId>19990830204611</emailId><senderName>Linus Torvalds</senderName><senderEmail>torvalds@transmeta.com</senderEmail><timestampReceived>1999-08-30 20:46:11-0400</timestampReceived><subject>[Acpi] Re: Memory detection code?</subject><body>


On Mon, 30 Aug 1999, Simon Richter wrote:
&gt; 
&gt; I would like to ask what your plans for the memory detection code are.
&gt; AFAICR there have been two patches so far:
&gt; 
&gt;  - Stephen Early's adaption of the int15h call
&gt;  - David Parsons' "memory map from hell" patch

I've already applied the "memory map from hell" thing, after I told David
what I wanted it to look like. 

I'll make a pre-patch of my current pre-2.3.16 code, you can all gawk at
it there. And yes, I'll accept patches on top of that too, but the basic
structure is, I think, fixed.

		Linus

</body></email><email><emailId>19990701152557</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-07-01 15:25:57-0400</timestampReceived><subject>[Acpi] I wrote a paper anout ACPI....</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

I was invited to submit a paper for the Atlanta Linux Showcase 99. It
describes some basics of ACPI and its Linux implementation. Since this is
a public paper, I have decided to publish it on the ACPI Website.

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 5.0i for non-commercial use
Charset: noconv

iQEVAwUBN3uIkk/LTI8vN/FZAQFL7wf/RDtGo0gQDNSDNbBg3Ec51qGSXd/DFSj+
I7uIljGcC6xVs7NMHZAouyohZ5lWTnEmf5svUevsaSkc7a0EWbxKalB4J/IhIw/X
P4UNamWoGv8e4qeekB1bTSQ2N4SSom+4FTcPVbJVwmUE5J1iq+AM1XtlpKKkBuxy
TcQsEaUfiIioUx7U5/fxq4EvzCWnR8ExF/NNott+OY9dR4e3/LXfBmQ0qdtDWW12
qCTsDdxtlN3+8eDIFiY9y/R5yYnZsT7n6ngcAAvbyySR35c9SCI5YYWXPo/uO9B2
KL/FIwLIDafi0ywEXIFh6zOQ2r5YUrs8AhJw0t8pfpycHT+DZvi0+w==
=R/EV
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990709190923</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-09 19:09:23-0400</timestampReceived><subject>Re: [Acpi] BIOS size for ACPI</subject><body>

On Fri, 9 Jul 1999, Eric Sandeen wrote:

&gt; I recently got an Epox KP6-BS dual PII motherboard, and it had
&gt; advertised ACPI.  Unfortunately, it is not ACPI compliant (I found this
&gt; out after using the ACPI4Linux patch).

Ummm, to be really truthfully honest, the scan does not yet work
correctly... :-/

&gt; I wrote to Epox, and all they
&gt; did was change their website to say "**selected ACPI functions only." 

:-))

&gt; I'm pretty sure that my board has a 1 mb BIOS (megabit), and I've seen
&gt; some that are 2 mb... does anyone know roughly how much space it takes
&gt; to support minimal ACPI compliance?  I'm wondering if there's a chance
&gt; that a BIOS update will be provided at a later date, or if it's
&gt; impossible given memory constraints.

Most MBs can work with different BIOS sizes, but that depends. Usually the
tables are about 32k, so there are about 96k left in an 128k (=1Mbit)
BIOS. Of course, this must be enough to support booting from all bootable
mainboard hardware... :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  9:02pm  up 20 days,  2:20,  2 users,  load average: 1.13, 1.19, 1.18

</body></email><email><emailId>19990712112123</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-12 11:21:23-0400</timestampReceived><subject>[Acpi] libacpi 19990712 released</subject><body>

Hi,

I have released a snapshot of libacpi. It has no functionality yet and
doesn't compile straight either, but I think it might be of some interest.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  1:19pm  up 22 days, 18:40,  5 users,  load average: 1.04, 1.12, 1.10

</body></email><email><emailId>19990712194138</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-12 19:41:38-0400</timestampReceived><subject>Re: [Acpi] newbie acpi question.</subject><body>

On Sat, 10 Jul 1999, Eric Wagner wrote:
&gt; I just finished patching up my kernel (2.2.10) and rebooting.  I'm
&gt; fairly sure that I've done everything right.  I'm definitely running the
&gt; new kernel (uname -a verifies) but I'm not seeing an entry in /proc for
&gt; acpi.
&gt; does this mean that my supposedly acpi compliant bios does not really
&gt; support acpi, or does it mean that I've done something wrong.
&gt; I'm running on a chembook 3300T.
&gt; thanks for any help.
&gt; eric.
Not, it does not mean you LapTop is not ACPI compliant. It means the check
algorithm is currently not fully implemented - a thing that was not noted
on the website till now.
I WILL implement it if I have time......


Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990713115021</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-13 11:50:21-0400</timestampReceived><subject>[Acpi] Administrativia: Security</subject><body>

Hi,

Since phobos has been subject to an attack lately, I believe the 
cvspserver service imposes a certain risk to the system security. Thus I
want to remove this service and allow CVS access only via ssh. This,
however, will only work if everyone involved in the project is able to use
ssh. I'm not overly informed (read: have no clue) whether ssh is available
(legally :-) ) in other countries. Could those of you not being allowed
access to ssh by their governments drop me a line, so I can find an
alternative solution?

For all others, this means changing the CVS/Root files to

&lt;your user name&gt;@phobos.fs.tum.de:/work/cvs

Basically you should remove the ":pserver:" from the beginning of the
line, cvs will use rsh then. Additionally, you need to set up an
environment variable CVS_RSH with a value of "ssh". CVS won't save this
unfortunately, so you will need to set it up at least each time you wish
to access the repository.

This also means that the CVS accounts will all turn into regular user
accounts. Please be kind to our system, it is only a 486... :-)

Note: "will" means within the next hours. I will send a separate mail to
everyone whose account I've converted. I also need to work sometimes...
:-/

Note2: I suggest that you use RSA as your authentication method, via the
authorized_keys file.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  1:22pm  up 23 days, 18:43,  4 users,  load average: 2.95, 2.05, 1.47

</body></email><email><emailId>19990714145557</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-14 14:55:57-0400</timestampReceived><subject>[Acpi] Administrativia: Backup</subject><body>

Hi,

just a short note: We have received our very own ADSM node in the
university, which means that we no longer create tarballs in the
background but instead do an incremental ADSM backup at 3am, however, this
means the machine will be a little bit congested at this time.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:47pm  up 24 days, 22:09,  8 users,  load average: 2.95, 3.14, 3.04

</body></email><email><emailId>19990719195045</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-19 19:50:45-0400</timestampReceived><subject>[Acpi] Administrativa: phobos down several hours</subject><body>

Hi,

I have taken phobos down today because of a suspected attack which seemed
to have succeeded. In fact there was nothing, but I believe it was still
a good thing to pull the plug until we had clarified the situation. The
machine should be running normally again now, only that the uptime is a
bit low... :-/

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  9:47pm  up  3:53,  1 user,  load average: 1.12, 1.09, 1.04

</body></email><email><emailId>19990720221340</emailId><senderName>"Henroid, Andrew D"</senderName><senderEmail>andrew.d.henroid@intel.com</senderEmail><timestampReceived>1999-07-20 22:13:40-0400</timestampReceived><subject>RE: [Acpi] More code published</subject><body>

Just a clarification.  In an earlier mail to Max I had said
"we are working on ..." and intended to say "another developer
and I are working on ...".  This code is not a product of or
release from my employer.

That being said, please try out the driver and let me know
what you think.  Hopefully, the pace of ACPI development
will be speeding up and we can soon see a lot more of
ACPI working on Linux.

-Andy

</body></email><email><emailId>19990727132940</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-27 13:29:40-0400</timestampReceived><subject>Re: [Acpi] Something for the TeX gurus...</subject><body>

On Tue, 27 Jul 1999, Julien F. J. Salgado wrote:

&gt; +\marginpar{\footnotesize (function)}%
&gt; +\addcontentsline{toc}{subsubsection}{#2}\ \\#4%
&gt; +\end{description}}

I'm afraid this is no solution, since it does not print the function names
on the right side. Copying from latex.ltx worked okay, but didn't look as
nice as I thought, so I create an index now. I will be working on a
separate function index soon.

If you are interested in my original solution, it is in the CVS tree, and
you can get it under http://phobos.fs.tum.de/cgi-bin/cvsweb/acpi/libacpi/
.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  2:50pm  up 7 days, 21:02,  3 users,  load average: 1.70, 1.30, 1.10

</body></email><email><emailId>19990729210200</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-29 21:02:00-0400</timestampReceived><subject>[Acpi] ACPI4Linux is at the ALS 1999</subject><body>

Hi,

I've been invited to hold a speech at the Atlanta Linux Showcase 99 in
October about ACPI and Linux. Im am hereby inviting everyone to come
listen and discuss.

For more information see 
http://www.linuxshowcase.org

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990602165318</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-02 16:53:18-0400</timestampReceived><subject>[Acpi] Being up-to-date</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

We have added a new mailing list, acpi-cvs.

This is a read-only mailing list that carries the CVS notifications. If
you want to be notified when anything changes, this is the list for you.
If you don't like autopostings, you won't miss anything. :-)

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN1Vhm/FUmCYJPaUlAQF6+wf/RGJRHh24wSF1gMH1lfiKR2042Ds0Jdoj
exWsYpKyFcqWKx6t9sLtRnrLi2J5oWY6UDohcxGxzrdhE53q23lo1Cc5HG34pE47
BPOxYT/kDGqDNW/ZcglLj9Qz/cpxiBhm+FpN1x+q+biLT9GsdWuKVyx8UXr39TEw
4zsWNmIAq5Y6KSX74jyEIfcuQs0mwi6Pi60JWlmGFX82M8cHNePUWjSu0Wi177j8
iK8lpRKcrvYranuM3p6L+Qr7GIYkiAKl7wuzalhuF/l/j0JolxrrQtpiJOv2M6a6
JHW2gyxjW6uPvOhIZBZ7qX23LkFwjsQvD5JqZV9UtiN8hxsF0H1JQQ==
=C6t4
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990602212153</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-06-02 21:21:53-0400</timestampReceived><subject>[Acpi] New Patch released - now with power off</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

a lot of people have been asking why the ACPI-Patch does not power off on
shutdown. The reason is easy - we are still in an early stage and until
now the patch was informational - not functional. 

But this has changed, since I do not want do get any more "why does my
system doesn't power off?" mails. 

So now there is the first functional patch. Download it like the others
from our page and apply it to your 2.2.9 (or compatible) kernel and watch
you computer power down.

I would also appeciate any feedback wheter this feature works on your
computer or not. 


Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 5.0i for non-commercial use
Charset: noconv

iQEVAwUBN1WgeE/LTI8vN/FZAQFWfQf9GlVmoX7wg+NzMHjcD1cYuvWBRwt9zIR7
+5pTVX0nDr4Rh4i/aSbIN9yyMnLj4S8F+2Xh5ADy9lxkFbys5roPA7Db2EBMXXYK
AeAJtNPg9tGfT7KMAhVS7T+HCOce4aCcTVf2g5FBR66W+W1oEmznDzwkMY0YGA4O
//UyuC1F3SiZqR6d6r61XbP7+V/IGwgwtoL4HyYCby5PpBNON2BLA8AlHgs+i2xO
P/v3HcZICtxIfV/AzTCY8yylmRahU8DXnvggGQmM2FBWP2sdAp2pJ5M5B55tOOOd
OswVM06ryrBv8IGrJ4UfOvabE4xs8Oxm48t9D0xuza/ou6Ig9tpYGg==
=yair
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990603190537</emailId><senderName>Josip Gracin</senderName><senderEmail>grac@fly.srk.fer.hr</senderEmail><timestampReceived>1999-06-03 19:05:37-0400</timestampReceived><subject>[Acpi] Power off feature -- success with ASUS P2B-DS board !</subject><body>

Hi!

The subject says it all.

Linux SMP 2.2.9, ASUS P2B-DS BIOS rev.1006  w/2xPII350.

Thanks!

P.S. I *am* aware that this is a hack, but nevertheless, I think this
should be announced at various other linux lists, too.  Especially
linux-smp because this is the only way to do it if one uses SMP kernel.
-- 
| Josip Gracin
| Zagreb, Croatia

</body></email><email><emailId>19990606140725</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver.neukum@lrz.uni-muenchen.de</senderEmail><timestampReceived>1999-06-06 14:07:25-0400</timestampReceived><subject>[Acpi] patch</subject><body>

Hallo,

dieser Patch gegen die letzte release implementiert eine Checksumme und e=
rh=F6ht
die Effizienz ein wenig. Wie soll das poweroff richtig implementiert werd=
en ?

Oliver Neukum

["acpi2.diff" (text/x-c)]

diff -u --recursive clean/linux/drivers/acpi/acpi.c linux/drivers/acpi/acpi.c
--- clean/linux/drivers/acpi/acpi.c	Sat Jun  5 16:18:56 1999
+++ linux/drivers/acpi/acpi.c	Sun Jun  6 11:56:20 1999
@@ -38,6 +38,15 @@
   if (acpi_facp-&gt;pm1b_cnt_blk) outw(o, acpi_facp-&gt;pm1b_cnt_blk);
   }
 
+int acpi_checksum ( struct ACPI_SDTHeader *sdth)
+  {
+  uint8 s=0;
+  uint8 *p;
+
+  for (p=(uint8 *)sdth;p&lt;(uint8 *)(sdth+sdth-&gt;length);p++) s += *p;
+  return (int)s;
+  }
+
 
 void acpi_power_off(void) {
   uint32 r;
Only in linux/drivers/acpi: acpi.c~
diff -u --recursive clean/linux/drivers/acpi/init.c linux/drivers/acpi/init.c
--- clean/linux/drivers/acpi/init.c	Sat Jun  5 16:18:56 1999
+++ linux/drivers/acpi/init.c	Sun Jun  6 11:49:14 1999
@@ -19,7 +19,7 @@
 
 #include &lt;linux/acpi.h&gt;
 
-static bool acpi_findRsdp(void) {
+static inline bool acpi_findRsdp(void) {
   uint32 p=0x0e0000;
   bool found=0;
   uint8 checker;
@@ -54,7 +54,9 @@
   memcpy_fromio(&amp;acpi_tabledata[acpi_tablelast],tableAddress,36);
   sdth=(struct ACPI_SDTHeader *)&amp;acpi_tabledata[acpi_tablelast];
   check=0;
-  ///Checksum!
+  
+  if ( !(acpi_checksum(sdth))) return 0;
+
   if ((acpi_tablelast+sdth-&gt;length)&gt;ACPI_TABLEDATAMAX) { 
     printk("ACPI: ACPI_TABLEDATAMAX to small\n");
     return 0;
@@ -66,18 +68,22 @@
   acpi_tables[acpi_tablecount]= own;
   acpi_tablecount++;
 
-  if (strncmp(sdth-&gt;signature,"RSDT",4)==0) {
-    acpi_rsdt = (struct ACPI_SDTHeader*)&amp;acpi_tabledata[own];
-    pu = (uint32 *)&amp;acpi_tabledata[own+36];
-    for (i=0;i&lt;((sdth-&gt;length-36)/4);i++) pu[i] = acpi_loadTable(pu[i]);
-    }
+  switch (sdth -&gt; signature ) {
 
-  if (strncmp(sdth-&gt;signature,"FACP",4)==0) {
-    acpi_facp = (struct ACPI_FACP*)&amp;acpi_tabledata[own];
-    acpi_facp-&gt;dsdt = acpi_loadTable(acpi_facp-&gt;dsdt);
-    }
-  if (strncmp(sdth-&gt;signature,"DSDT",4)==0) {
-    acpi_dsdt = (struct ACPI_SDTHeader*)&amp;acpi_tabledata[own];
+     case RSDT_SIG:  
+        acpi_rsdt = (struct ACPI_SDTHeader*)&amp;acpi_tabledata[own];
+        pu = (uint32 *)&amp;acpi_tabledata[own+36];
+        for (i=0;i&lt;((sdth-&gt;length-36)/4);i++) pu[i] = acpi_loadTable(pu[i]);
+        break;
+     case FACP_SIG:
+        acpi_facp = (struct ACPI_FACP*)&amp;acpi_tabledata[own];
+        acpi_facp-&gt;dsdt = acpi_loadTable(acpi_facp-&gt;dsdt);
+        break;
+     case DSDT_SIG:
+        acpi_dsdt = (struct ACPI_SDTHeader*)&amp;acpi_tabledata[own];
+        break;
+     default:
+        /* ignore unknown signature */
     }
   return own;
   }
Only in linux/drivers/acpi: init.c~
diff -u --recursive clean/linux/include/linux/acpi.h linux/include/linux/acpi.h
--- clean/linux/include/linux/acpi.h	Sat Jun  5 16:18:56 1999
+++ linux/include/linux/acpi.h	Sun Jun  6 11:58:28 1999
@@ -23,6 +23,7 @@
 #include &lt;linux/kernel.h&gt;
 #include &lt;asm/io.h&gt;
 #include &lt;linux/types.h&gt;
+#include &lt;asm/byteorder.h&gt;
 
 //I like these type names. They actually describe whats behind them
 #define bool s8
@@ -34,6 +35,16 @@
 #define ACPI_TABLEMAX 20
 #define ACPI_TABLEDATAMAX 65536
 
+/* signatures */
+#ifdef BIG_ENDIAN
+#define RSDT_SIG ('R'&lt;&lt;24)+('S'&lt;&lt;16)+('D'&lt;&lt;8)+'T'
+#define FACP_SIG ('F'&lt;&lt;24)+('A'&lt;&lt;16)+('C'&lt;&lt;8)+'P'
+#define DSDT_SIG ('D'&lt;&lt;24)+('S'&lt;&lt;16)+('D'&lt;&lt;8)+'T'
+#else
+#define RSDT_SIG ('T'&lt;&lt;24)+('D'&lt;&lt;16)+('S'&lt;&lt;8)+'R'
+#define FACP_SIG ('P'&lt;&lt;24)+('C'&lt;&lt;16)+('A'&lt;&lt;8)+'F'
+#define DSDT_SIG ('T'&lt;&lt;24)+('D'&lt;&lt;16)+('S'&lt;&lt;8)+'D'
+#endif
 
 //Root System Description Pointer Structure
 struct ACPI_RSDP {
@@ -46,7 +57,7 @@
 
 //Header for every System Description Table
 struct ACPI_SDTHeader {
-  uint8 signature[4];
+  uint32 signature;
   uint32 length;
   uint8 revision;
   uint8 checksum;
@@ -141,5 +152,5 @@
 uint32 acpi_get_pm1_cnt(void);
 #define acpi_get_pm_tmr() (inl(facp-&gt;pm_tmr_blk))
 void acpi_power_off(void);
-
+int acpi_checksum(struct ACPI_SDTHeader *sdth);
 #endif
Only in linux/include/linux: acpi.h~


</body></email><email><emailId>19990606141057</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver.neukum@lrz.uni-muenchen.de</senderEmail><timestampReceived>1999-06-06 14:10:57-0400</timestampReceived><subject>[Acpi] sorry for german post</subject><body>

Hi,

i am sorry for posting in German to an international list.
The patch i attached to my previous message implements checksumming.
It works for me.

Oliver Neukum

</body></email><email><emailId>19990606201352</emailId><senderName>Oliver Neukum</senderName><senderEmail>oliver.neukum@lrz.uni-muenchen.de</senderEmail><timestampReceived>1999-06-06 20:13:52-0400</timestampReceived><subject>[Acpi] software suspend, new code in 2.3.x</subject><body>

Hi people,

today i read that Alan Cox is integrating software suspend into the kernel.
Martin Mares is probably working on a new init code.
Has anyone URLs or mail adresses regarding to this subjects ?

Oliver Neukum

PS: Do not use my last patch, it has a bug in the proc code.
A new version is on its way to Max.

</body></email><email><emailId>19990609201239</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-06-09 20:12:39-0400</timestampReceived><subject>[Acpi] Chat with the ACPI4Linux Developers</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

we've finally managed to get an IRC-Server running on phobos. This is a
local server which is not (and will not be) linked to any net.

Simon and me are often online - meet us in channel #ACPI to talk about and
ACPI and Linux related problems, your ideas, wishes ...

Please don't expect us to be online - this is work done on our SPARE TIME.


Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc


-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 5.0i for non-commercial use
Charset: noconv

iQEVAwUBN17Kv0/LTI8vN/FZAQFV5wf/csWLsb3el3ThpfMfyIMXwfxg86G7XxmO
nhKIKjOs4Wy6Ulm3+5y+ahDHD55JgxZxqXFgyIapUcgvdsq36RbotrGhxMykr3Vi
BkcwzF76hzYlYJlP/IMV/d2rINwMozGL15nuIr4OSxJJJBPSQ4q3y0UZlkputzVA
EwcRiFgTWC02fCSbAIUQVbqoYKzd97heLMFz9aSUMF6t9hFYa2pvN55sCzOuyvbL
S4OSDELoyh8ovUfEvo/CEnxvWnsq6D4wxXMg7oc2D3lIPsb61Jfw6jeOj7BW9n6E
WORG3487CeI/z5v4nKLtlfOy5c/HcohLhS4kI7PY4tCdhKpYorVe5w==
=AUaC
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990610052816</emailId><senderName>Takanori Watanabe</senderName><senderEmail>takawata@shidahara1.planet.sci.kobe-u.ac.jp</senderEmail><timestampReceived>1999-06-10 05:28:16-0400</timestampReceived><subject>Re: [Acpi] ACPI Compliance</subject><body>

In message &lt;375EC99E.4FE383E@io.com&gt;, Eric Sandeen $B$5$s$$$o$/(B:
&gt;Thank you for the information.  1 small question...
&gt;
&gt;You said...
&gt;
&gt;&gt; Do you check your BIOS setting so that it enable ACPI?
&gt;&gt; I have BX6 ver 2.0(I broke my previous motherboard Abit BH6(;;).)
&gt;&gt; And it will not initialize ACPI data table if ACPI is enabled.
&gt;
&gt;Did you mean to say that it will not initialize the ACPI data table if
&gt;ACPI *is* enabled?  Or *is not* enabled?

*is not* enabled. Sorry  for confuse you.


&gt;There is a "Power Management Enable/Disable" setting in my BIOS, but I
&gt;don't know if that's APM or ACPI - if it enables APM, does that
&gt;*disable* ACPI?

No,APM can be enabled automatically. But ACPI cannot be enabled if OS
don't recognize it.Once OS recognize ACPI and setup for it,
ACPI Controller rises SCI that can be catched from OS,instead of SMI that
cannot be catched from OS and processed by APM BIOS.

Takanori Watanabe
&lt;a href="http://www.planet.sci.kobe-u.ac.jp/~takawata/key.html"&gt;
Public Key&lt;/a&gt;
Key fingerprint =  2C 51 E2 78 2C E1 C5 2D  0F F1 20 A3 11 3A 62 2A 

</body></email><email><emailId>19990623100017</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-23 10:00:17-0400</timestampReceived><subject>Re: [Acpi] More important work</subject><body>

On Tue, 22 Jun 1999, Simon Richter wrote:

&gt; I've drawn a picture, sorry if it looks crappy (five minutes' work, I'm
&gt; very busy tonight). It can be found under
&gt; http://phobos.fs.tum.de/~geier/acpid.tiff

Okay, now that I had a slice of time, I've xfig'ed a better one... :-)

GIF:  http://phobos.fs.tum.de/~geier/acpid.gif
TIFF: http://phobos.fs.tum.de/~geier/acpid.tiff
XFIG: http://phobos.fs.tum.de/~geier/acpid.fig
PS:   http://phobos.fs.tum.de/~geier/acpid.ps

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
 11:56am  up 3 days, 17:02,  3 users,  load average: 1.22, 1.07, 1.02

</body></email><email><emailId>19990625090821</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-25 09:08:21-0400</timestampReceived><subject>Re: [Acpi] A few mails you have missed.</subject><body>

Aw, stupid me... :-/

[...]

&gt; &gt; SIGPWR? :-)
&gt; 
&gt; No, it has the fixed meaning: Save Your Buffers, NOW :-)
&gt; IMHO we should implement the select() and poll() syscalls on /dev/acpi.
&gt; acpid may then send a message to interested parties.(loopback perhaps - that
&gt; might allow a network extension, like: our print server just went to hibernate,
&gt; queue all print jobs of unimportant users)

The next line read:

&gt; according to signals(7), SIGPWR terminates a program if uncought.

This line should have gone into my yet imaginary reply. It does not belong
to Oliver's mail.

&gt; &gt; Nein, du kannst jedes beliebige Signal verwenden, du musst nur sagen,
&gt; &gt; welches. Polling ist ganz schlecht, weil es Rechenzeit braucht, wenn nix
&gt; &gt; los ist, was meistens der Fall ist.

The translation here is missing, but it is translated above.

&gt; That seems to be a misunderstanding, see above.

[...]

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
 11:04am  up 5 days, 16:11,  2 users,  load average: 1.12, 1.09, 1.03

</body></email><email><emailId>19990625143937</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-25 14:39:37-0400</timestampReceived><subject>[Acpi] libacpi</subject><body>

Hi,

I have added a directory "acpi/libacpi" to the CVS tree. In there, I plan
to build the user library. So far, I have "implemented" three functions,
which I call "primitive ACPI awareness functions". They don't do anything,
they just return that it is safe to assume that acpid will not do anything
because it is not running. :-)

However, the "real" functions are still missing. What functionality (on a
high level, we should put as much as possible into the library) do you
want to see?

We already have:

PM
 - Request sleep (system/device)
 - Register service
 - Temporarily disallow sleep (for simple servers)
 - Receive event
 - Respond to event

TM
 - Get List of Thermal Zones
 - Query for temperature
 - Set temperature alarm
 - Set temperature trip point

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:15pm  up 5 days, 21:22,  5 users,  load average: 1.87, 1.77, 1.39

</body></email><email><emailId>19990711030342</emailId><senderName>Eric Wagner</senderName><senderEmail>pezking@uclink4.berkeley.edu</senderEmail><timestampReceived>1999-07-11 03:03:42-0400</timestampReceived><subject>[Acpi] newbie acpi question.</subject><body>

I just finished patching up my kernel (2.2.10) and rebooting.  I'm
fairly sure that I've done everything right.  I'm definitely running the
new kernel (uname -a verifies) but I'm not seeing an entry in /proc for
acpi.

does this mean that my supposedly acpi compliant bios does not really
support acpi, or does it mean that I've done something wrong.

I'm running on a chembook 3300T.

thanks for any help.
eric.

</body></email><email><emailId>19990720183501</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-20 18:35:01-0400</timestampReceived><subject>[Acpi] More code published</subject><body>

Hello,

I've received code from Andrew Henroid. He is working on a
platform independent ACPI implementation. The code is GPL'ed and I've got
explicit permission to publish it on our website. See 
http://phobos.fs.tum.de/acpi/download/index.html

This code will be merged in the current ACPI4Linux kernel patch
(hopefully) soon.

What it does: It is a kernel module that decodes the DSDT and gives a nice
output via a /proc/acpi interface.

Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

</body></email><email><emailId>19990712104813</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-07-12 10:48:13-0400</timestampReceived><subject>[Acpi] Something for the TeX gurus...</subject><body>

Hi,

I've run into trouble with the libacpi documentation file, and I wonder
whether any of you guys have an idea: 

The file uses custommade TOC entries for each defined function, which look
like this: 

\mbox{}\hfill funcname page\\

This way, if you look for a certain function, you can find it on the right
side of the TOC. However, this breaks the "normal" sections, as they rely
on some context to be retained through the TOC file. 

Question to the TeX gurus out there: What other way is there to accomplish
the same result? 

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
 12:40pm  up 22 days, 18:01,  5 users,  load average: 1.20, 1.10, 1.08

</body></email><email><emailId>19990609150953</emailId><senderName>Eric Sandeen</senderName><senderEmail>sandeen@io.com</senderEmail><timestampReceived>1999-06-09 15:09:53-0400</timestampReceived><subject>[Acpi] ACPI Compliance</subject><body>

I hope this is an appropriate question for this list - here goes.

I have an EPOX KP6-BS motherboard that the manufacturer claims has an
ACPI compliant BIOS.  In their words:

"The motherboard will support many ACPI features such as Doze, Standby,
Suspend, Soft off by power button, CPU FAN suspend, and some others...
Other ACPI related features have been disabled and may be enabled in the
future."  

(Many of these functions are also included in APM, so I'm a bit
skeptical)

In any case, the Linux ACPI patches do not find an ACPI compliant BIOS. 
I also tried some Micros~1 (sorry!) tools which were supposed to detect
ACPI compliance, and it locked up my machine (nice job, MS...)

I looked at the init.c code, and it looks like this checks for a
particular string in the BIOS to determine ACPI capability?  I'm not
much of a programmer, so I'm not sure.

I'd like to go back to Epox and say "Hey, you're not ACPI compliant,
because ________" but I don't know what to fill in the blank.  What is
the criteria for calling a BIOS "ACPI compliant?"

I'd like to get them to fix this, so I can help with the testing of this
project on my motherboard.  I think it's an important project for
Linux.  I also really want soft-off with SMP.  :-)

Thanks for all your great work!

-Eric

</body></email><email><emailId>19990609153234</emailId><senderName>Takanori Watanabe</senderName><senderEmail>takawata@shidahara1.planet.sci.kobe-u.ac.jp</senderEmail><timestampReceived>1999-06-09 15:32:34-0400</timestampReceived><subject>Re: [Acpi] ACPI Compliance</subject><body>

In message &lt;375E83C1.F77220B7@io.com&gt;, Eric Sandeen $B$5$s$$$o$/(B:
&gt;In any case, the Linux ACPI patches do not find an ACPI compliant BIOS. 
&gt;I also tried some Micros~1 (sorry!) tools which were supposed to detect
&gt;ACPI compliance, and it locked up my machine (nice job, MS...)
Do you check your BIOS setting so that it enable ACPI?
I have BX6 ver 2.0(I broke my previous motherboard Abit BH6(;;).)
And it will not initialize ACPI data table if ACPI is enabled.

&gt;I looked at the init.c code, and it looks like this checks for a
&gt;particular string in the BIOS to determine ACPI capability?  I'm not
&gt;much of a programmer, so I'm not sure.
Yes.
First, Search 'RSD PTR ' signature in so-called BIOS area.
And check the pointer contained in the structure with the signature.
Then ACPI compliant OS can access various ACPI data table if the OS
don't overwrite the memory area.(The ACPI table it self not always exist in
so-called BIOS area).

Takanori Watanabe
&lt;a href="http://www.planet.sci.kobe-u.ac.jp/~takawata/key.html"&gt;
Public Key&lt;/a&gt;
Key fingerprint =  2C 51 E2 78 2C E1 C5 2D  0F F1 20 A3 11 3A 62 2A 

</body></email><email><emailId>19990609160243</emailId><senderName>"David Christensen"</senderName><senderEmail>dchrist@home.com</senderEmail><timestampReceived>1999-06-09 16:02:43-0400</timestampReceived><subject>RE: [Acpi] ACPI Compliance</subject><body>

There are a number of minimum requirements defined by the ACPI
specification, including a power button, power management timer, at least
one sleep state (S1, S2, S3, S4), etc.  But what you are probably interested
in is how an operating system detects an ACPI compliant BIOS.  There are two
things that the OS should look for:

1) The OS should scan the BIOS image (E000:0000h-E000:FFFFh and
F000:0000h-F000:FFFFh) and the Extended BIOS Data Area (pointed to by the
word at location 40:0Eh ) for the string "RSD PTR " (note the trailing
space).  This signature denotes the presence of the Root System Description
Pointer (RSDP) which points to the other tables in memory.  In DOS debug,
you would use the command "s e000:0 l ffff 'RSD PTR '" and "s f000:0 l ffff
'RSD PTR '" to search for that string.  If the string is present you will
get an address such as F000:23E5h.  If there is no string, then the BIOS
doesn't support ACPI (you may want to check in setup if there is an option
to enable ACPI support in the BIOS).

2) The OS should examine the Interrupt 15h Function E820h results for type 3
and type 4 memory.  This memory is used to hold certain ACPI tables and
other ACPI data structures.  This is a little more complicated to test,
however, I have not seen a system that implemented #1 without #2, so you
shouldn't need to check this one.

Does anyone know an equivalent method for scanning memory in Linux to
accomplish #1?

David Christensen

&gt; -----Original Message-----
&gt; From: acpi-admin@phobos.fachschaften.tu-muenchen.de
&gt; [mailto:acpi-admin@phobos.fachschaften.tu-muenchen.de]On Behalf Of Eric
&gt; Sandeen
&gt; Sent: Wednesday, June 09, 1999 8:10 AM
&gt; To: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] ACPI Compliance
&gt;
&gt;
&gt; I hope this is an appropriate question for this list - here goes.
&gt;
&gt; I have an EPOX KP6-BS motherboard that the manufacturer claims has an
&gt; ACPI compliant BIOS.  In their words:
&gt;
&gt; "The motherboard will support many ACPI features such as Doze, Standby,
&gt; Suspend, Soft off by power button, CPU FAN suspend, and some others...
&gt; Other ACPI related features have been disabled and may be enabled in the
&gt; future."
&gt;
&gt; (Many of these functions are also included in APM, so I'm a bit
&gt; skeptical)
&gt;
&gt; In any case, the Linux ACPI patches do not find an ACPI compliant BIOS.
&gt; I also tried some Micros~1 (sorry!) tools which were supposed to detect
&gt; ACPI compliance, and it locked up my machine (nice job, MS...)
&gt;
&gt; I looked at the init.c code, and it looks like this checks for a
&gt; particular string in the BIOS to determine ACPI capability?  I'm not
&gt; much of a programmer, so I'm not sure.
&gt;
&gt; I'd like to go back to Epox and say "Hey, you're not ACPI compliant,
&gt; because ________" but I don't know what to fill in the blank.  What is
&gt; the criteria for calling a BIOS "ACPI compliant?"
&gt;
&gt; I'd like to get them to fix this, so I can help with the testing of this
&gt; project on my motherboard.  I think it's an important project for
&gt; Linux.  I also really want soft-off with SMP.  :-)
&gt;
&gt; Thanks for all your great work!
&gt;
&gt; -Eric
&gt;
&gt;
&gt; _______________________________________________
&gt; acpi maillist  -  acpi@phobos.fachschaften.tu-muenchen.de
&gt; http://phobos.fachschaften.tu-muenchen.de/mailman/listinfo/acpi
&gt;
&gt;

</body></email><email><emailId>19990609164620</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-06-09 16:46:20-0400</timestampReceived><subject>RE: [Acpi] ACPI Compliance</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

On Wed, 9 Jun 1999, David Christensen wrote:
&gt; ...
&gt; in is how an operating system detects an ACPI compliant BIOS.  There are two
&gt; things that the OS should look for:
&gt; 
&gt; 1) The OS should scan the BIOS image (E000:0000h-E000:FFFFh and
&gt; F000:0000h-F000:FFFFh) and the Extended BIOS Data Area (pointed to by the
&gt; word at location 40:0Eh ) for the string "RSD PTR " (note the trailing
&gt; space).  This signature denotes the presence of the Root System Description
&gt; Pointer (RSDP) which points to the other tables in memory.  In DOS debug,
&gt; you would use the command "s e000:0 l ffff 'RSD PTR '" and "s f000:0 l ffff
&gt; 'RSD PTR '" to search for that string.  If the string is present you will
&gt; get an address such as F000:23E5h.  If there is no string, then the BIOS
&gt; doesn't support ACPI (you may want to check in setup if there is an option
&gt; to enable ACPI support in the BIOS).
&gt; ...
&gt; Does anyone know an equivalent method for scanning memory in Linux to
&gt; accomplish #1?
&gt; 
&gt; David Christensen

Sure do. This is how the current patch looks for ACPI. See
drivers/acpi/init.c, acpi_findRsdp

This does not only look for the string, but also validates the checksum.
If the checksum is invalid, ACPI is NOT detected.
You can patch out the checksum-algorithm by changing the line
      if (checker!=0) found=0; 
to
      //if (checker!=0) found=0;
But this is NOT recommended.

What is NOT implemented is the search through the Extended BIOS Area. It
is described in the ACPI-Specs in section 5.2.2. I'd be happy if anyone
implements this and sends me a patch


Max Berger
ACPI4Linux project: http://phobos.fs.tum.de/acpi/
e-mail: max.berger@phobos.fs.tum.de

Plees doont mind se spelink misstakss
PGP-Key fingerprint: 9C F7 7B 60 36 71 BB 18  D5 11 00 85 48 32 30 BB
PGP-Key can be found at ftp://phobos.fs.tum.de/pub/pgp/max.berger.asc

-----BEGIN PGP SIGNATURE-----
Version: PGPfreeware 5.0i for non-commercial use
Charset: noconv

iQEVAwUBN16aZ0/LTI8vN/FZAQEKmQf/RH+qmB5VATGV0jfOu1jBPBjmQiqGepAg
oEOwbLi0CGC1F6y/tuoB3hAoV3hUbcLOaEbse7A9O0pI6kIYs/rIx4BJ5QuTBEuG
ydcjgC6im70dx0tAKSeblhXkWhEAOtfhWFNzKtvWE+hftiaFTHpFe12LdT95A9OP
o+geYRrifjpcOsJ634V7pS7H9nIFpCZztMQQbFd4LEuK9JadUBwwoO5Usfz/dDdu
r2AI+zbjMCu941hgMqd78gg797ZShVQkBqixQzSOI/lR9UXLnATuF1UJoBcnG7uC
bRaYFT8bRCHbpM8Nj/+OVO4l/wGPAwMdR1u/3e1slrdqdpwrLiXfbg==
=X78u
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990727124740</emailId><senderName>"Julien F. J. Salgado"</senderName><senderEmail>salgado@yoda.physik.uni-dortmund.de</senderEmail><timestampReceived>1999-07-27 12:47:40-0400</timestampReceived><subject>Re: [Acpi] Something for the TeX gurus...</subject><body>

According to SimonRichtergeier@phobos.fs.tum.de:
&gt; I've run into trouble with the libacpi documentation file, and I wonder
&gt; whether any of you guys have an idea: 

&gt; The file uses custommade TOC entries for each defined function, which look
&gt; like this: 
&gt; 
&gt; \mbox{}\hfill funcname page\\
&gt; 
&gt; This way, if you look for a certain function, you can find it on the right
&gt; side of the TOC. However, this breaks the "normal" sections, as they rely
&gt; on some context to be retained through the TOC file. 

Hi!

First of all since it is my first post here, I would like to thank eveyone
for the contribution to acpi, yes it seems to work on my laptop :-)

Here is a patch escaping the problem mentioned by S. Richter:

Regards,

Julien

------------------------------------------------------------------------

Common subdirectories: libacpi-19990712.orig/include and libacpi-19990712/include
diff -u libacpi-19990712.orig/libacpi.tex libacpi-19990712/libacpi.tex
--- libacpi-19990712.orig/libacpi.tex	Tue Jul 27 14:30:40 1999
+++ libacpi-19990712/libacpi.tex	Tue Jul 27 14:24:25 1999
@@ -4,7 +4,13 @@
 \usepackage{times}
 % The \function command describes a library function. Its parameters are
 % {return type}{name}{parameters}{description}
-\newcommand{\function}[4]{\begin{description}\item[#1 #2(#3);] \
\marginpar{\footnotesize (function)}\addtocontents{toc}{\mbox{\ }\hfill #2 \
\thepage\\}\ \\#4 \end{description}} +% Changed by J. Salgado 1999/07/27, should \
still be fixed... +%  A special toc entry should be created and used instead of \
subsubsection +\newcommand{\function}[4]{%
+\begin{description}\item[#1 #2(#3);]%
+\marginpar{\footnotesize (function)}%
+\addcontentsline{toc}{subsubsection}{#2}\ \\#4%
+\end{description}}
 % This gives an IMHO nicer layout. :-)
 \setlength{\parindent}{0pt}
 \setlength{\parskip}{3pt}


</body></email><email><emailId>19990505083517</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-05 08:35:17-0400</timestampReceived><subject>Re: [Acpi] Programmers wanted</subject><body>

On Tue, 4 May 1999, Max Berger wrote:

&gt; Simon has some time-problems, meaning that we need someone elso to write
&gt; the VM. So the two projects needing work are now:

Strange enough that we have to ask for this... Some people have
volunteered already, and I wonder why they do not have asked for CVS
access yet. So far, only one has asked yet... :-(

&gt; - A DSDT -&gt; Tree parser. This needs to parse the DSDT, extract all
&gt; functions and store them in a tree-like structure. 

I've already started on that, and it should be available via CVS now.

&gt; - A AML VM. This actually "executes" the functions stored within the tree. 

Perhaps it could use the same interpreter, as it is in fact the same code.
You could treat the tables like executable code that builds the tables...
:-)

&gt; - An ASL-&gt;AML Compiler. This is an extra project which we don't really
&gt; need. But it would be a very nice thing to have and it is not really
&gt; difficult. 

Yes, definitely. I will set up a tree for this as well.

&gt; So, is there anyone who feels like he/she would like to implement one of
&gt; these 3 things? Mail me!

IMHO it would be better to announce this to the list and ask one of us for
CVS access in a separate mail.

Once again, here is the form for CVS access: :-)

---- chop

Desired username: ________
Full Name (opt.): _____________________________
Crypt()ed passwd: _____________
Description of your work:
_______________________________________________________________________________
_______________________________________________________________________________
_______________________________________________________________________________

---- chop

   Simon

</body></email><email><emailId>19990505202423</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-05 20:24:23-0400</timestampReceived><subject>[Acpi] What's up next?</subject><body>

Hi,

Max already said it: I'm short of time right now, and thus I'm searching
for someone who can take over for me, at least for some time.

This does not mean that I stop working, it just means that I don't want
anyone to expect miracles out of my direction. Please understand this.
Thank you.

Back on topic: (Max was also first with this one) What has to be done?

The most important issues currently are certainly the two parsers, which
means the AML VM and the DSDT/SSDT/... parser. I think this can be put
into one thing by handling the structures as commands that build
structures (security issue: Don't build structures in loops). The third
thing is an ASL compiler. Tom Lees has shown interest in adding ACPI
support for his mobo, which has the necessary chips but no BIOS support, I
believe this will help him a lot.

I will init the source trees tomorrow and post where they are.

   Simon

</body></email><email><emailId>19990507024945</emailId><senderName>Hans Lofving</senderName><senderEmail>hans.316@brfmasthugget.se</senderEmail><timestampReceived>1999-05-07 02:49:45-0400</timestampReceived><subject>[Acpi] Let the masses know you need some input for the ACPI project.</subject><body>

Hi, I saw on your webpage that you're in need of input from lots of
different hardware. Well, why don't you announce that on slashdot? At
least it's worth a try, your problem seems to be that noone knows about
the ACPI4Linux project, I found out about it by reading at kernel traffic
(http://www.kt.opensrc.org/) that someone was asking for ACPI support for
Linux on the Linux kernel mailinglist (they obviously did not know about
the project either :)
Anyways, someone told them and thus I found your site. You seem to be in
need of the help from a couple of thousands of Linux fans and they sure
are helpful, if only they know how to help. =)
I don't have acpi support myselfe so i can't give you input (sorry) but
try posting a request for help on http://www.slashdot.org describing what
ACPI is good for, letting everybody know that there is currently no
support for Linux and finally telling everybody how they can help making
Linux support it. Im pretty sure that will help you. (and all of us) :)
.. just some late-night thoughs.

	-- Hans Löfving

--
And remember folks;
    "In a few years, the good code will outperform the bad code again."
        -- The guys at lkml '99

</body></email><email><emailId>19990619154411</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-19 15:44:11-0400</timestampReceived><subject>[Acpi] More important work</subject><body>

Hi,

Another thing sprang to my mind this morning (at 3am...): There are many
applications that will have to be made ACPI aware (in fact, any server...)

I believe the best API for the userspace apps will be a dll; it should be
easy enough to use if you only need small functionality yet be powerful
enough to allow the necessary control.

One important thing, for example, is registering your service with acpid,
so that the system won't go to a sleep state with too great latency. These
calls ned to have simple semantics; you tell acpid that you are there, but
you don't expect it to send any events to you or do something else that
might need a change in your code. This way, we should get most programs
ACPI aware very easily.

The second group of calls are the advanced control functions: Registering
the app, providing callbacks/signals, everything that is powerful and
requires you to expect certain events.

The third group are user preferences: Temperature trip points, Processor
throttling, entering sleep states...

I suggest that we start defining the API, and implement all the functions
as return(0), then we start spreading the word around... :-)

What do you think?

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  5:02pm  up 21:21,  2 users,  load average: 1.51, 1.17, 1.04

</body></email><email><emailId>19990625011346</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-25 01:13:46-0400</timestampReceived><subject>[Acpi] A few mails you have missed.</subject><body>

Hi,

here are five mails between Oliver Neukum and me that were intended for
the list but not CCed (translated where necessary).

   Simon

---------- Forwarded message ----------
Date: Sun, 20 Jun 1999 21:38:38 +0200
From: Oliver Neukum &lt;Oliver.Neukum@lrz.uni-muenchen.de&gt;
To: Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt;
Subject: Re: [Acpi] More important work

On Sat, 19 Jun 1999, you wrote:
&gt; Hi,
&gt; Another thing sprang to my mind this morning (at 3am...): There are many
&gt; applications that will have to be made ACPI aware (in fact, any server...)

In principle not any more than they need to be made aware of apm.

&gt; I believe the best API for the userspace apps will be a dll; it should be
&gt; easy enough to use if you only need small functionality yet be powerful
&gt; enough to allow the necessary control.
&gt;
Agreed.
 
&gt; One important thing, for example, is registering your service with acpid,
&gt; so that the system won't go to a sleep state with too great latency. These
&gt; calls ned to have simple semantics; you tell acpid that you are there, but
&gt; you don't expect it to send any events to you or do something else that
&gt; might need a change in your code. This way, we should get most programs
&gt; ACPI aware very easily.
&gt;
There should be no need, in fact this is a policy decision that should be left
to an admin in form of an /etc/acpi.conf file. The admin should weigh latency
against power consumption.

&gt; The second group of calls are the advanced control functions: Registering 
&gt; the app, providing callbacks/signals, everything that is powerful and 
&gt; requires you to expect certain events.

&gt; The third group are user preferences: Temperature trip points, Processor
&gt; throttling, entering sleep states...

&gt; I suggest that we start defining the API, and implement all the functions
&gt; as return(0), then we start spreading the word around... :-)

&gt; What do you think?

&gt;    Simon

OK,

enter_sleep_state(acpi_state_t state); ... selfevident
suspend_to_disk(int fd); ... there is a patch that provides that function
get_avm_by_action( ... ); ...  might be implemented in userspace
execute_avm(avm_code *); 
put_avm_by_action( ... );
set_acpi_value(parameter, value);
request_acpi_notification( ... );
waitfor_acpi_event();

Just a few wild ideas.

Oliver



---------- Forwarded message ----------
Date: Thu, 24 Jun 1999 13:56:07 +0200 (CEST)
From: Simon Richter &lt;geier@phobos.fs.tum.de&gt;
To: Oliver Neukum &lt;Oliver.Neukum@lrz.uni-muenchen.de&gt;
Subject: Re: [Acpi] More important work

Hallo Oliver,

Erstmal sorry, dass ich so spaet antworte... Ich bin mir nicht sicher, ob
du das auch an die Liste schicken wolltest... 

[Sorry for replying this late... I'm not sure whether this was intended to
go to the list as well]

On Sun, 20 Jun 1999, Oliver Neukum wrote:

&gt; &gt; Another thing sprang to my mind this morning (at 3am...): There are many
&gt; &gt; applications that will have to be made ACPI aware (in fact, any server...)

&gt; In principle not any more than they need to be made aware of apm.

Nein, die ACPI-Spec erlaubt uns, daf"ur zu sorgen, da"s ein Rechner nur
soweit schlafengelegt wird, da"s er schnell genug wieder hochl"auft, um
seine Dienste zu erf"ullen. Ein Faxserver darf 15 Sekunden brauchen
(=&gt;Hibernate), ein Webserver vielleicht eine. Und das k"onnen uns nur die
betreffenden Programme sagen.

[Nope, the ACPI spec allows us to put a computer only into a sleep state
from which it is back up quick enough to fulfill its duty. A fax server
may take fifteen seconds (=&gt; Hibernate), a web server perhaps one. And
only the server programs themselves can tell us.]

&gt; &gt; One important thing, for example, is registering your service with acpid,
&gt; &gt; so that the system won't go to a sleep state with too great latency. These
&gt; &gt; calls ned to have simple semantics; you tell acpid that you are there, but
&gt; &gt; you don't expect it to send any events to you or do something else that
&gt; &gt; might need a change in your code. This way, we should get most programs
&gt; &gt; ACPI aware very easily.

&gt; There should be no need, in fact this is a policy decision that should be left
&gt; to an admin in form of an /etc/acpi.conf file. The admin should weigh latency
&gt; against power consumption.

Das ist in der Tat eine Idee, IMHO sollte das auf die Liste.

[That is indeed an idea, IMHO we should copy the list.]

&gt; enter_sleep_state(acpi_state_t state); ... selfevident
&gt; suspend_to_disk(int fd); ... there is a patch that provides that function

Suspend-To-Disk ist ein Sleep-State. Wie der implementiert ist, ist der
Applikation wurscht.

[Suspend-To-Disk is a sleep state. How it works internally is the OS's
duty, not the application's.]

&gt; get_avm_by_action( ... ); ...  might be implemented in userspace
&gt; execute_avm(avm_code *); 
&gt; put_avm_by_action( ... );
&gt; set_acpi_value(parameter, value);

Hmm, das sind alles ziemliche Lowlevel-Funktionen, die eine Applikation
"uberhaupt nicht zu Gesicht bekommen sollte. F"ur Dinge wie Trip Points
etc. m"ochte ich spezifische Funktionen, damit keiner ein Faeture
einschalten kann, das nicht unterst"utzt wird.

[Umm, those are rather lowlevel functions an application shouldn't need to
see. For things like trip points I'd like to have specific functions, so
that noone can activate a feature that the kernel cannot handle.]

&gt; request_acpi_notification( ... );
&gt; waitfor_acpi_event();

Ersteres ist wchtig, klar, aber zweiteres unn"otig, weil keine Applikation
auf solche Events alleine wartet. Ich w"urde die Events als Signale
implementieren, dabei kommt ihr asynchroner Charakter besser zur
Geltung... :-)

[The first one is important, of course, but the second is unnecesary,
because no application will wait for ACPI events only. Also, I would
implement the events as signals, it will make more clear that they are
asynchronous... :-)]

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:44pm  up 1 day, 21:49,  1 user,  load average: 1.00, 1.00, 1.01



---------- Forwarded message ----------
Date: Thu, 24 Jun 1999 16:51:16 +0200 (MET DST)
From: Oliver.Neukum@lrz.uni-muenchen.de
To: Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt;
Subject: Re: [Acpi] More important work

On Thu, 24 Jun 1999, Simon Richter wrote:

&gt; Hallo Oliver,

&gt; Erstmal sorry, dass ich so spaet antworte... Ich bin mir nicht sicher, ob
&gt; du das auch an die Liste schicken wolltest... 

[Sorry for replying this late... I'm not sure whether this was intended to
go to the list as well]

&gt; On Sun, 20 Jun 1999, Oliver Neukum wrote:

&gt; &gt; &gt; Another thing sprang to my mind this morning (at 3am...): There are many
&gt; &gt; &gt; applications that will have to be made ACPI aware (in fact, any server...)

&gt; &gt; In principle not any more than they need to be made aware of apm.

&gt; Nein, die ACPI-Spec erlaubt uns, daf"ur zu sorgen, da"s ein Rechner nur
&gt; soweit schlafengelegt wird, da"s er schnell genug wieder hochl"auft, um
&gt; seine Dienste zu erf"ullen. Ein Faxserver darf 15 Sekunden brauchen
&gt; (=&gt;Hibernate), ein Webserver vielleicht eine. Und das k"onnen uns nur die
&gt; betreffenden Programme sagen.

[Nope, the ACPI spec allows us to put a computer only into a sleep state
from which it is back up quick enough to fulfill its duty. A fax server
may take fifteen seconds (=&gt; Hibernate), a web server perhaps one. And
only the server programs themselves can tell us.]

Ja schon, aber ob mir ein Fax wichtig genug ist, dass der Rechner um 2:45
hochkommt und mich aufweckt moechte ich keinem Programm ueberlassen.

[Yes, of course, but whether a fax is important enough to turn on the
machine at 2:45 AM and wake me up is nothing I would like a program to
decide.]

Vielleicht kann man das ueber eine pipe, an der acpid haengt und
Nachrichten empfaengt, loesen. Eine rc-Datei koennte benutzt werden um zu
entscheiden welche Programme wie den Systemzustand manipulieren duerfen.

[Perhaps this could be solved with a pipe, on which acpid listens for
messages. A rc-File could be used to decide which programs may manipulate
the system state in what way.]

&gt; &gt; &gt; One important thing, for example, is registering your service with acpid,
&gt; &gt; &gt; so that the system won't go to a sleep state with too great latency. These
&gt; &gt; &gt; calls ned to have simple semantics; you tell acpid that you are there, but
&gt; &gt; &gt; you don't expect it to send any events to you or do something else that
&gt; &gt; &gt; might need a change in your code. This way, we should get most programs
&gt; &gt; &gt; ACPI aware very easily.

&gt; &gt; There should be no need, in fact this is a policy decision that should
&gt; &gt; be left to an admin in form of an /etc/acpi.conf file. The admin 
&gt; &gt; should weigh latency against power consumption.

&gt; Das ist in der Tat eine Idee, IMHO sollte das auf die Liste.

[That is indeed an idea, IMHO we should copy the list.]

&gt; &gt; enter_sleep_state(acpi_state_t state); ... selfevident
&gt; &gt; suspend_to_disk(int fd); ... there is a patch that provides that function

&gt; Suspend-To-Disk ist ein Sleep-State. Wie der implementiert ist, ist der
&gt; Applikation wurscht.

[Suspend-To-Disk is a sleep state. How it works internally is the OS's
duty, not the application's.]

OK 

&gt; &gt; get_avm_by_action( ... ); ...  might be implemented in userspace
&gt; &gt; execute_avm(avm_code *); 
&gt; &gt; put_avm_by_action( ... );
&gt; &gt; set_acpi_value(parameter, value);

&gt; Hmm, das sind alles ziemliche Lowlevel-Funktionen, die eine Applikation
&gt; "uberhaupt nicht zu Gesicht bekommen sollte. F"ur Dinge wie Trip Points
&gt; etc. m"ochte ich spezifische Funktionen, damit keiner ein Faeture
&gt; einschalten kann, das nicht unterst"utzt wird.

[Umm, those are rather lowlevel functions an application shouldn't need to
see. For things like trip points I'd like to have specific functions, so
that noone can activate a feature that the kernel cannot handle.]

Hm ...

Vielleicht:

[Perhaps:]

get_acpi_info_by_device(... wie auch immer devices benannt werden sollen);
power_down_device( " );
power_up_device( " );
hibernate_device( " );
wake_system_on_activity ( " );

bedeutet aber weniger flexibilitaet.

[but this means less flexibility.]

&gt; &gt; request_acpi_notification( ... );
&gt; &gt; waitfor_acpi_event();

&gt; Ersteres ist wchtig, klar, aber zweiteres unn"otig, weil keine Applikation
&gt; auf solche Events alleine wartet. Ich w"urde die Events als Signale
&gt; implementieren, dabei kommt ihr asynchroner Charakter besser zur
&gt; Geltung... :-)

[The first one is important, of course, but the second is unnecesary,
because no application will wait for ACPI events only. Also, I would
implement the events as signals, it will make more clear that they are
asynchronous... :-)]

Vielleicht sollte /dev/acpi einfach nur poll implementieren ?
Die Signale sind leider schon alle vergeben.

[Perhaps /dev/acpi should implement poll only? Unfortunately all the
signals are already in use.]

&gt;    Simon

&gt; PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
&gt;  Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
&gt; GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
&gt; Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
&gt;   4:44pm  up 1 day, 21:49,  1 user,  load average: 1.00, 1.00, 1.01



---------- Forwarded message ----------
Date: Thu, 24 Jun 1999 17:15:17 +0200 (CEST)
From: Simon Richter &lt;geier@phobos.fs.tum.de&gt;
To: Oliver.Neukum@lrz.uni-muenchen.de
Subject: Re: [Acpi] More important work

On Thu, 24 Jun 1999 Oliver.Neukum@lrz.uni-muenchen.de wrote:

&gt; &gt; Nein, die ACPI-Spec erlaubt uns, daf"ur zu sorgen, da"s ein Rechner nur
&gt; &gt; soweit schlafengelegt wird, da"s er schnell genug wieder hochl"auft, um
&gt; &gt; seine Dienste zu erf"ullen. Ein Faxserver darf 15 Sekunden brauchen
&gt; &gt; (=&gt;Hibernate), ein Webserver vielleicht eine. Und das k"onnen uns nur die
&gt; &gt; betreffenden Programme sagen.

[Nope, the ACPI spec allows us to put a computer only into a sleep state
from which it is back up quick enough to fulfill its duty. A fax server
may take fifteen seconds (=&gt; Hibernate), a web server perhaps one. And
only the server programs themselves can tell us.]

&gt; Ja schon, aber ob mir ein Fax wichtig genug ist, dass der Rechner um 2:45
&gt; hochkommt und mich aufweckt moechte ich keinem Programm ueberlassen.

[Yes, of course, but whether a fax is important enough to turn on the
machine at 2:45 AM and wake me up is nothing I would like a program to
decide.]

Interessanter Punkt. Ich bin bisher davon ausgegangen, dass wenn der User
einen Faxserver laufen hat, dann soll der auch Faxe empfangen. :-)

[Interesting point. Up to now I assumed that when the user is running a
fax server, it should receive faxes. :-)]

Was du also meinst, ist, dass der Faxserver nur aktiv ist, solange der
Rechner eh' laeuft. Hmm, ich bin mir nicht sicher, ob das unsere Aufgabe
ist, oder die des Faxserver-Autors.

[If I got you right, you want the fax server to be active, but only if the
computer is running anyway. Umm, I'm not sure whether this is our duty or
those of the fax server author.]

Mit deiner Erlaubnis wuerde ich den Thread gerne wieder auf die Liste
bringen, weil solche Fragen IMHO wichtig sind.

[With your permission I would like to get the thread back on the list,
because these questions are important IMHO.]

&gt; Vielleicht kann man das ueber eine pipe, an der acpid haengt und
&gt; Nachrichten empfaengt, loesen. Eine rc-Datei koennte benutzt werden um zu
&gt; entscheiden welche Programme wie den Systemzustand manipulieren duerfen.

[Perhaps this could be solved with a pipe, on which acpid listens for
messages. A rc-File could be used to decide which programs may manipulate
the system state in what way.]

Hmm, hast du dir meine Grafik 'mal angeschaut?

[Umm, have you looked at the picture I made?]

Ablauf der Ereignisse IMHO:
 - User drueckt den Powerbutton
 - Event wird an alle ACPI-faehigen Programme verteilt.
 - acpid entscheidet sich fuer Hibernate
 - Entscheidung wird bekanntgegeben.
 - Programme treffen Vorbereitungen, geben dann gruenes Licht
 - acpid initiiert Hibernate.

[Example event:
 - User presses power button
 - Event is distributed to all ACPI aware programs.
 - acpid decides to hibernate
 - acpid broadcasts the decision to all other programs
 - the programs prepare, then tell acpid to go on
 - acpid initiates hibernate.]

Du hast recht, sicherheitstechnisch ist das unter aller Kanone. Du darfst
nicht ueber die Koepfe der anderen Programme hinwegentscheiden (Der
Rechner darf nicht schlafengehen, wenn ein Faxempfang laeuft, also muessen
alle Programme das Recht haben, einen Standby-Request aufzuhalten.
Gleichzeitig soll nicht jeder x-beliebige User das Recht haben, Strom zu
verbrauchen :-). Hmm, ein Konfigfile wird immer sinnvoller.

[You are right, from a security POV it is a PITA. You may not decide over
the heads of the other programs, since the machine may not go to sleep
while receiving a fax, so every program needs the right to disallow or at
least hold back standby requests. At the same time, Joe User should not be
able to require loads of energy :-). I start to see that a config file is
a good thing.]

&gt; Vielleicht:

[Perhaps:]

&gt; get_acpi_info_by_device(... wie auch immer devices benannt werden sollen);
&gt; power_down_device( " );
&gt; power_up_device( " );
&gt; hibernate_device( " );
&gt; wake_system_on_activity ( " );

&gt; bedeutet aber weniger flexibilitaet.

[but this means less flexibility.]

Der Level ist mir ehrlich gesagt immer noch zu niedrig. Ein Programm
sollte nichts weiter tun muessen als Bedarf anmelden (mgetty braucht das
Modem[=&gt;serieller Port=&gt;Chipset=&gt;PCI-Bus], der Rechner darf schlafen, wenn
er unter 15 Sekunden wieder laeuft und Wake-on-ring unterstuetzt), den
Rest uebernimmt der Daemon. mgetty kann nicht entscheiden, wann der
serielle Port oder der PCI-Bus abgeschaltet wird.

[This is still on a too low level. A program shouldn't need to know more
than how to request certain things (mgetty needs the modem(=&gt;serial
port=&gt;chipset=&gt;PCI bus), the machine may go to sleep when it can get back
up within 15 seconds and supports wake-on-ring), the rest is the duty of
the daemon. mgetty cannot decide when the serial port or the PCI bus is
turned off.]

&gt; Vielleicht sollte /dev/acpi einfach nur poll implementieren ?
&gt; Die Signale sind leider schon alle vergeben.

[Perhaps /dev/acpi should implement poll only? Unfortunately all the
signals are already in use.]

SIGPWR? :-)

Nein, du kannst jedes beliebige Signal verwenden, du musst nur sagen,
welches. Polling ist ganz schlecht, weil es Rechenzeit braucht, wenn nix
los ist, was meistens der Fall ist.

Nope, you can use any signal, you just need to tell which. Polling is bad
because it needs CPU time even when nothing happens (which is the default
case).]

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  4:53pm  up 4 days, 22:00,  3 users,  load average: 1.17, 1.21, 1.09


---------- Forwarded message ----------
Date: Thu, 24 Jun 1999 22:28:52 +0200
From: Oliver Neukum &lt;Oliver.Neukum@lrz.uni-muenchen.de&gt;
To: Simon Richter &lt;geier@phobos.fachschaften.tu-muenchen.de&gt;
Subject: Re: [Acpi] More important work
&gt; &gt; &gt; Nein, die ACPI-Spec erlaubt uns, daf"ur zu sorgen, da"s ein Rechner
nur
&gt; &gt; &gt; soweit schlafengelegt wird, da"s er schnell genug wieder hochl"auft, um
&gt; &gt; &gt; seine Dienste zu erf"ullen. Ein Faxserver darf 15 Sekunden brauchen
&gt; &gt; &gt; (=&gt;Hibernate), ein Webserver vielleicht eine. Und das k"onnen uns nur die
&gt; &gt; &gt; betreffenden Programme sagen.

[Nope, the ACPI spec allows us to put a computer only into a sleep state
from which it is back up quick enough to fulfill its duty. A fax server
may take fifteen seconds (=&gt; Hibernate), a web server perhaps one. And
only the server programs themselves can tell us.]

&gt; &gt; Ja schon, aber ob mir ein Fax wichtig genug ist, dass der Rechner um 2:45
&gt; &gt; hochkommt und mich aufweckt moechte ich keinem Programm ueberlassen.

[Yes, of course, but whether a fax is important enough to turn on the
machine at 2:45 AM and wake me up is nothing I would like a program to
decide.]

&gt; Interessanter Punkt. Ich bin bisher davon ausgegangen, dass wenn der User
&gt; einen Faxserver laufen hat, dann soll der auch Faxe empfangen. :-)

[Interesting point. Up to now I assumed that when the user is running a
fax server, it should receive faxes. :-)]

Sure, but not always and in any case. That choice should be left to the user.
The best way to allow this is a central acpid, which can be configured.
I am sure that you will never want a dot matrix printer in your room to be
active between 2300 and 0800.

&gt; Was du also meinst, ist, dass der Faxserver nur aktiv ist, solange der
&gt; Rechner eh' laeuft. Hmm, ich bin mir nicht sicher, ob das unsere Aufgabe
&gt; ist, oder die des Faxserver-Autors.

[If I got you right, you want the fax server to be active, but only if the
computer is running anyway. Umm, I'm not sure whether this is our duty or
those of the fax server author.]

&gt; Mit deiner Erlaubnis wuerde ich den Thread gerne wieder auf die Liste
&gt; bringen, weil solche Fragen IMHO wichtig sind.

[With your permission I would like to get the thread back on the list,
because these questions are important IMHO.]

I answered in German, because your reply was in German. Considering the
international nature of the list I mistook that to indicate a private exchange.
Please feel free to forward as you will.

&gt; &gt; Vielleicht kann man das ueber eine pipe, an der acpid haengt und 
&gt; &gt; Nachrichten empfaengt, loesen. Eine rc-Datei koennte benutzt werden um zu 
&gt; &gt; entscheiden welche Programme wie den Systemzustand manipulieren duerfen.

[Perhaps this could be solved with a pipe, on which acpid listens for
messages. A rc-File could be used to decide which programs may manipulate
the system state in what way.]

&gt; Hmm, hast du dir meine Grafik 'mal angeschaut?

[Umm, have you looked at the picture I made?]

Yes, i have and I cannot help to disagree.
IMHO the kernel should not have to depend on a demon running in user space.
The clean solution is acpid talking to /dev/acpi and everyone else talking to
acpid. All that might be covered by libacpi.

&gt; Ablauf der Ereignisse IMHO:
&gt;  - User drueckt den Powerbutton
&gt;  - Event wird an alle ACPI-faehigen Programme verteilt.
&gt;  - acpid entscheidet sich fuer Hibernate

[Example event:
 - User presses power button
 - Event is distributed to all ACPI aware programs.
 - acpid decides to hibernate]

There is no need to broadcast an event, unless it will be acted upon.
The admin may have decided that the power button should have no effect,
if e.g. an ftp connection is active.

&gt;  - Entscheidung wird bekanntgegeben.
&gt;  - Programme treffen Vorbereitungen, geben dann gruenes Licht
&gt;  - acpid initiiert Hibernate.

[ - acpid broadcasts the decision to all other programs
 - the programs prepare, then tell acpid to go on
 - acpid initiates hibernate.]

&gt; Du hast recht, sicherheitstechnisch ist das unter aller Kanone. Du darfst
&gt; nicht ueber die Koepfe der anderen Programme hinwegentscheiden (Der
&gt; Rechner darf nicht schlafengehen, wenn ein Faxempfang laeuft, also muessen
&gt; alle Programme das Recht haben, einen Standby-Request aufzuhalten.
&gt; Gleichzeitig soll nicht jeder x-beliebige User das Recht haben, Strom zu
&gt; verbrauchen :-). Hmm, ein Konfigfile wird immer sinnvoller.

[You are right, from a security POV it is a PITA. You may not decide over
the heads of the other programs, since the machine may not go to sleep
while receiving a fax, so every program needs the right to disallow or at
least hold back standby requests. At the same time, Joe User should not be
able to require loads of energy :-). I start to see that a config file is
a good thing.]

I agree.

&gt; &gt; Vielleicht:

[Perhaps:]

&gt; &gt; get_acpi_info_by_device(... wie auch immer devices benannt werden sollen);
&gt; &gt; power_down_device( " );
&gt; &gt; power_up_device( " );
&gt; &gt; hibernate_device( " );
&gt; &gt; wake_system_on_activity ( " );

&gt; &gt; bedeutet aber weniger flexibilitaet.

[but this means less flexibility.]

&gt; Der Level ist mir ehrlich gesagt immer noch zu niedrig. Ein Programm
&gt; sollte nichts weiter tun muessen als Bedarf anmelden (mgetty braucht das
&gt; Modem[=&gt;serieller Port=&gt;Chipset=&gt;PCI-Bus], der Rechner darf schlafen, wenn
&gt; er unter 15 Sekunden wieder laeuft und Wake-on-ring unterstuetzt), den
&gt; Rest uebernimmt der Daemon. mgetty kann nicht entscheiden, wann der
&gt; serielle Port oder der PCI-Bus abgeschaltet wird.

[This is still on a too low level. A program shouldn't need to know more
than how to request certain things (mgetty needs the modem(=&gt;serial
port=&gt;chipset=&gt;PCI bus), the machine may go to sleep when it can get back
up within 15 seconds and supports wake-on-ring), the rest is the duty of
the daemon. mgetty cannot decide when the serial port or the PCI bus is
turned off.]

OK, dann we need to make a difference in functions designed for acpid and
others. It is not trivial to decide how to make this work. Full power management
requires us to allow a powerdown for a modem connected to an USB to serial
converter. Thus we need to allow all programms access to ACPI namespace and we
need to have a way to add a new powerdown method at runtime.

Imagine:
-User adds USB printer
-usbd detects printer and calls kmod
-kmod loads modul
-modul notifies acpid
-acpid reads configuration file
-acpid adds powerdown method

&gt; &gt; Vielleicht sollte /dev/acpi einfach nur poll implementieren ?
&gt; &gt; Die Signale sind leider schon alle vergeben.

[Perhaps /dev/acpi should implement poll only? Unfortunately all the
signals are already in use.]

&gt; SIGPWR? :-)

No, it has the fixed meaning: Save Your Buffers, NOW :-)
IMHO we should implement the select() and poll() syscalls on /dev/acpi.
acpid may then send a message to interested parties.(loopback perhaps - that
might allow a network extension, like: our print server just went to hibernate,
queue all print jobs of unimportant users)

according to signals(7), SIGPWR terminates a program if uncought.

&gt; Nein, du kannst jedes beliebige Signal verwenden, du musst nur sagen,
&gt; welches. Polling ist ganz schlecht, weil es Rechenzeit braucht, wenn nix
&gt; los ist, was meistens der Fall ist.

That seems to be a misunderstanding, see above.

&gt;    Simon
&gt; 
&gt; PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
&gt;  Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
&gt; GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
&gt; Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
&gt;   4:53pm  up 4 days, 22:00,  3 users,  load average: 1.17, 1.21, 1.09

</body></email><email><emailId>19990622184009</emailId><senderName>Dave J Woolley</senderName><senderEmail>djw@bts.co.uk</senderEmail><timestampReceived>1999-06-22 18:40:09-0400</timestampReceived><subject>RE: [Acpi] More important work</subject><body>

&gt; From:	Simon Richter [SMTP:geier@phobos.fs.tum.de]
&gt; 
&gt; I believe the best API for the userspace apps will be a dll; it should be
&gt; easy enough to use if you only need small functionality yet be powerful
&gt; enough to allow the necessary control.
&gt; 
	In my view, one of the problems with (MS) Windows is the
	proliferations of DLLs; they slow program launch and cause
	lots of version control problems.  I would prefer a kernel
	interface which passes request back to a daemon.

</body></email><email><emailId>19990622201025</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-06-22 20:10:25-0400</timestampReceived><subject>RE: [Acpi] More important work</subject><body>

On Tue, 22 Jun 1999, Dave J Woolley wrote:

&gt; &gt; I believe the best API for the userspace apps will be a dll; it should be
&gt; &gt; easy enough to use if you only need small functionality yet be powerful
&gt; &gt; enough to allow the necessary control.

&gt; 	In my view, one of the problems with (MS) Windows is the
&gt; 	proliferations of DLLs; they slow program launch and cause
&gt; 	lots of version control problems.  I would prefer a kernel
&gt; 	interface which passes request back to a daemon.

Well, I thought of two devices at the low level: /dev/acpi and /dev/acpid
(with different permissions, of course). The former is for ordinary user
programs, the second for the daemon. Everything that is sent to one will
reappear (as an event) on the other. Hardware events appear on both
devices, and commands are only executed from /dev/acpid. I've drawn a
picture, sorry if it looks crappy (five minutes' work, I'm very busy
tonight). It can be found under http://phobos.fs.tum.de/~geier/acpid.tiff

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!
  9:17pm  up 3 days,  2:22,  4 users,  load average: 1.21, 1.11, 1.09

</body></email><email><emailId>19990512154607</emailId><senderName>"David Christensen"</senderName><senderEmail>dchrist@home.com</senderEmail><timestampReceived>1999-05-12 15:46:07-0400</timestampReceived><subject>RE: [Acpi] Real world data</subject><body>

Simon,

What exactly do you mean by broken tables?  Since the ASL code has all been
run through the compiler, it is at least syntatically correct, though maybe
not functionally, and I don't see how you can test it functionally without a
platform.  I can provide you with some actual implementations (notebooks are
most interesting because of the use of embedded controllers and batteries),
and if you could be more specific on the types of problems you are looking
for, I might be able to get that too.

I have not seen any type of validation suite from the ACPI SIG
(http://www.teleport.com/~acpi), nor any other source.  If you can parse the
example code available from the ACPI SIG, that should be a good start.

I will send you some binaries directly.

Dave

&gt; -----Original Message-----
&gt; From: Simon Richter [mailto:geier@phobos.fachschaften.tu-muenchen.de]
&gt; Sent: Wednesday, May 12, 1999 7:19 AM
&gt; To: acpilist@telelists.com
&gt; Cc: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] Real world data
&gt;
&gt;
&gt; Hi,
&gt;
&gt; I have started to write a parser for the various tables that are handed to
&gt; me by the BIOS, and I'm searching for examples of tables that are in use
&gt; on actual systems to test my implementation against, especially broken
&gt; tables.
&gt;
&gt; Is there a testing suite or something similar available?
&gt;
&gt;    Simon
&gt;
&gt; -- Simon Richter
&gt; -- ACPI4Linux project: http://phobos.fs.tum.de/acpi/
&gt;
&gt;
&gt;
&gt;
&gt; _______________________________________________
&gt; acpi maillist  -  acpi@phobos.fachschaften.tu-muenchen.de
&gt; http://phobos.fachschaften.tu-muenchen.de/mailman/listinfo/acpi
&gt;

</body></email><email><emailId>19990519125308</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-19 12:53:08-0400</timestampReceived><subject>[Acpi] New stuff in CVS</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

I have added a new directory to the CVS tree: acpi/dsdttree.

In there, I have started on a tool to display the tree structure of a dsdt
(that is read from a file) without the header. It is meant as a start to
the dsdt parser, as moving it to kernelspace should not require more than
using a sedscript :-), and as a standalone tool for debugging own dsdts.

I will take the old directory from the CVS tree offline tomorrow at 12pm
CEST, so if any of you has made changes to it, please commit soon.

Also, please note that the current code is not functional at all
(segfaults). I will fix that, but I wanted to move the files first.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN0K0QPFUmCYJPaUlAQG6GAgAznBFpTXp3QQhhYJmz6dU92dpGSGww843
l2XjxBuKtBTEJ+PGNKZP2ifEqqomTgpV/g3zDgknbFGzJ64Sgfg0Z8GgkWBi6Xam
dzUcCzzjJ/snur61giGaxcpJhq6ra9R3MuPx4Xyd2hsKyldw8sN7ULOCAkk7if3I
l0dpyO31haV4N7sMe2UfC5tHxK/nuT/9d3FgReexNlHTG0hGw/x47G3e1CMy6qAM
bdWAmbntK3vea1Phk5O58lg0TghCPO2Xu8XdMiQFYby9pf3G6kNq3unMMJ/XcnOW
KWYO10y3XZ0Ec9G6ihw82yovFdZYGuuD0hgJhaoIKvQLjyrjv9wb4w==
=CUPN
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990524171518</emailId><senderName>"Henroid, Andrew D"</senderName><senderEmail>andrew.d.henroid@intel.com</senderEmail><timestampReceived>1999-05-24 17:15:18-0400</timestampReceived><subject>RE: [Acpi] Supporting non-compliant chipsets?</subject><body>

&gt; -----Original Message-----
&gt; From: Simon Richter [mailto:geier@phobos.fachschaften.tu-muenchen.de]
&gt; Sent: Sunday, May 23, 1999 7:36 AM
&gt; To: acpi@phobos.fachschaften.tu-muenchen.de
&gt; Subject: [Acpi] Supporting non-compliant chipsets?
&gt; 
&gt; an important question has arised: Are we going to support chipsets that
&gt; are not fully compliant? Since we are going to have the possibility to
&gt; replace the ACPI tables for any given system with our own (many BIOSs are
&gt; broken, thus this feature is needed), it would be possible to provide the
&gt; necessary tables to support these chipsets, but this would require the
&gt; kernel to be aware of unimplemented features which of course adds
&gt; complexity.
&gt; 
&gt; I'm not sure whether this is a good thing, what do you think?

I suspect there are currently a lot of non-compliant chipsets out
there right now so "yes" this would be good.  Of course, this
should definitely wait until after you have a working implementation
for compliant chipsets.  So, design the driver for compliant devices
and add point fixes later for broken chipsets.

-Andy

</body></email><email><emailId>19990530163400</emailId><senderName>Josip Gracin</senderName><senderEmail>grac@fly.srk.fer.hr</senderEmail><timestampReceived>1999-05-30 16:34:00-0400</timestampReceived><subject>Re: [Acpi] Power off function</subject><body>

Simon Richter (geier@phobos.fachschaften.tu-muenchen.de) wrote:
&gt; The patches in the current state do not provide any functionality, they
&gt; just scan the system for (some) ACPI-compliant devices. 

I see.  The patch did look that way to me, I must admit. :-)

&gt; I'm afraid it is still some way (at least I wouldn't call it "a long way")
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Great!

Thanks for the info,
-- 
| Josip Gracin
| Zagreb, Croatia

</body></email><email><emailId>19990407082952</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-07 08:29:52-0400</timestampReceived><subject>Re: [Acpi] Propose: The ACPI modules description.</subject><body>

On Thu, 1 Apr 1999, Max Berger wrote:

&gt; Boot Table loader
&gt; Current Status: Done

The current approach works, but is not quite optimized. We will almost
certainly have to rework the code.

&gt; ACPI Kernel/Init interface

This means a bunch of patches to things like /sbin/shutdown, and a daemon
that passes ACPIs requests over to init. 

I will make a list of all these on the web pages today.

   Simon

</body></email><email><emailId>19990407205000</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-07 20:50:00-0400</timestampReceived><subject>[Acpi] New info online</subject><body>

Hi,

I have brought the list of sub-projects online, under
http://phobos.fachschaften.tu-muenchen.de/acpi/parts.html . Sorry, for now
only available in English.

Comments are, as always, welcome.

   Simon

</body></email><email><emailId>19990413212109</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-13 21:21:09-0400</timestampReceived><subject>[Acpi] New Kernel Patch Released</subject><body>

Hi,

a new kernel patch is out - 990413. This is for kernel 2.2.5 (also tested
with 2.2.4, should work with 2.2.x)

What's new? I`ve started the /proc interface

Reason? I want to get information into userspace, so I won't have to
reboot all the time.

What now? I need YOUR HELP !!!!

Please download this patch, try it, and then send the output of
/proc/acpi/tables and /proc/acpi/facp to 
acpifeedback@phobos.fachschaften.tu-muenchen.de

Why? My system only implements a few tables, and I want to see what other
parts of ACPI are actually used in current hardware to set my priorities.

Thank You

Max

</body></email><email><emailId>19990415204310</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-15 20:43:10-0400</timestampReceived><subject>Re: [Acpi] I have written AML Parser code for FreeBSD.</subject><body>

On Fri, 16 Apr 1999 takawata@shidahara1.planet.sci.kobe-u.ac.jp wrote:

&gt; I wrote AML Parser code for FreeBSD.

Great to hear that, I have downloaded it, and will take a look at it
tomorrow, as it is already late... 8-)

   Simon

</body></email><email><emailId>19990416191904</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-16 19:19:04-0400</timestampReceived><subject>Re: [Acpi] Update about things happening at ACPI4Linux</subject><body>

On Fri, 16 Apr 1999, Max Berger wrote:

&gt; - Simon started working on the AML virtual machine

Not quite. I have been working for some time now, but thanks to Takanori
Watanabe, who has written some code for FreeBSD, we're a great step
further.

Just putting this right.

   Simon

</body></email><email><emailId>19990418101048</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-18 10:10:48-0400</timestampReceived><subject>[Acpi] Root Namespaces?</subject><body>

Hello,

while working on our ACPI implementation I noticed an inconsistency in the
documentation: 

In the ACPI specification, version 1.0b, on page 105, there is an explicit
statement that _GPE is supposed to be defined under the namespace root,
but the graphics right above that defines it to be within the package 
\_SB.

   Simon

---
Simon Richter
ACPI4Linux project: http://phobos.fachschaften.tu-muenchen.de/acpi/

</body></email><email><emailId>19990421234432</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-21 23:44:32-0400</timestampReceived><subject>[Acpi] New Kernel patch released...</subject><body>

High,

get it on our downloads-page at

http://phobos.fachschaften.tu-muenchen/acpi/download

hit shift-reload if the patch (4/22) is not visible!

Updates:
- /proc interace should now be "bulletproof"
- started work on the enumerator and some general ACPI-Funktions (I/O,
Timer, ...)

Max

</body></email><email><emailId>19990512141915</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-12 14:19:15-0400</timestampReceived><subject>[Acpi] Real world data</subject><body>

Hi,

I have started to write a parser for the various tables that are handed to
me by the BIOS, and I'm searching for examples of tables that are in use
on actual systems to test my implementation against, especially broken
tables.

Is there a testing suite or something similar available?

   Simon

-- Simon Richter
-- ACPI4Linux project: http://phobos.fs.tum.de/acpi/

</body></email><email><emailId>19990523143620</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-23 14:36:20-0400</timestampReceived><subject>[Acpi] Supporting non-compliant chipsets?</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

Hi,

an important question has arised: Are we going to support chipsets that
are not fully compliant? Since we are going to have the possibility to
replace the ACPI tables for any given system with our own (many BIOSs are
broken, thus this feature is needed), it would be possible to provide the
necessary tables to support these chipsets, but this would require the
kernel to be aware of unimplemented features which of course adds
complexity.

I'm not sure whether this is a good thing, what do you think?

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN0gSdfFUmCYJPaUlAQH71AgAsv98d/LFMmtbdiHp1G1HbbZ2FsRZpilC
K2Rve3JNWrEnkMH9bYJ2zIaOctKfHiA10OfoS0f9eKyGxgXaMHPW3a1eTgQnSKxK
bursH9fbMhjSOH/EkG8tNerwBUuG86/tFHHeyNOZ0vZ/nlEWLkylF7AyN8Xk/rjc
c+Cdwz3O4h4uaFGSDzTUv24PdMgicqrSSG0AFukhUAXWv1AM2W99gaPb2J/BsIaJ
nMjH/6m+ApGgYU0KYqxrmsnGfd1xX+l70H00W2VUF6LzaJni8ExlRzx+SQE+TZyl
l2z9jl6EylUMnts1luuqj0UxZ0Z9z0U5m+usi2nxbY2lc1egmsEiPg==
=bbDU
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990529160936</emailId><senderName>Josip Gracin</senderName><senderEmail>grac@fly.srk.fer.hr</senderEmail><timestampReceived>1999-05-29 16:09:36-0400</timestampReceived><subject>[Acpi] Power off function</subject><body>

Hi!

I have an ASUS P2B-DS motherboard and Linux 2.2.9 with the ACPI patch
applied.  Does the current ACPI patch provide power off functionality?  If
so, how do I do it?

Thanks,
-- 
| Josip Gracin
| Zagreb, Croatia

</body></email><email><emailId>19990530120646</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fs.tum.de</senderEmail><timestampReceived>1999-05-30 12:06:46-0400</timestampReceived><subject>Re: [Acpi] Power off function</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----

On 29 May 1999, Josip Gracin wrote:

&gt; I have an ASUS P2B-DS motherboard and Linux 2.2.9 with the ACPI patch
&gt; applied.  Does the current ACPI patch provide power off functionality?  If
&gt; so, how do I do it?

The patches in the current state do not provide any functionality, they
just scan the system for (some) ACPI-compliant devices. I'm afraid it is
still some way (at least I wouldn't call it "a long way") to go until
power-off is supported, because this feature (as any other feature as
well) depends on the AML VM to work.

   Simon

PGP public key available from ftp://phobos.fs.tum.de/pub/pgp/geier.asc
 Fingerprint: 10 62 F6 F5 C0 5D 9E D8  47 05 1B 8A 22 E5 4E C1
GEEK code block available from ftp://phobos.fs.tum.de/pub/gcb/geier.asc
Hi! I'm a .signature virus! Copy me into your ~/.signature to help me spread!

-----BEGIN PGP SIGNATURE-----
Version: 2.6.3ia
Charset: noconv

iQEVAwUBN1Ep4PFUmCYJPaUlAQHf2wf+M0gMvypCIezM3aL9ITO68H7NXTZcNiCb
JyoU84mjm3NhzsKy1/X+xtiHEokIa5ZXTUuyCXef4IiEbOmNl0rIhmEWkiYUzqpc
RDpM2FwbJeFDF1mhF3d0KdrplkyosBf6cMdV9CGngCdR6ue4imwSHUKcJVMxj/By
/vmM+e+NehHN5NquPK8YQin7DFpB1mVF9JL5rglQArHoJeocgjLg1m+sIqLIP/nu
TQ7m1546KPwKPU+KyR+UD+kMQruWfsrmBGSNuF+e4ROllMcISyuL9TfLXlb6rnyp
RUmPJrxAmjCyWEy8PBaYgMbMi+ljvkks2SWKihMOAqUr4BrsprdfYQ==
=YMlB
-----END PGP SIGNATURE-----

</body></email><email><emailId>19990425222237</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-25 22:22:37-0400</timestampReceived><subject>[Acpi] Stuff that needs to be done</subject><body>

Hi,

I've got great news: Max has gotten the CVS server to work, I think we can
start some real development now. :-)

I will upload what I have so far tomorrow, and I believe Max's code is
already online.

Also, I think it is safe to start giving out CVS accounts. If you want CVS
access, please send me your desired user name and a crypt()ed password,
and I will add you to the userbase.

However, please make sure you do not transmit your password unencrypted
when accessing the server. We have ssh with tunneling installed, please
use it. 

And I will be putting the whole thing online via cvsweb, so those of you
who just want to take a look but don't intend to do any development can do
so without an own user account.

   Simon

</body></email><email><emailId>19990427110739</emailId><senderName>Simon Richter</senderName><senderEmail>geier@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-27 11:07:39-0400</timestampReceived><subject>[Acpi] A great relief... :-)</subject><body>

Hi,

some good news: Our host, the student representatives at TU Muenchen, have
added us to the "abbreviated alias" nameserver zone. This means you can
use phobos.fs.tum.de as an alias for (hopefully, only mail and web tested
so far) everything. Since this is only an alias, the old names will
continue to work.

   Simon

</body></email><email><emailId>19990415160815</emailId><senderName></senderName><senderEmail>takawata</senderEmail><timestampReceived>1999-04-15 16:08:15-0400</timestampReceived><subject>[Acpi] I have written AML Parser code for FreeBSD.</subject><body>

Hi.
I happend to find this project.
I wrote AML Parser code for FreeBSD.
Currently this only shows a bit ASL like language output.
It is available at
http://www.planet.sci.kobe-u.ac.jp/~takawata/acpi/
.
The code is userland code,so porting is not so difficalt.
(OS dependent part may be only a bit of code to getting various table such
as DSDT and the project already imprement the function on kernelland).

Takanori Watanabe
&lt;a href="http://www.planet.sci.kobe-u.ac.jp/~takawata/key.html"&gt;
Public Key&lt;/a&gt;
Key fingerprint =  2C 51 E2 78 2C E1 C5 2D  0F F1 20 A3 11 3A 62 2A 

</body></email><email><emailId>19990416174233</emailId><senderName>Max Berger</senderName><senderEmail>mage@phobos.fachschaften.tu-muenchen.de</senderEmail><timestampReceived>1999-04-16 17:42:33-0400</timestampReceived><subject>[Acpi] Update about things happening at ACPI4Linux</subject><body>

High,

these are the current issues:

- The website has been changed again. A few more pages, and the first
Feedback is now included. I still need more! Please try the patch and
send mail back. see:
http://phobos.fachschaften.tu-muenchen.de/acpi/bios.html#submit

- Simon started working on the AML virtual machine

- Stephen Early has started working on the memory management.


So much 4 2day....

Max

</body></email></emails>