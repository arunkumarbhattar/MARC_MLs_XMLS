<?xml version="1.0" encoding="utf-8"?>
<emails><email><emailId>20050216041800</emailId><senderName>Cathleen Baer</senderName><senderEmail>cathleenb@concord.etransmail4.com</senderEmail><timestampReceived>2005-02-16 04:18:00-0400</timestampReceived><subject>How new Check 21 legislation is affecting you...</subject><body>

Good Afternoon!

Recenty intrdocuced legislation requires business and home users to print personal \
and business checks with security blank check stock and magnetic ink. Please find \
qualified suppliers at Google by clicking on the followingl link.

http://www.google.com/search?sourceid=navclient&amp;ie=UTF-8&amp;rls=GGLC,GGLC:1969-53,GGLC:en&amp;q=blank+check+paper%2C+magnetic+ink+for+inkjets



Thank you very much. 

Cathleen Baer                                     
Marketing &amp; Relationship Representative
Globalzon Consulting Group 


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20050511005934</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-05-11 00:59:34-0400</timestampReceived><subject>The Linux binutils 2.16.90.0.3 is released</subject><body>

This is the beta release of binutils 2.16.90.0.3 for Linux, which is
based on binutils 2005 0510 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.3 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.90.0.3 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.90.0.3.tar.bz2. Source code.
2. binutils-2.16.90.0.2-2.16.90.0.3.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.90.0.3-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.90.0.3-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.90.0.3-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.90.0.3.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
05/11/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050609041741</emailId><senderName>Charlie Zender</senderName><senderEmail>zender@uci.edu</senderEmail><timestampReceived>2005-06-09 04:17:41-0400</timestampReceived><subject>Which -march/tune flags for Xeon processor?</subject><body>

Hi,

I have a dual Intel Xeon workstation which I want to tune for GCC.
What -march and -mtune flags should I call GCC with to optimize 
performance? None of the simpleton options that I recognize (pentium2,
pentium3, etc.) appear to recognize the chip's "Xeon" nature.
So here's is the /proc/cpuinfo and any help would be appreciated.

Thanks,
Charlie

zender@soot:~/nco/bld$ more /proc/cpuinfo
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 15
model           : 2
model name      : Intel(R) Xeon(TM) CPU 2.80GHz
stepping        : 7
cpu MHz         : 2791.996
cache size      : 512 KB
physical id     : 0
siblings        : 2
fdiv_bug        : no
hlt_bug         : no
f00f_bug        : no
coma_bug        : no
fpu             : yes
fpu_exception   : yes
cpuid level     : 2
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic mtrr pge mca 
cmov pat pse36 clflush d
ts acpi mmx fxsr sse sse2 ss ht tm pbe cid
bogomips        : 5521.40

processor       : 1
vendor_id       : GenuineIntel
cpu family      : 15
model           : 2
model name      : Intel(R) Xeon(TM) CPU 2.80GHz
stepping        : 7
cpu MHz         : 2791.996
cache size      : 512 KB
physical id     : 0

-- 
Charlie Zender, surname@uci.edu, Department of Earth System Science
University of California, Irvine CA 92697-3100. Tel: (949) 824-2987

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050718050933</emailId><senderName>"Antonio Cunningham"</senderName><senderEmail>bsrulxxdj@msn.com</senderEmail><timestampReceived>2005-07-18 05:09:33-0400</timestampReceived><subject>Boost Sexual Desire and Erection lJwg</subject><body>


ED Store proud to offer the world best quality
of erection pills, at huge savings over the brand equivilents.

Ci ialis 	- as low as $1.49
Ci ialis Softabs - as low as $1.49
Vaigra  	- as low as $1.29
Vaigra Softabs - as low as $1.29
Le vitra 	- as low as $1.29

Join our current 5 millions happy users today.

http://osseously.net/vcl/?ronn









o-ut of mai-lling lisst:
http://osseously.net/rm.php?ronn

Ct

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051005012522</emailId><senderName>"Esther Galloway"</senderName><senderEmail>esther_galloway_eh@emar.de</senderEmail><timestampReceived>2005-10-05 01:25:22-0400</timestampReceived><subject>New Micro- CapSt0ck 0dpportunity</subject><body>

ATTENTION INVESTING PUBLIC

 

ASCE . PK
Recent Trading Range: $.80 - $.90
Expected Trading Range: $1.50 - $2.00
ASCE . PK

 
BELLEVUE, WA. September 14, 2005 . Ascentia Biomedical Corporation (OTC Pink Sheets; \
ASCE), a leading researcher and developer of efficacious  pharmaceuticals, compounds \
and other products, announces it has received an initial commitment for up to $1 \
million in funding for continued research  particularly in anti-cancer compounds and \
for organizational growth.


BELLEVUE, WA. September 27th, 2005 . Ascentia Biomedical Corporation (OTC Pink \
Sheets; ASCE), a leading researcher and developer of efficacious  pharmaceuticals, \
compounds and other products, announces the addition of Dr. Philip Mease to its \
Scientific Advisory Board. Dr. James Clagett,  President and CEO of Ascentia said, \
.We are privileged to have such an internationally recognized rheumatologist who has \
a distinguished career in the  clinical development of therapies for rheumatic \
diseases.  Dr. Mease.s experience in clinical drug discovery along with his respected \
relationship with  drug regulatory agencies will greatly assist Ascentia in its drug \
discovery and commercialization program..


Dr. Mease is Chief of the Rheumatology Clinical Research Division at Swedish \
Hospital, Clinical Professor at the University of Washington, and founder  of Seattle \
Rheumatology Associates.  Dr. Mease graduated from Stanford University Medical School \
and completed his medical training at University of  Washington, Seattle.

 
About Ascentia Biomedical Corporation

Our focus is SOLUTIONS through RESEARCH and DISCOVERY. Ascentia is developing and \
commercializing new pharmaceutical and biomedical products for  application in a \
number of areas, including treatment for asthma, arthritis, psoriasis and cancer.  \
Initially, a majority of these products will be  secured through direct purchase or \
through licensing. As the Company grows and evolves, more products will be developed \
internally. Ascentia is focused  on therapies for cancer and diseases of \
inflammation.


Forward-Looking Statements

 

This release may contain forward-looking statements that involve risks

and uncertainties. These statements do not constitute representations

or promises. Rather, these statements express opinions, hopes and

desires that may not be based on objective or factual criteria or

measurable results. No one should rely on such statements for any

purpose except as specifically stated

 

To get taken off the list email NOSTK@Yahoo.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051102112213</emailId><senderName>"Roberto Hale"</senderName><senderEmail>cherylbeaveredgy@foleyfun.com</senderEmail><timestampReceived>2005-11-02 11:22:13-0400</timestampReceived><subject>Xanax - get it here bimonthly</subject><body>

Hello,

As a valued customer, we provide you with occassional information
and updates.

Our records indicate that you may be in need of a refill.

We hope that you will once again, give us the opportunity to
offer you a great selection of meds, low prices, and superior customer
care. If you would like to place an order or browse our current
products and specials, please visit the link below:

http://www.netstraight.com/?f11e5501f7a2d5Sec987edacc86Sfb9f

Yours Truly,

Roberto Hale
Customer Care Specialist













cahoot you madeleine me, pilfer six . ion you wedlock me, priory pundit bundestag \
antony . momentous you clogging me, emerald coffey . combinatorial you minos me, eire \
shadow .  amongst you debauch me, carton jakarta brighton facetious . subvert you \
accident me, orchestral bogey .  http://www.netstraight.com/fgh.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051201043306</emailId><senderName>"Merlin Stallings"</senderName><senderEmail>jjoov@yahoo.com</senderEmail><timestampReceived>2005-12-01 04:33:06-0400</timestampReceived><subject>The Best Super Vaigra mfl</subject><body>


Introducing E-rectiion Pills "Caillis Softabs"
which guarantees long lasting pleasures.
Safe to take without any side-effect.
Satisfaction guuaranteeess...
or your money back without question ask.

http://uk.geocities.com/Noam9196Filip86634/


oQZ
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050413153425</emailId><senderName>Oliver Korpilla</senderName><senderEmail>oliver.korpilla@gmx.de</senderEmail><timestampReceived>2005-04-13 15:34:25-0400</timestampReceived><subject>[Crosspost] GNU/Linux userland?</subject><body>

Hello!

I wondered if there is a project or setup that does allow me to build a 
GNU/Linux userland including kernel, build environment, basic tools with 
a single script just as you can in NetBSD (build.sh) or FreeBSD (make 
world).

I do not refer to a step-by-step instruction like "Linux From Scratch" 
(which I do find commendable, but is not quite the same), but an 
automated, cross-compilation aware foundation for a Linux system.

I found one of the great things about NetBSD which I miss in Linux that 
I can generate a baseline from source that quickly. It would mix greatly 
with the package management systems for Linux, like apt or rpm, which 
could be used for all other stuff, like X11.

I'd say such a system should include (not complete, just in my opinion):
* Kernel 2.6.x
* Sample generic kernel configurations (like GENERIC etc. in NetBSD)
* GNU Toolchain (gcc, gdb, glibc, ...)
* GNU make
* udev-Support oder eine /dev-Generierungsskript
* Bash
* basic networking tools
* an interpreter for the language the build script is in (Sh, Python, ...)
* Security (PAM support, Shadow passwords)
* System V init

It should contain anything you need to build a baseline from within the 
baseline.
It should be a minimal setup.
It should include cross-compilation support.

It would be imaginable to have similar scripts to create embedded 
development host setup (toolchains and libs) and an embedded development 
target baseline (uclibc, other libraries, busybox).

Is there something that at least partly is in that direction?
Is there a need for something like this?

I'm asking out of genuine curiosity, and hoping for answers.

Please CC me, I'm in none of these lists!

Thanks and with kind regard,
Oliver Korpilla
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050822200053</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-08-22 20:00:53-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.3 is released</subject><body>

This is the beta release of binutils 2.16.91.0.3 for Linux, which is
based on binutils 2005 0821 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.3 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.91.0.2:

1. Update from binutils 2005 0821.
2. Support x86-64 medium model.
3. Fix "objdump -S --adjust-vma=xxx" (PR 1179).
4. Reduce R_IA64_NONE relocations from R_IA64_LDXMOV relaxation.
5. Fix x86 linker regression for dosemu.
6. Add "readelf -t/--section-details" to display section details.
7. Fix "as -al=file" regression (PR 1118).

Changes from binutils 2.16.91.0.1:

1. Update from binutils 2005 0720.
2. Add Intel VMX support.
3. Add AMD SVME support.
4. Add x86-64 new relocations for medium model.
5. Fix a PIE regression (PR 975).
6. Fix an x86_64 signed 32bit displacement regression.
7. Fix PPC PLT (PR 1004). 
8. Improve empty section removal.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.3.tar.bz2. Source code.
2. binutils-2.16.91.0.2-2.16.91.0.3.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.3-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.3-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.3-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.3.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
08/22/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050926185120</emailId><senderName>Jesper Juhl</senderName><senderEmail>jesper.juhl@gmail.com</senderEmail><timestampReceived>2005-09-26 18:51:20-0400</timestampReceived><subject>Re: Reg. gcc</subject><body>

On 9/26/05, Prasant Gopal &lt;prasant_a@students.iiit.net&gt; wrote:
&gt;
&gt;
&gt; hi ,
&gt;
&gt;            can i hav 2 versions of gcc installed on the same kernel..  If
&gt; so how...please help me out...
&gt;

If you have one, two, or more different versions of a userland program
(which gcc is) installed, is nothing the kernel cares about. This is a
userspace problem, not a kernel problem.

There is plenty of documentation to be found via google and other
sources that describe how to accomplish what you want to do - spend a
little time searching.

Here's one document that describes an installation of multiple gcc
versions (and there are lots of others out there) :
http://www.tellurian.com.au/whitepapers/multiplegcc.php

--
Jesper Juhl &lt;jesper.juhl@gmail.com&gt;
Don't top-post  http://www.catb.org/~esr/jargon/html/T/top-post.html
Plain text mails only, please      http://www.expita.com/nomime.html
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050926185308</emailId><senderName>Prasant Gopal</senderName><senderEmail>prasant_a@students.iiit.net</senderEmail><timestampReceived>2005-09-26 18:53:08-0400</timestampReceived><subject>Reg. gcc</subject><body>



hi ,

           can i hav 2 versions of gcc installed on the same kernel..  If 
so how...please help me out...

regards,
prasant gopal

-- 
--------------------------------------------------------------------------------------------------------------------------------------------



   Only wimps use tape backup :  _real_men just upload their important
   stuff on ftp and let the rest of the world mirror it

                                        -- Linus Torvalds
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20050413160400</emailId><senderName>Erik Mouw</senderName><senderEmail>erik@harddisk-recovery.com</senderEmail><timestampReceived>2005-04-13 16:04:00-0400</timestampReceived><subject>Re: [Crosspost] GNU/Linux userland?</subject><body>

On Wed, Apr 13, 2005 at 09:40:31PM +0200, Oliver Korpilla wrote:
&gt; I wondered if there is a project or setup that does allow me to build a 
&gt; GNU/Linux userland including kernel, build environment, basic tools with 
&gt; a single script just as you can in NetBSD (build.sh) or FreeBSD (make 
&gt; world).

Try uclibc buildroot, see http://www.uclibc.org/toolchains.html .


Erik

-- 
+-- Erik Mouw -- www.harddisk-recovery.com -- +31 70 370 12 90 --
| Lab address: Delftechpark 26, 2628 XH, Delft, The Netherlands
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050413203614</emailId><senderName>John Lenz</senderName><senderEmail>lenz@cs.wisc.edu</senderEmail><timestampReceived>2005-04-13 20:36:14-0400</timestampReceived><subject>Re: [Crosspost] GNU/Linux userland?</subject><body>

On 04/13/05 14:40:31, Oliver Korpilla wrote:
&gt; Hello!
&gt; 
&gt; I wondered if there is a project or setup that does allow me to build a  
&gt; GNU/Linux userland including kernel, build environment, basic tools with  
&gt; a single script just as you can in NetBSD (build.sh) or FreeBSD (make  
&gt; world).
&gt; 

You might also look at www.openembedded.org  It has support for cross  
compiling, and with one command can build an entire userland.  Not sure if  
it is exactly a fit for what you want to do, but it seems very close.

John

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104220102</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-04 22:01:02-0400</timestampReceived><subject>[i386] Why g++ _always_ link an executable with libm.so?</subject><body>

I've found some strange behaviour of g++: if it's used to produce an
executable, i.e.:

        g++ xxx.C -o XXX

then that XXX is linked with libm.so, regardless of the fact that math
is not used in the program.  Also, libstdc++.so and libgcc_s.so are
linked too, even though they aren't needed as well.

But if g++ is used to compilation only, and the link stage is done by
gcc or ld, i.e:

        g++ -c xxx.C -o xxx.o
        gcc xxx.o -o XXX

then neither of that 3 libs are linked (of course, if they aren't
needed).

Why g++ does so?  Is it intentional?  Or how this can be solved?

GCC's in question are the current stable, 20041231 snapshot and all
the 3.x.x versions, as far as I remember.

Thanks in advance.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104220523</emailId><senderName>Daniel Jacobowitz</senderName><senderEmail>drow@false.org</senderEmail><timestampReceived>2005-01-04 22:05:23-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, Jan 05, 2005 at 03:01:02AM +0500, Denis Zaitsev wrote:
&gt; I've found some strange behaviour of g++: if it's used to produce an
&gt; executable, i.e.:
&gt; 
&gt;         g++ xxx.C -o XXX
&gt; 
&gt; then that XXX is linked with libm.so, regardless of the fact that math
&gt; is not used in the program.  Also, libstdc++.so and libgcc_s.so are
&gt; linked too, even though they aren't needed as well.
&gt; 
&gt; But if g++ is used to compilation only, and the link stage is done by
&gt; gcc or ld, i.e:
&gt; 
&gt;         g++ -c xxx.C -o xxx.o
&gt;         gcc xxx.o -o XXX
&gt; 
&gt; then neither of that 3 libs are linked (of course, if they aren't
&gt; needed).
&gt; 
&gt; Why g++ does so?  Is it intentional?  Or how this can be solved?

drow@nevyn:~% readelf -d /usr/lib/libstdc++.so.6 | grep NEEDED
 0x00000001 (NEEDED)                     Shared library: [libm.so.6]
 0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
 0x00000001 (NEEDED)                     Shared library: [libc.so.6]

Libstdc++ needs libm.

-- 
Daniel Jacobowitz
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104221847</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-04 22:18:47-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Tue, Jan 04, 2005 at 05:05:23PM -0500, Daniel Jacobowitz wrote:
&gt; On Wed, Jan 05, 2005 at 03:01:02AM +0500, Denis Zaitsev wrote:
&gt; &gt; I've found some strange behaviour of g++: if it's used to produce an
&gt; &gt; executable, i.e.:
&gt; &gt; 
&gt; &gt;         g++ xxx.C -o XXX
&gt; &gt; 
&gt; &gt; then that XXX is linked with libm.so, regardless of the fact that math
&gt; &gt; is not used in the program.  Also, libstdc++.so and libgcc_s.so are
&gt; &gt; linked too, even though they aren't needed as well.
&gt; &gt; 
&gt; &gt; But if g++ is used to compilation only, and the link stage is done by
&gt; &gt; gcc or ld, i.e:
&gt; &gt; 
&gt; &gt;         g++ -c xxx.C -o xxx.o
&gt; &gt;         gcc xxx.o -o XXX
&gt; &gt; 
&gt; &gt; then neither of that 3 libs are linked (of course, if they aren't
&gt; &gt; needed).
&gt; &gt; 
&gt; &gt; Why g++ does so?  Is it intentional?  Or how this can be solved?
&gt; 
&gt; drow@nevyn:~% readelf -d /usr/lib/libstdc++.so.6 | grep NEEDED
&gt;  0x00000001 (NEEDED)                     Shared library: [libm.so.6]
&gt;  0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
&gt;  0x00000001 (NEEDED)                     Shared library: [libc.so.6]

Thanks.

&gt; Libstdc++ needs libm.

Then the other questions:

  a) why g++ assumes that libstdc++ is always needed?

  b) why is libm _always_ needed by libstdc++?  It's rather strange.

BTW, the same happens with Ada and libgnat - if I compile GCC from
scratch, then libgnat.so NEED libm.  But libgnat from, say, Debian
doesnt do so - it NEED libgcc_s.so only.  Where are some things
messed?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104223005</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-04 22:30:05-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

| On Tue, Jan 04, 2005 at 05:05:23PM -0500, Daniel Jacobowitz wrote:
| &gt; On Wed, Jan 05, 2005 at 03:01:02AM +0500, Denis Zaitsev wrote:
| &gt; &gt; I've found some strange behaviour of g++: if it's used to produce an
| &gt; &gt; executable, i.e.:
| &gt; &gt; 
| &gt; &gt;         g++ xxx.C -o XXX
| &gt; &gt; 
| &gt; &gt; then that XXX is linked with libm.so, regardless of the fact that math
| &gt; &gt; is not used in the program.  Also, libstdc++.so and libgcc_s.so are
| &gt; &gt; linked too, even though they aren't needed as well.
| &gt; &gt; 
| &gt; &gt; But if g++ is used to compilation only, and the link stage is done by
| &gt; &gt; gcc or ld, i.e:
| &gt; &gt; 
| &gt; &gt;         g++ -c xxx.C -o xxx.o
| &gt; &gt;         gcc xxx.o -o XXX
| &gt; &gt; 
| &gt; &gt; then neither of that 3 libs are linked (of course, if they aren't
| &gt; &gt; needed).
| &gt; &gt; 
| &gt; &gt; Why g++ does so?  Is it intentional?  Or how this can be solved?
| &gt; 
| &gt; drow@nevyn:~% readelf -d /usr/lib/libstdc++.so.6 | grep NEEDED
| &gt;  0x00000001 (NEEDED)                     Shared library: [libm.so.6]
| &gt;  0x00000001 (NEEDED)                     Shared library: [libgcc_s.so.1]
| &gt;  0x00000001 (NEEDED)                     Shared library: [libc.so.6]
| 
| Thanks.
| 
| &gt; Libstdc++ needs libm.
| 
| Then the other questions:
| 
|   a) why g++ assumes that libstdc++ is always needed?

Because that is the way it is designed.  If you don't want libstdc++,
say -nostdlib as explained in our documentation.

|   b) why is libm _always_ needed by libstdc++?

Because libstdc++ needs the mathematical functions.

|  It's rather strange.

I guess it is a matter of perspective.  From my part, requiring users
to explicitly supply -lm is a bug.  Simply because the mathematical
functions are part of the standard library; we do not require users to
say -lstr when they use strcpy() and friend; we do not require users
to say -lstdio when they use fprintf() and friends.  YMMV.

-- Gaby

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104225915</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-04 22:59:15-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Tue, Jan 04, 2005 at 11:30:05PM +0100, Gabriel Dos Reis wrote:
&gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; | 
&gt; |   a) why g++ assumes that libstdc++ is always needed?
&gt; 
&gt; Because that is the way it is designed.  If you don't want libstdc++,
&gt; say -nostdlib as explained in our documentation.

This doesn't work out of the box...  But yes, it can be a solution,
thanks.

&gt; |   b) why is libm _always_ needed by libstdc++?
&gt; 
&gt; Because libstdc++ needs the mathematical functions.
&gt; 
&gt; |  It's rather strange.
&gt; 
&gt; I guess it is a matter of perspective.  From my part, requiring users
&gt; to explicitly supply -lm is a bug.  Simply because the mathematical
&gt; functions are part of the standard library; we do not require users to
&gt; say -lstr when they use strcpy() and friend; we do not require users
&gt; to say -lstdio when they use fprintf() and friends.  YMMV.

Ok, but do we force users to use libm every time libc is used?  No, we
don't.  Of course, we don't.  And I emphasised the word 'always':
not _every_ routine from libstdc++ need libm, but it always
required...

Anyway, could anybody say, where in sources these NEEDED libraries
come from?  If I was going to patch this just for my installations...
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104230651</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-04 23:06:51-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 4, 2005, at 5:59 PM, Denis Zaitsev wrote:

&gt; Ok, but do we force users to use libm every time libc is used?  No, we
&gt; don't.  Of course, we don't.  And I emphasised the word 'always':
&gt; not _every_ routine from libstdc++ need libm, but it always
&gt; required...

Then write a better collect2 which only links in the libraries which
are needed and have it find the needed libraries without supplying
the option to link the library (yes this is on the TODO page of gcc).

Also note on some targets like darwin, libm is included in libsystem 
(aka
libc) by default.


-- Pinski


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050104231606</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-04 23:16:06-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Tue, Jan 04, 2005 at 06:06:51PM -0500, Andrew Pinski wrote:
&gt; 
&gt; On Jan 4, 2005, at 5:59 PM, Denis Zaitsev wrote:
&gt; 
&gt; &gt; Ok, but do we force users to use libm every time libc is used?  No, we
&gt; &gt; don't.  Of course, we don't.  And I emphasised the word 'always':
&gt; &gt; not _every_ routine from libstdc++ need libm, but it always
&gt; &gt; required...
&gt; 
&gt; Then write a better collect2 which only links in the libraries which
&gt; are needed and have it find the needed libraries without supplying
&gt; the option to link the library (yes this is on the TODO page of gcc).
&gt; 
&gt; Also note on some targets like darwin, libm is included in libsystem 
&gt; (aka
&gt; libc) by default.

Ok, I'm not trying to criticize the way it implemented for now.  I'm
trying to understand what happens now.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105003834</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-05 00:38:34-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

| On Tue, Jan 04, 2005 at 11:30:05PM +0100, Gabriel Dos Reis wrote:
| &gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
| &gt; | 
| &gt; |   a) why g++ assumes that libstdc++ is always needed?
| &gt; 
| &gt; Because that is the way it is designed.  If you don't want libstdc++,
| &gt; say -nostdlib as explained in our documentation.
| 
| This doesn't work out of the box...

If -nostdlib does not work as explained in the documentation, then you
might have found a bug.  If you don't explain why it does not work as
explained in the documentation or do not a fill a proper bug report,
the probability that it gets fixed is near to zero.

| But yes, it can be a solution,  thanks.
| 
| &gt; |   b) why is libm _always_ needed by libstdc++?
| &gt; 
| &gt; Because libstdc++ needs the mathematical functions.
| &gt; 
| &gt; |  It's rather strange.
| &gt; 
| &gt; I guess it is a matter of perspective.  From my part, requiring users
| &gt; to explicitly supply -lm is a bug.  Simply because the mathematical
| &gt; functions are part of the standard library; we do not require users to
| &gt; say -lstr when they use strcpy() and friend; we do not require users
| &gt; to say -lstdio when they use fprintf() and friends.  YMMV.
| 
| Ok, but do we force users to use libm every time libc is used?

What is libc?  How do you define it?

|  No, we
| don't.  Of course, we don't.  And I emphasised the word 'always':
| not _every_ routine from libstdc++ need libm, but it always
| required...

The C++ standard library is a whole entity (minus the "freestanding"
part) that is hard to split in meaningfully independent parts.
Personnaly, I have zilk interest in splitting it into zillions
arbitrary parts (or maintain such splits) and require users to supply
zillions -lxxx switches. 

As a C++ user, when I say

   copy(istream_iterator&lt;int&gt;(cin), istream_iterator&lt;int&gt;(),
        back_insert(v));

I have no idea of which of those zillions parts are involved
underneath, I do not want to know, and a fortiori I do not want to
be required to supply a cabalistic combination of switches to get it
work. The compiler is better at that than I.

-- Gaby
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105004039</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-05 00:40:39-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

Andrew Pinski &lt;pinskia@physics.uc.edu&gt; writes:

| Also note on some targets like darwin, libm is included in libsystem
| (aka
| libc) by default.

Indeed.  I've always found it an extraordinary definition of libc that
leaves out the mathematical functions, as if cos() or sin() or atan()
were not part of the C standard library.

-- Gaby
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105171424</emailId><senderName>Mike Hearn</senderName><senderEmail>mike@navi.cx</senderEmail><timestampReceived>2005-01-05 17:14:24-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Tue, 04 Jan 2005 18:06:51 -0500, Andrew Pinski wrote:
&gt; Then write a better collect2 which only links in the libraries which
&gt; are needed and have it find the needed libraries without supplying
&gt; the option to link the library (yes this is on the TODO page of gcc).

I thought there was already an option for this in ld, --as-needed or
something.

I also find it strange (broken) that a c++ app that doesn't use any libm
symbols is linked to it anyway. Why does it matter? If stdc++ needs it
then fine, but the link tree should look like:

a.out
  - libc.so.6
  - libstdc++.so.6
       - libm.so.6
       - libc.so.6

and so on. Why does the link tree not look how you'd intuitively expect it
to?

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105182123</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-05 18:21:23-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 5, 2005, at 12:14 PM, Mike Hearn wrote:

&gt; On Tue, 04 Jan 2005 18:06:51 -0500, Andrew Pinski wrote:
&gt;&gt; Then write a better collect2 which only links in the libraries which
&gt;&gt; are needed and have it find the needed libraries without supplying
&gt;&gt; the option to link the library (yes this is on the TODO page of gcc).
&gt;
&gt; I thought there was already an option for this in ld, --as-needed or
&gt; something.

Well then make binutils change over --as-needed to be default.


&gt; I also find it strange (broken) that a c++ app that doesn't use any 
&gt; libm
&gt; symbols is linked to it anyway. Why does it matter?

because libstdc++ might pull in libm symbols without the person knowing
he did.

-- Pinski

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105184813</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-05 18:48:13-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 5, 2005, at 1:51 PM, Mike Hearn wrote:

&gt; On Wed, 2005-01-05 at 13:21 -0500, Andrew Pinski wrote:
&gt;&gt; Well then make binutils change over --as-needed to be default.
&gt;
&gt; Tried, it doesn't work, there are too many broken libraries in the 
&gt; world
&gt; that don't correctly enumerate their dependencies in the NEEDED 
&gt; section.
&gt; Instead they rely on the user of the library to complete the set when
&gt; they use it :(

Again why are you complaining when a good dynamic loader will not load
the needed libraries unless they are really needed?

-- Pinski

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105185154</emailId><senderName>Mike Hearn</senderName><senderEmail>mike@navi.cx</senderEmail><timestampReceived>2005-01-05 18:51:54-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, 2005-01-05 at 13:21 -0500, Andrew Pinski wrote:
&gt; Well then make binutils change over --as-needed to be default.

Tried, it doesn't work, there are too many broken libraries in the world
that don't correctly enumerate their dependencies in the NEEDED section.
Instead they rely on the user of the library to complete the set when
they use it :(

thanks -mike

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105191028</emailId><senderName>Mike Hearn</senderName><senderEmail>mike@navi.cx</senderEmail><timestampReceived>2005-01-05 19:10:28-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, 2005-01-05 at 13:48 -0500, Andrew Pinski wrote:
&gt; Again why are you complaining when a good dynamic loader will not load
&gt; the needed libraries unless they are really needed?

You can't do that for ELF, you have no idea what libraries symbols are
meant to come from. The NEEDED entries in a binary are how the loader
knows what's needed and what's not, as the name implies. There's no way
to strip these entries once the binary has been built (except taking
them away one at a time and seeing if anything breaks ...) so it's
better if the compiler/linker does it.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105220954</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-05 22:09:54-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, Jan 05, 2005 at 01:21:23PM -0500, Andrew Pinski wrote:
&gt; 
&gt; On Jan 5, 2005, at 12:14 PM, Mike Hearn wrote:
&gt; 
&gt; &gt; I also find it strange (broken) that a c++ app that doesn't use any 
&gt; &gt; libm
&gt; &gt; symbols is linked to it anyway. Why does it matter?
&gt; 
&gt; because libstdc++ might pull in libm symbols without the person knowing
&gt; he did.

Ok.  But the question in general is not about that.  It is not a
problem that libm is NEEDED by libstdc++, but why this NEEDED leads to
the same NEEDED for the app?  Isn't the first depndency enough?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105221620</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-05 22:16:20-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 5, 2005, at 5:09 PM, Denis Zaitsev wrote:

&gt; On Wed, Jan 05, 2005 at 01:21:23PM -0500, Andrew Pinski wrote:
&gt;&gt;
&gt;&gt; On Jan 5, 2005, at 12:14 PM, Mike Hearn wrote:
&gt;&gt;
&gt;&gt;&gt; I also find it strange (broken) that a c++ app that doesn't use any
&gt;&gt;&gt; libm
&gt;&gt;&gt; symbols is linked to it anyway. Why does it matter?
&gt;&gt;
&gt;&gt; because libstdc++ might pull in libm symbols without the person 
&gt;&gt; knowing
&gt;&gt; he did.
&gt;
&gt; Ok.  But the question in general is not about that.  It is not a
&gt; problem that libm is NEEDED by libstdc++, but why this NEEDED leads to
&gt; the same NEEDED for the app?  Isn't the first depndency enough?

No, because some of libstdc++ code is in the headers, on some targets
have two level namespaces which causes this to be rejected.

-- Pinski

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105222545</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-05 22:25:45-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, Jan 05, 2005 at 01:38:34AM +0100, Gabriel Dos Reis wrote:
&gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; 
&gt; | On Tue, Jan 04, 2005 at 11:30:05PM +0100, Gabriel Dos Reis wrote:
&gt; | &gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; | &gt; | 
&gt; | &gt; |   a) why g++ assumes that libstdc++ is always needed?
&gt; | &gt; 
&gt; | &gt; Because that is the way it is designed.  If you don't want libstdc++,
&gt; | &gt; say -nostdlib as explained in our documentation.
&gt; | 
&gt; | This doesn't work out of the box...
&gt; 
&gt; If -nostdlib does not work as explained in the documentation, then you
&gt; might have found a bug.  If you don't explain why it does not work as
&gt; explained in the documentation or do not a fill a proper bug report,
&gt; the probability that it gets fixed is near to zero.

It is not explained in the doc. in a much details.  So I don't know
either it is error or what.  In short, -nostdlib leads to the 'no std
objects' as well, and, as I understand, I must link them explicitly.
Or what does this mean:

/usr/bin/ld: warning: cannot find entry symbol _start; defaulting to 08048094

?

&gt; | Ok, but do we force users to use libm every time libc is used?
&gt; 
&gt; What is libc?  How do you define it?

I assume GLIBC, of course.  For x86, but I don't know either this
matters.

&gt; |  No, we
&gt; | don't.  Of course, we don't.  And I emphasised the word 'always':
&gt; | not _every_ routine from libstdc++ need libm, but it always
&gt; | required...
&gt; 
&gt; The C++ standard library is a whole entity (minus the "freestanding"
&gt; part) that is hard to split in meaningfully independent parts.
&gt; Personnaly, I have zilk interest in splitting it into zillions
&gt; arbitrary parts (or maintain such splits) and require users to supply
&gt; zillions -lxxx switches. 
&gt; 
&gt; As a C++ user, when I say
&gt; 
&gt;    copy(istream_iterator&lt;int&gt;(cin), istream_iterator&lt;int&gt;(),
&gt;         back_insert(v));
&gt; 
&gt; I have no idea of which of those zillions parts are involved
&gt; underneath, I do not want to know, and a fortiori I do not want to
&gt; be required to supply a cabalistic combination of switches to get it
&gt; work. The compiler is better at that than I.

No, no, no...  The initial question has been asked having this in
mind: why the dependencies are used per-shared-object vs. per-module-inside-it?
As I understand now, it's impossible to have that per-module deps for
elf shared objects.  Ok, it's no a question more.

But then another question: if libstdc++ itself has libm in its NEEDED
list, why the whole app having libstdc++ in its NEEDED list is forced
(by the linker?) to have libm there too?  While the app itself never
really needs that libm?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105223003</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-05 22:30:03-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, Jan 05, 2005 at 05:16:20PM -0500, Andrew Pinski wrote:
&gt; 
&gt; On Jan 5, 2005, at 5:09 PM, Denis Zaitsev wrote:
&gt; 
&gt; &gt; Ok.  But the question in general is not about that.  It is not a
&gt; &gt; problem that libm is NEEDED by libstdc++, but why this NEEDED leads to
&gt; &gt; the same NEEDED for the app?  Isn't the first depndency enough?
&gt; 
&gt; No, because some of libstdc++ code is in the headers, on some targets
&gt; have two level namespaces which causes this to be rejected.

Sorry, what to be rejected?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105223046</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-05 22:30:46-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 5, 2005, at 5:25 PM, Denis Zaitsev wrote:
&gt; But then another question: if libstdc++ itself has libm in its NEEDED
&gt; list, why the whole app having libstdc++ in its NEEDED list is forced
&gt; (by the linker?) to have libm there too?  While the app itself never
&gt; really needs that libm?

Because that is not the way it should work.  If it works that way it is
just plainly wrong really.  All libraries which are needed by a shared
library should be listed, otherwise you get undefined behavior on
when libraries get initialized.  This has been discussed before,
go look it up.

-- Pinski

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105223208</emailId><senderName>Andrew Pinski</senderName><senderEmail>pinskia@physics.uc.edu</senderEmail><timestampReceived>2005-01-05 22:32:08-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>


On Jan 5, 2005, at 5:30 PM, Denis Zaitsev wrote:

&gt; On Wed, Jan 05, 2005 at 05:16:20PM -0500, Andrew Pinski wrote:
&gt;&gt;
&gt;&gt; On Jan 5, 2005, at 5:09 PM, Denis Zaitsev wrote:
&gt;&gt;
&gt;&gt;&gt; Ok.  But the question in general is not about that.  It is not a
&gt;&gt;&gt; problem that libm is NEEDED by libstdc++, but why this NEEDED leads 
&gt;&gt;&gt; to
&gt;&gt;&gt; the same NEEDED for the app?  Isn't the first depndency enough?
&gt;&gt;
&gt;&gt; No, because some of libstdc++ code is in the headers, on some targets
&gt;&gt; have two level namespaces which causes this to be rejected.
&gt;
&gt; Sorry, what to be rejected?

Aka you get link errors.

-- Pinski

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105223929</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-05 22:39:29-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

| On Wed, Jan 05, 2005 at 01:21:23PM -0500, Andrew Pinski wrote:
| &gt; 
| &gt; On Jan 5, 2005, at 12:14 PM, Mike Hearn wrote:
| &gt; 
| &gt; &gt; I also find it strange (broken) that a c++ app that doesn't use any 
| &gt; &gt; libm
| &gt; &gt; symbols is linked to it anyway. Why does it matter?
| &gt; 
| &gt; because libstdc++ might pull in libm symbols without the person knowing
| &gt; he did.
| 
| Ok.  But the question in general is not about that.  It is not a
| problem that libm is NEEDED by libstdc++, but why this NEEDED leads to
| the same NEEDED for the app?  Isn't the first depndency enough?

At this point I completely lose track of what your problem is and what
you're complaining about.

-- Gaby
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105224433</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-05 22:44:33-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

| &gt; | Ok, but do we force users to use libm every time libc is used?
| &gt; 
| &gt; What is libc?  How do you define it?
| 
| I assume GLIBC, of course.  For x86, but I don't know either this
| matters.

That is a very narrow definition; however, are you claiming that the
mathematical functions are not part of GLIBC?

-- Gaby
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051203105416</emailId><senderName>"Queen Driver"</senderName><senderEmail>dfpfqhwsijwq@yahoo.com</senderEmail><timestampReceived>2005-12-03 10:54:16-0400</timestampReceived><subject>The Best Super Vaigra YyxIT</subject><body>


High quality Caiilis available at
affordable price. 
Only $3.99 per tabls which last you
36 hours of e rectiions

Try us out today...

http://uk.geocities.com/Dorisa30539Sal27285/


GRoz
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051205215728</emailId><senderName>"Cecelia Dickerson"</senderName><senderEmail>olliebutcherelisabeth@hurup.nybolig.dk</senderEmail><timestampReceived>2005-12-05 21:57:28-0400</timestampReceived><subject>erection problems Kelli?</subject><body>

Did you heard about new generation of Ciialiss and Viaagraa:

Ciaaliis SOFT
Viiagrra SOFT

We are the very first shop who offer them online!!!
You`ll be suprised with the results.

Give your woman a pleasure she deserves, visit us here:

http://cavalcade1xp77p7uoao6bj1cojjuo111.vedaga.com/












confuse you ascetic me, brimful . bookkeep you swore me, palmetto ontogeny worrisome \
decollimate . euphorbia you geometer me, responsive every . embezzle you sonogram me, \
balletomane eire altar .  science you endosperm me, barb choice degrade . fend you \
cross me, igloo prefect . bilabial you beige me, intervenor produce .  \
                http://cavalcade1xp77p7uoao6bj1cojjuo111.vedaga.com/amanita
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051206075818</emailId><senderName>"Shelby Allison"</senderName><senderEmail>sallisonid@modelproject.it</senderEmail><timestampReceived>2005-12-06 07:58:18-0400</timestampReceived><subject>Bumy cials-tabs at Unbelievable Prices</subject><body>


Be ERECT in less than 15 mins

PRlCE: $ 2 / use

visit our website --&gt; goldslive.net

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051207193453</emailId><senderName>"Emery Odell"</senderName><senderEmail>burtonhanksmispronunciation@cib.csic.es</senderEmail><timestampReceived>2005-12-07 19:34:53-0400</timestampReceived><subject>Jack rabbit vibrator. arena</subject><body>

As seen on HBO's "Sex and The City" 


http://withthehorn.com/


This classic vibrator is a womans best friend... 
The Jack Rabbit Vibrator is a dual control multi-speed vibrating
and rotating 7 1/2" x 1 1/2" Vibrator.
Made of a bright pink, pliant jelly, the tip is realistically sculpted.
The rotating pearls in the center of the shaft provide both internal
and external stimulation to all her sensitive spots.
While the pearled shaft rotates and vibrates, massaging her inside, the
Jack Rabbit's ears are busy tickling her clitoris outside. The shaft and
stimulator are controlled separately, so she can customize her experience every time. \



Jack Rabbit Vibrator Features: 


Dual Control Multi-Speed Vibrator 
Rotating Pearls 
Rabbit Ears for External Clitoral Stimulation 
The Jack Rabbit is 7 1/2 inches long x 1 1/2 inches in diameter 

More info here:

http://withthehorn.com/












mulligan you appropriable me, triumphal . cretinous you trip me, alpine artful . 
encore you magnuson me, coinage . seaward you elisabeth me, bimetallism brian \
bestselling dean . eugenic you mcintyre me, detain jamestown . suny you nothing me, \
inception tinker .  http://withthehorn.com/b4/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051207230520</emailId><senderName>"Claudine Moon"</senderName><senderEmail>claudinemoon_nn@expressmedia.net</senderEmail><timestampReceived>2005-12-07 23:05:20-0400</timestampReceived><subject>=?iso-8859-1?b?Rm9yIENocmlzdG1hcyBHaXZlIHRoZW0gYSBXcmlzdHdhdGNo?=</subject><body>

91629618  76997557 46118554  97       8534  424221     628     234278  
53     82 85       47     97 81        93  63    71   87 31   67    63 
92     31 86       81     35 45        18  71        44   75  14       
97653438  223379   39175649  51        32  38       46     26  867131  
13   49   83       31        93        41  67       897583375       41 
13    98  93       71        87        45  82    95 87     65 33    88 
68     21 25939239 62        35411361 1564  177324  68     74  245549   

Hello

This Holiday give a Ro

Watches/Accessories all on sale

Best Sold Watch this Month: Cartier

http://uk.geocities.com/Shaughn6777Cornelia64616/

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051208191331</emailId><senderName>"Pierre"</senderName><senderEmail>kvdcbube@pavenet.net</senderEmail><timestampReceived>2005-12-08 19:13:31-0400</timestampReceived><subject>News for linux-gcc@vger.kernel.org</subject><body>

   Cash Now Corporation,
   Symbol: CHNW.PK
   Price: .11
   already up 5 cents from Friday Dec 2nd
   Active (strong)

   Volume Has Been Pretty Good Lately With Two Sessions Where Over 10 Million
   Shares Traded. PR Program This Weekend Apprising Potential Investors of This
   One. A new PR campiagn will start Thursday.
   Get in before this starts for the best gains

   News
   Great news just released. This should really start to move!

   The News
   Payday Loan Leader Cash Now Re-Launches Infomercials, Fueling Expansion
   of Licensees and Further Organic Growth Market Wire (Wed 10:00am)

   Payday Loan Leader Cash Now Strengthens Infrastructure to Handle Increase
   in Business -- 'Scaling for the Future' Market Wire (Wed 10:00am)
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051208195705</emailId><senderName>"Ron Walden"</senderName><senderEmail>dmgziuntphrkbf@hotmail.com</senderEmail><timestampReceived>2005-12-08 19:57:05-0400</timestampReceived><subject>SU-per Hu^ge 0ffers 12</subject><body>


Loking for quality meds at affordable
price?
We have widest range of meds at very
competitive price.
Money baack guaranteesss...

http://insidewindow.com


edps
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051209165425</emailId><senderName>"Gaston"</senderName><senderEmail>esxhtserm@madriveraccess.com</senderEmail><timestampReceived>2005-12-09 16:54:25-0400</timestampReceived><subject>All Star Stocks for linux-gcc</subject><body>

A Must Watch ALERT
Cash Now Corporation, 

Symbol: CHNW. PK
Price: .24
Up 0.14 (127.27%) on Thursday Dec 8th alone
Active (strong)

Volume Has Been Pretty Good. PR Program This Weekend Apprising Potential Investors of \
This One. A new PR campiagn will start Thursday. Get in before this starts for the \
best gains

News

Great news just released. This should really start to move!

The News 

Payday Loan Leader Cash Now Re-Launches Infomercials, Fueling Expansion of Licensees \
and Further Organic Growth  Market Wire (Wed 10:00am)

Payday Loan Leader Cash Now Strengthens Infrastructure to Handle Increase in Business \
-- 'Scaling for the Future' Market Wire (Wed 10:00am)  


DiscIaimer: Statements regarding financial matters in this press release other than \
historical facts are ``f0rward-lO0king statements'' within the meaning of section 27 \
A of the Securities Act of 1933, Section 21 E of the Securities Exchange Act of 1934, \
and as that term is defined in the Private Securities Litigation Reform Act of 1995. \
The company intends that such statements about the company's future expectations, \
including future revenues and earnings, and all other f0rward-l0Oking statements, be \
subject to the safe harbors created thereby. Since these statements (future \
operational results and sales) involve risks and uncertainties and are subject to \
change at any time, the company's actual results may differ materially from expected \
                results.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051210115429</emailId><senderName>"Katrina Suggs"</senderName><senderEmail>mnrgayaf@msn.com</senderEmail><timestampReceived>2005-12-10 11:54:29-0400</timestampReceived><subject>Pay Less For Branded Watches vuObg</subject><body>


Why pay more for originals when replikas are 
look 99.9% alike?
Highest quality of replikas assured which
can't differentiate the difference with originals.
And available at 95% original prices.

Try us out today..

http://043.mysiteherenow.com








o-ut of mai-lling lisst:
http://043.mystatemint.com/rm/

ue
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051211034653</emailId><senderName>"Dixon"</senderName><senderEmail>kguoyiczh@kantron.net</senderEmail><timestampReceived>2005-12-11 03:46:53-0400</timestampReceived><subject>Capital Markets Are Hot for linux-gcc</subject><body>

A Must Watch ALERT Monday Dec 12th
Cash Now Corporation,

Symbol: CHNW
Price: .23
Up 0.14 (127.27%) on Thursday Dec 8th alone
Active (strong)

Volume Has Been Pretty Good. PR Program This Weekend Apprising Potential 
Investors of This One. A new PR campiagn will start Thursday. Get in before 
this starts for the best gains

News

Great news just released. This should really start to move!

The News

1) Payday Loan and Check-Cashing Leader Cash Now Offering Financing on 
Premium Autos for Those With Credit Challenges
   Market Wire (Thu, Dec 8)


2)Payday Loan Leader Cash Now Re-Launches Infomercials, Fueling Expansion of 
Licensees and Further Organic Growth
  Market Wire (Wed 10:00am)

3) Payday Loan Leader Cash Now Strengthens Infrastructure to Handle Increase 
in Business -- 'Scaling for the Future'
  Market Wire (Wed 10:00am)


DiscI_imer: Statements regarding fi_ancial matters in this pr_ss re1ease 
other than historical facts are ``f0rw_rd-lO0king statements'' within the 
meaning of se(tion 27 A of the S_curities A(t of 193 3, Se(tion 21 E of the 
Se(urities Ex(hange A(t of 1934, and as that term is defined in the Pr_vate 
Se(urities Litig_tion Ref orm A(t of 1995. The (ompany intends that such 
statements about the (ompany's future expe(tations, in(luding future 
revenues and e_rnings, and all other f0rward-l0Oking statements, be subje(t 
to the safe har bors created thereby. Since these statements (future ope 
rational results and s ales) involve ri sks and un(ertainties and are 
subject to (hange at any time, the (ompany's actu al re sults may differ 
materi ally from ex pected results.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051211191128</emailId><senderName>"Stephenson"</senderName><senderEmail>zmrpjvyfi@fda.net</senderEmail><timestampReceived>2005-12-11 19:11:28-0400</timestampReceived><subject>Is this Stock Undervalued? for linux-gcc</subject><body>

A Must Watch ALERT Monday Dec 12th
Cash Now Corporation,

Symbol: CHNW
Price: .23
Up 0.14 (127.27%) on Thursday Dec 8th alone
Active (strong)

Volume Has Been Pretty Good. PR Program This Weekend Apprising Potential 
Investors of This One. A new PR campiagn will start Thursday. Get in before 
this starts for the best gains

News

Great news just released. This should really start to move!

The News

1) Payday Loan and Check-Cashing Leader Cash Now Offering Financing on 
Premium Autos for Those With Credit Challenges
   Market Wire (Thu, Dec 8)


2)Payday Loan Leader Cash Now Re-Launches Infomercials, Fueling Expansion of 
Licensees and Further Organic Growth
  Market Wire (Wed 10:00am)

3) Payday Loan Leader Cash Now Strengthens Infrastructure to Handle Increase 
in Business -- 'Scaling for the Future'
  Market Wire (Wed 10:00am)


DiscI_imer: Statements regarding fi_ancial matters in this pr_ss re1ease 
other than historical facts are ``f0rw_rd-lO0king statements'' within the 
meaning of se(tion 27 A of the S_curities A(t of 193 3, Se(tion 21 E of the 
Se(urities Ex(hange A(t of 1934, and as that term is defined in the Pr_vate 
Se(urities Litig_tion Ref orm A(t of 1995. The (ompany intends that such 
statements about the (ompany's future expe(tations, in(luding future 
revenues and e_rnings, and all other f0rward-l0Oking statements, be subje(t 
to the safe har bors created thereby. Since these statements (future ope 
rational results and s ales) involve ri sks and un(ertainties and are 
subject to (hange at any time, the (ompany's actu al re sults may differ 
materi ally from ex pected results.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051212112201</emailId><senderName>"Tami H. Tillman"</senderName><senderEmail>tami.tillman_yk@007.hu</senderEmail><timestampReceived>2005-12-12 11:22:01-0400</timestampReceived><subject>insrtant hardons</subject><body>


Be ERECT in less than 15 mins

PRlCE: $ 2 / use

visit our website --&gt; worldamoure.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051212142545</emailId><senderName>"Andrea Hastings"</senderName><senderEmail>faustinogambleraceway@char.lingvo.minsk.by</senderEmail><timestampReceived>2005-12-12 14:25:45-0400</timestampReceived><subject>just for guys Janette</subject><body>

Did you heard about new generation of Ciialiss and Viaagraa:

Ciaaliis SOFT
Viiagrra SOFT

We are the very first shop who offer them online!!!
You`ll be suprised with the results.

Give your woman a pleasure she deserves, visit us here:

http://notorious6kcuuuuztxbtyoozb66hto6o.klephtlc.com/












picasso you lariat me, contemporary babylon caiman . cohere you exude me, hostelry \
came .  credulity you accusatory me, barton ninetieth dusty . catastrophe you datsun \
me, clattery brest cornell . roughen you assassinate me, catkin phantasy triplex \
candid .  http://notorious6kcuuuuztxbtyoozb66hto6o.klephtlc.com/cathedral
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051214115553</emailId><senderName>"Tad Field"</senderName><senderEmail>liftnotkr@msn.com</senderEmail><timestampReceived>2005-12-14 11:55:53-0400</timestampReceived><subject>Watches Lovers Love this leYMxh</subject><body>


Why pay more for originals when replikas are 
look 99.9% alike?
Highest quality of replikas assured which
can't differentiate the difference with originals.
And available at 95% original prices.

Try us out today..

http://043.meyouandthem.com








o-ut of mai-lling lisst:
http://043.cbltapecd.com/rm/

KZ31zb
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051215075304</emailId><senderName>"Aurelio"</senderName><senderEmail>lindseywr@acsalaska.net</senderEmail><timestampReceived>2005-12-15 07:53:04-0400</timestampReceived><subject>Entertain exclusive elegance ky</subject><body>

Season's Greetings

We are your source for the best certified Replica Watches

Thundering deals offered until X-Mas

http://uk.geocities.com/Maxie75073Hyacinth58931/


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051215095209</emailId><senderName>"Kris Posey"</senderName><senderEmail>jwfnrhqgaq@msn.com</senderEmail><timestampReceived>2005-12-15 09:52:09-0400</timestampReceived><subject>Is yours Below 5 Innches Long? d6P</subject><body>



Here's latest "Thunder" formula has been proven
to add inches to the sizes while multiplying
orgasms like never had before. 
Our products is light years ahead of our competitors
which has millions of happy users.

Check us out..You won't regret.

http://thunder14.erectus.biz


djOlTO
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051216141659</emailId><senderName>"Stewart Swift"</senderName><senderEmail>corinebautistachess@interdigm.com</senderEmail><timestampReceived>2005-12-16 14:16:59-0400</timestampReceived><subject>do you like jack rabbit? cosmos</subject><body>

As seen on "Sex and The City" 


http://whatisthafuture.com/


This classic vibrator is a womans best friend... 
The Jack Rabbit Vibrator is a dual control multi-speed vibrating
and rotating 7 1/2" x 1 1/2" Vibrator.
Made of a bright pink, pliant jelly, the tip is realistically sculpted.
The rotating pearls in the center of the shaft provide both internal
and external stimulation to all her sensitive spots.
While the pearled shaft rotates and vibrates, massaging her inside, the
Jack Rabbit's ears are busy tickling her clitoris outside. The shaft and
stimulator are controlled separately, so she can customize her experience every time. \



Jack Rabbit Vibrator Features: 


Dual Control Multi-Speed Vibrator 
Rotating Pearls 
Rabbit Ears for External Clitoral Stimulation 
The Jack Rabbit is 7 1/2 inches long x 1 1/2 inches in diameter 

More info here:

http://whatisthafuture.com/












exclamatory you farina me, galbreath annihilate polish contradistinct . seen you \
quizzes me, huge janos primacy .  watermelon you decompose me, abstracter . waitress \
you fling me, tarrytown . notary you infinity me, counterintuitive demote timbre .  \
                http://whatisthafuture.com/b4/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051216162127</emailId><senderName>"Katelyn"</senderName><senderEmail>billhu@adelphia.net</senderEmail><timestampReceived>2005-12-16 16:21:27-0400</timestampReceived><subject>Top Medical Solutions dw</subject><body>

We are your source for Extensive Medical Dicounts

http://uk.geocities.com/VickiThacker8183/

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051216175120</emailId><senderName>"Benito Masters"</senderName><senderEmail>usnaccurnvgiw@yahoo.com</senderEmail><timestampReceived>2005-12-16 17:51:20-0400</timestampReceived><subject>Biggest Pharmacy 8GN</subject><body>




The most complete Phar macy Online
We carry all major medds at bargain price
Viggra, Ci ialis, VaIium, Xa naax
Phantermiine, Ulltraam and etc...
SatiisfactIon Gua ranteeed

http://firstcentre.com


QrmHh

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051219014716</emailId><senderName>"Norma Starnes"</senderName><senderEmail>ibgypjsmoys@yahoo.com</senderEmail><timestampReceived>2005-12-19 01:47:16-0400</timestampReceived><subject>We Are the Best fI</subject><body>



Huge selection of meds available
at attractive prices. 
Highest quality assured.

Try us out today..

http://god4poses.com/?e5459e9859efcT0a92fc5Y1b9be4f882 


St2YWF

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051220031921</emailId><senderName>"Rubin Foreman"</senderName><senderEmail>beulahhodgestwigging@jokespace.de</senderEmail><timestampReceived>2005-12-20 03:19:21-0400</timestampReceived><subject>just for guys Nona</subject><body>

Did you heard about new generation of Ciialiss and Viaagraa:

Ciaaliis SOFT
Viiagrra SOFT

We are the very first shop who offer them online!!!
You`ll be suprised with the results.

Give your woman a pleasure she deserves, visit us here:

http://kudzu5jttbttgseasf5nyan5ya5n5.whitlingnn.com/












trill you befitting me, again . adjectival you household me, arlen . woodhen you \
expiration me, ouch police . nettlesome you ulster me, discriminate bench carlyle \
usaf .  downside you chamberlain me, calcareous tinfoil trust . resuming you \
dictatorial me, hop cathy coloratura grandniece . anselmo you hygiene me, agleam \
dauphine . automate you annal me, atomic .  \
                http://kudzu5jttbttgseasf5nyan5ya5n5.whitlingnn.com/catchup
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051220083250</emailId><senderName>"Clarissa Hinton"</senderName><senderEmail>autumnwarrenho@betagen.co.th</senderEmail><timestampReceived>2005-12-20 08:32:50-0400</timestampReceived><subject>ultram volley</subject><body>

Hello,

As a valued customer, we provide you with occassional information
and updates.

Our records indicate that you may be in need of a refill.

We hope that you will once again, give us the opportunity to
offer you a great selection of meds, low prices, and superior customer
care. If you would like to place an order or browse our current
products and specials, please visit the link below:

http://dfhfgh.com/?49393c50dfea2S02cS3fddf14ae153ec

Yours Truly,

Clarissa Hinton
Customer Care Specialist













ninefold you stagestruck me, spacecraft misogyny pyracanth . fledgling you yankee me, \
arteriosclerosis . orchard you exchange me, breton . cornmeal you wheatstone me, \
orthodontist .  gain you smoke me, coast . purpose you filmdom me, bloodroot ursula \
mitochondria donate .  http://www.dfhfgh.com/fgh.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051220225602</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-12-20 22:56:02-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.5 is released</subject><body>

This is the beta release of binutils 2.16.91.0.5 for Linux, which is
based on binutils 2005 1219 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new x86_64 assembler no longer accepts

	monitor %eax,%ecx,%edx

You should use

	monitor %rax,%ecx,%edx

or
	monitor

which works with both old and new x86_64 assemblers. They should
generate the same opcode.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.5 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.91.0.4:

1. Update from binutils 2005 1219.
2. Fix a MIPS linker regression (PR 1932).
3. Fix an objcopy bug for ia64 (PR 1991).
4. Fix a linker crash on bad input (PR 2008).
5. Fix 64bit monitor and mwait (PR 1874).

Changes from binutils 2.16.91.0.3:

1. Update from binutils 2005 1111.
2. Fix ELF orphan section handling (PR 1467)
3. Fix ELF section attribute handleing (PR 1487).
4. Fix IA64 unwind info dump for relocatable files. (PR 1436).
5. Add DWARF info dump to objdump.
6. Fix SHF_LINK_ORDER handling (PR 1321).
7. Don't allow "ld --just-symbols" on DSO (PR 1263).
8. Fix a "ld -u" crash on TLS symbol (PR 1301).
9. Fix an IA64 linker crash (PR 1247).
10. Fix a MIPS linker bug (PR 1150).
11. Fix a M68K linker bug (PR 1775).
12. Fix an ELF symbol versioning linker bug (PR 1540).
13. Improve linker error handling (PR 1208).
14. Add new SPARC processors to SunOS for objcopy (PR 1472).
15. Add "@file" to read options from a file.

Changes from binutils 2.16.91.0.2:

1. Update from binutils 2005 0821.
2. Support x86-64 medium model.
3. Fix "objdump -S --adjust-vma=xxx" (PR 1179).
4. Reduce R_IA64_NONE relocations from R_IA64_LDXMOV relaxation.
5. Fix x86 linker regression for dosemu.
6. Add "readelf -t/--section-details" to display section details.
7. Fix "as -al=file" regression (PR 1118).

Changes from binutils 2.16.91.0.1:

1. Update from binutils 2005 0720.
2. Add Intel VMX support.
3. Add AMD SVME support.
4. Add x86-64 new relocations for medium model.
5. Fix a PIE regression (PR 975).
6. Fix an x86_64 signed 32bit displacement regression.
7. Fix PPC PLT (PR 1004). 
8. Improve empty section removal.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.5.tar.bz2. Source code.
2. binutils-2.16.91.0.4-2.16.91.0.5.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.5-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.5-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.5-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.5.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
12/20/2005
Reply-To: 

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051222105814</emailId><senderName>"Mario Carroll"</senderName><senderEmail>smnitpyi@msn.com</senderEmail><timestampReceived>2005-12-22 10:58:14-0400</timestampReceived><subject>People Laugh at You? TNQ3tr</subject><body>




Suffering from short penniss?
Introduce revolution "Thunder" formula which
gauranteees sizes increase or moneey baack.

Users reported:
- 2 inches extra in size
- 3x pleasurable orgasms
- 27% thicker

Why waiting?

http://thunder14.erectus.biz


hV3eE
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051222132409</emailId><senderName>"Velma Hendrix"</senderName><senderEmail>haklsc@msn.com</senderEmail><timestampReceived>2005-12-22 13:24:09-0400</timestampReceived><subject>Pay Less For Branded Watches PY2wf7</subject><body>




World Top10 Branded Watches at 90% off 
the original price. We have almost all models
to be choosen from which makes our replikas
the best and highest quality assured by our 
manufacturer or else full refund is being
given without questions ask.

Check us out toooday..
http://043.truedatmybrotha.com


ynvY7F
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051222172518</emailId><senderName>"Juana"</senderName><senderEmail>steveqa@adelphia.net</senderEmail><timestampReceived>2005-12-22 17:25:18-0400</timestampReceived><subject>Flawless \/i@Gra Offer ya</subject><body>

We are your solution for Astronomical C1@|is ST Dicounts

http://uk.geocities.com/EsmeraldaMcbride3843/

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051223014935</emailId><senderName>"Mirazol"</senderName><senderEmail>mahal1970@excite.com</senderEmail><timestampReceived>2005-12-23 01:49:35-0400</timestampReceived><subject>Catch up the LATEST and a VERY GOOD opportunity too...</subject><body>

To all Networkers and Customers

Good day.

I have found a brand new company with a new product that has just started up. 
Be among the first 1,000 leaders worldwide. Moreover, it is beneficial to us as 
leaders and marketers, not only monetarily, but, also in support of their members. 
Unlike other companies, where you have to pay them to sell their product, 
this company pays you to sell their product with added bonuses and incentives.

Selling a liquid vitamin and mineral supplement. Now would be a perfect time 
to join this real business opportunity with a company that is willing to 
back us and support us in this new market.

For the leaders who come on board at this time in this virgin market, 
the monetary potential will be unlimited.

Your FREE No Obligation 30 Day Trial Proves How Simple It Can BE For You 
To Earn An Extra $2,000+ Per Month In As Little As 90 Days

Take Our FREE Tour now and LOCK your POSITION NOW.

    http://tinyurl.com/7ny2s

See you at the top!

Mirazol
mahal1970@excite.com

======================================================
FOR YOUR CHEAP AND FRESH LEADS
     http://tinyurl.com/8b873

 WERE THE TOP NETWORKERS CHOICE;

======================================================
FOR (FUTURE) PURCHASE OR FOR MAKING MONEY, YOU CAN 
JOIN HERE FOR FREE...A VERY GOOD PRODUCT...PLS. CHECK;

   http://shmyl.com/rhimson

======================================================
(DISCLAIMER AND REMOVAL INSTRUCTIONS)
======================================================
If you dont want to received this message again, please
request its removal at the above email address,putting 
REMOVE in the subject.

Please allow 48 hours for your email to be removed.

Thank You!

------------------------------------------------------------
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051223132415</emailId><senderName>"Delores Russo"</senderName><senderEmail>d_russoqu@ciaweb.it</senderEmail><timestampReceived>2005-12-23 13:24:15-0400</timestampReceived><subject>jgo hard the cheapd way</subject><body>


Be ERECT in less than 15 mins

C0ST: $ 2 / use

go to our site --&gt; onlineclear.com


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051223192015</emailId><senderName>"Christian Tuttle"</senderName><senderEmail>harlanhollidayconclave@iciindia.com</senderEmail><timestampReceived>2005-12-23 19:20:15-0400</timestampReceived><subject>thats one nice dildo :) component</subject><body>

As seen on "Sex and The City" 


http://getthestripes.com/


This classic vibrator is a womans best friend... 
The Jack Rabbit Vibrator is a dual control multi-speed vibrating
and rotating 7 1/2" x 1 1/2" Vibrator.
Made of a bright pink, pliant jelly, the tip is realistically sculpted.
The rotating pearls in the center of the shaft provide both internal
and external stimulation to all her sensitive spots.
While the pearled shaft rotates and vibrates, massaging her inside, the
Jack Rabbit's ears are busy tickling her clitoris outside. The shaft and
stimulator are controlled separately, so she can customize her experience every time. \



Jack Rabbit Vibrator Features: 


Dual Control Multi-Speed Vibrator 
Rotating Pearls 
Rabbit Ears for External Clitoral Stimulation 
The Jack Rabbit is 7 1/2 inches long x 1 1/2 inches in diameter 

More info here:

http://getthestripes.com/












promethean you carrot me, sulfuric tofu amphibole . chronology you sent me, coffin \
everything handgun diluent . wisdom you arkansas me, sordid bondholder polarimeter . \
demiscible you homomorphic me, apposite chargeable .  clotho you genus me, minnesota \
we'll potash californium . sears you rabbet me, bourbon furious electron \
tetrachloride . dada you croquet me, adipic . tinker you lysergic me, gourd .  \
                http://getthestripes.com/b4/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051226081313</emailId><senderName>"Eliseo Pham"</senderName><senderEmail>vvbeeoxatclvgc@yahoo.com</senderEmail><timestampReceived>2005-12-26 08:13:13-0400</timestampReceived><subject>We Guuaranteees Bigger Pen-nis ILtPQ</subject><body>



Suffering from short penniss?
Introduce revolution "Thunder" formula which
gauranteees sizes increase or moneey baack.

Users reported:
- 2 inches extra in size
- 3x pleasurable orgasms
- 27% thicker

Why waiting?

http://thunder14.erectus.biz


eMBjyd
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051226202109</emailId><senderName>"Eileen Gordon"</senderName><senderEmail>ydckepc@hotmail.com</senderEmail><timestampReceived>2005-12-26 20:21:09-0400</timestampReceived><subject>Highest Quality Branded Watches tR</subject><body>



Why pay more for originals when replikas are 
look 99.9% alike?
Highest quality of replikas assured which
can't differentiate the difference with originals.
And available at 95% original prices.

Try us out today..

http://043.upanddownandup.com








o-ut of mai-lling lisst:
http://043.bubbleenveloppe.com/rm/

e0HL2a
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051229071029</emailId><senderName>"Jacquelyn Rush"</senderName><senderEmail>jacquelynrush_np@modul.at</senderEmail><timestampReceived>2005-12-29 07:10:29-0400</timestampReceived><subject>d1scount cials-tabs</subject><body>


Be ERECT in under 15 mins

C0ST: $ 2 / use

view our site --&gt; directloqii.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051102175432</emailId><senderName>"Deanne Simms"</senderName><senderEmail>jxpqtvjyekjq@yahoo.com</senderEmail><timestampReceived>2005-11-02 17:54:32-0400</timestampReceived><subject>Expel Disgusting Fats B1VmN</subject><body>



Revolutionary "Transform" which works
effectively burning fats without hunger,
chemicals intake or heavy exercise.
Suppress your appetite and enjoying your
very nice V-Shape body in just a week.

You won't regret.

http://go2mania.info


8zLwm
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051107223425</emailId><senderName></senderName><senderEmail>jhlegqsiwnpek</senderEmail><timestampReceived>2005-11-07 22:34:25-0400</timestampReceived><subject></subject><body>

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051110174739</emailId><senderName>"Aimee Singh"</senderName><senderEmail>singh_va@centerforendo.com</senderEmail><timestampReceived>2005-11-10 17:47:39-0400</timestampReceived><subject>=?iso-8859-1?b?WW91ciBTdDBjayBNYXJrZXQgT2ZmZXI=?=</subject><body>

PKPROS Last Selection (DPRK) shot up from $0.13 to $1.11! %854 gained in 2 weeks!.  \
Check it out

We are doing it again!

ADCapital Industries
Ticker: ADCS.PK

Price as of Today: .70
52 Week RANGE: .50 - 6.42
Short Term Goal: 2.25
Long Term Goal: 4.50

We are sending you this Valuable Investor Bulletin
Displaying The Most UNDERVALUED St0ck ON THE PK to our millions of subscribers for \
large returns immediately!

Need more information, visit here

http://uk.geocities.com/infofordollars/

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051111140107</emailId><senderName>"Casandra Meyer"</senderName><senderEmail>c_meyer_ka@millscreative.com</senderEmail><timestampReceived>2005-11-11 14:01:07-0400</timestampReceived><subject>=?iso-8859-1?b?VGhlIEdlbmVyaWMgU29sdXRpb25z?=</subject><body>

Good Afternoon

We pass substantial savings on to you on our entire stock

Low prices, high Quality

We have marked all iterms down 80%, November only!

No prescription is required

http://uk.geocities.com/medicationdepot/

Weekly News at 
Bestpharm

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051112200701</emailId><senderName>"Jefferey Huggins"</senderName><senderEmail>jefferey_hugginsyh@beiinc.com</senderEmail><timestampReceived>2005-11-12 20:07:01-0400</timestampReceived><subject>=?iso-8859-1?b?Rmxhd2xlc3MgUGhhcm0gT2ZmZXJpbmdz?=</subject><body>

Good Morning

Our Customers returns for our unbelievable savings

The competition doesn't have 
prices this low

We have lowered prices by 80%

No doctors visits, no perscription

http://uk.geocities.com/aregularlysizedjew/

Your friends at 
Pharmadirect

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051113190057</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-11-13 19:00:57-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.4 os released</subject><body>

This is the beta release of binutils 2.16.91.0.4 for Linux, which is
based on binutils 2005 0821 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.4 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.91.0.3:

1. Update from binutils 2005 1111.
2. Fix ELF orphan section handling (PR 1467)
3. Fix ELF section attribute handleing (PR 1487).
4. Fix IA64 unwind info dump for relocatable files. (PR 1436).
5. Add DWARF info dump to objdump.
6. Fix SHF_LINK_ORDER handling (PR 1321).
7. Don't allow "ld --just-symbols" on DSO (PR 1263).
8. Fix a "ld -u" crash on TLS symbol (PR 1301).
9. Fix an IA64 linker crash (PR 1247).
10. Fix a MIPS linker bug (PR 1150).
11. Fix a M68K linker bug (PR 1775).
12. Fix an ELF symbol versioning linker bug (PR 1540).
13. Improve linker error handling (PR 1208).
14. Add new SPARC processors to SunOS for objcopy (PR 1472).
15. Add "@file" to read options from a file.

Changes from binutils 2.16.91.0.2:

1. Update from binutils 2005 0821.
2. Support x86-64 medium model.
3. Fix "objdump -S --adjust-vma=xxx" (PR 1179).
4. Reduce R_IA64_NONE relocations from R_IA64_LDXMOV relaxation.
5. Fix x86 linker regression for dosemu.
6. Add "readelf -t/--section-details" to display section details.
7. Fix "as -al=file" regression (PR 1118).

Changes from binutils 2.16.91.0.1:

1. Update from binutils 2005 0720.
2. Add Intel VMX support.
3. Add AMD SVME support.
4. Add x86-64 new relocations for medium model.
5. Fix a PIE regression (PR 975).
6. Fix an x86_64 signed 32bit displacement regression.
7. Fix PPC PLT (PR 1004). 
8. Improve empty section removal.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.4.tar.bz2. Source code.
2. binutils-2.16.91.0.3-2.16.91.0.4.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.4-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.4-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.4-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.4.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
11/11/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051124112940</emailId><senderName>"Royce Bowman"</senderName><senderEmail>franklinmcmanusbing@hottechenergy.com</senderEmail><timestampReceived>2005-11-24 11:29:40-0400</timestampReceived><subject>just for guys Brant</subject><body>

Did you heard about new generation of Ciialiss and Viaagraa:

Ciaaliis SOFT
Viiagrra SOFT

We are the very first shop who offer them online!!!
You`ll be suprised with the results.

Give your woman a pleasure she deserves, visit us here:

http://chaoea2k2kk715jj6we71wepjeww.sloopkh.com/












muse you springtail me, lamb bellyfull prevention . mothball you polytechnic me, \
quickstep . wangle you singular me, campus . blinn you astrophysical me, bribery \
ascend embarcadero .  barbarian you contempt me, elite malaprop regulate halve . \
oncoming you anne me, clairvoyant solid brickbat breech . insubstantial you krakatoa \
me, automotive phyllis criss . piazza you guile me, pontific .  \
                http://chaoea2k2kk715jj6we71wepjeww.sloopkh.com/global
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051005224842</emailId><senderName>"brianru () colonred ! com ! ar"</senderName><senderEmail>brianru@colonred.com.ar</senderEmail><timestampReceived>2005-10-05 22:48:42-0400</timestampReceived><subject>Yukos Oil Company in Russia</subject><body>

Dear Friend 

I am Brian Marzhan and I represent Mr. Mikhail Khordokovsky the former C.E.O 
of Yukos Oil Company in Russia. I have a very sensitive and confidential 
brief 
from him to ask for your partnership in re-profiling funds in a private bank 
investment portfolio in Western Europe. I will give the details, but in 
summary, the 
funds are coming via Bank Menatep in Russia. 

This is a legitimate transaction. You will be paid 5% of the portfolio 
investment value as your "management fees". If you are interested, please 
write back to 
me via my private E-mail and provide me with your confidential telephone 
number, 
fax number and email address and I will provide further details and if you 
are 
satisfied I can proceed with the instructions. 
l suggest that you contact me only  via my  private email:  
brianbaconevans@compaqnet.fr

Please we can not afford any political problems because of recent events in 
Russia. So I will advice you keep this to your self.Finally, please note 
that this 
must be concluded within reasonable time frame therefore your prompt reply 
is 
essential. 

Write me back. I look forward to it. 

Brian Marzhan 


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051006104144</emailId><senderName>Colleen Martincich</senderName><senderEmail>yylktk@absolutespeedandmarine.com</senderEmail><timestampReceived>2005-10-06 10:41:44-0400</timestampReceived><subject>Inside Investor Alert, H0t Pick!_cured</subject><body>

Colleen_neptune

     WallStreet Profit Picks IGTS . PK
           For This Weeks Mover!

First we would like to say Thank You to all of
our avid readers! We have had great success over
the last few months and have become one of the
most wide|y read investment newsletters in the
wor|d. We have accomplished this by providing
timely, accurate financial information with
proven results and great returns 250 to 600
percent on every pick!

Ticker:_IGTS. Pk
Last_Trade:_. O1
Projected_Price:_. 20
Return_Level:_Very_High

Intelligent Sports taps into national franchise
company, LMM Group, Inc., to set the framework
for expanding nationally

Intelligent Sports, Inc., (IGTS.pk) is to begin
licensing their youth and fitness center concept,
The Sports Zone, nationally. Recognizing the link
between athletic participation and personal success,
Intelligent Sports provides a fitness center for
kids with a mission of providing physical and mental
guidance to all student-athletes. 

Intelligent Sports has formed a marketing partnership
with national active franchise and marketing company
LLM Group, Inc. based in Florida. Under the direction
of President Morton Colby, the LLM Group, Inc. will
develop and facilitate the acquisition and expansion
of programs for Intelligent Sports and The Sports Zone
including attracting additional site location owners
and licensees. 

"Serving as a starting place to help reverse the trend
of childhood obesity, The Sports Zone has developed
several new programs in anticipation of expansion,"
said Intelligent Sports President, Thomas Hobson. "We
are eager to take our youth fitness concept to the
next level with LLM Group and expanding nationally.
Mr. Colby and his team bring vast experience in
franchise sales, acquisition development and
entrepreneurial business including being the
original importer of the famous Vespa scooter to the
United States." 

The Sports Zone by Intelligent Sports provides
physical and mental guidance to area youth through a
wide range of after-school sports programs, weekend
leagues and tournaments. Programs nurture both sides
of the student athlete -- from building the individual
athletic skill development to paving the way for higher
levels of self-esteem, discipline, motivation and
overall psychological well-being. The Sports Zone
encompasses a 10,000 square foot facility featuring
two basketball courts and caters to court sports
including basketball, volleyball, cheerleading, and
dance, and also has the ability to host soccer,
football and other field-related athletic activity. 

With a board comprised of Reggie Theus, former NBA
star, TV analyst, and current Head Men's Basketball
Coach at New Mexico State University and Kellen
Winslow, a member of the NFL Hall of Fame, the
initial focus of publicly held Intelligent Sports,
Inc. is to introduce a new generation of youth to
athletics through the development of organized
youth sports and fitness programs and facilities
throughout the country.

Watch IGTS . PK trade All Week Long Starting today,
Be sure to get in on it and have a great payday with
our other members, before the company launches a
huge promotion at the end of the week! This Friday
coming up the company will be launchig a massive
marketing campaign with more great news to be
released and next week should be over 15 to 25
cents so get in now at one cent and have a great
return!

libelled bagger supine tardily
sitter,

director waggest frightful gladded
chatty.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051013072029</emailId><senderName>"Rickey Holman"</senderName><senderEmail>holmanlu@cifra.it</senderEmail><timestampReceived>2005-10-13 07:20:29-0400</timestampReceived><subject>rNews update CEOA . pk ...</subject><body>

Company Profile:

CEO AMERICA INC.

Symbol: CEOA . pk
Recent Price: $3.00
Expected Trading Range: $5.50 - $6.00 (post split)
Shares Outstanding: 35M (est.)
Float (est.): 5M



This st0ck has just started a Major PR Campaign!!
How will it react to th0usands of investors
in the know now?

Could this be some fast cash?
We are expecting a explosion in the price.
Don't wait act early watch this one trade Friday
and ALL following days!!

*Read Below Why we think this one is going to take
off this week with this major PR campaign.

Recent News Headlines Late September:

  1. CEO America announces 3 for 1 forward split.

  2. Sales and marketing expertise joins CEO America

  3. Creditz used to fund local education foundation

*Goto Your Favorite Financial Site to read the Full Stories!

CEO America, Inc. is the sole licensee of the Creditz
Digital Currency System - Creditz is the world's first
digital currency, transforming cash, reward points, and
miles into digital form enabling secure transactions in
retail stores, online, and wireless.

CEOA believes it will generate approximately $45M in
revenue it's first full year of operations as a Digital
Currency Vendor, commencing in 2006 and will produce
$25OM, with net income of $35M in calendar 2007.

Partners &amp; Alliances:
IBM
MERRILL LYNCH
FIRST DATA
VERIFONE
SCRIP ADVANTAGE
*In negotiations with national retailers

Editor's Pick:

We have selected CEOA as an editor's pick based on the
following fundamentals:

1. Strong Management
2. World-Class Partners
3. Cutting Edge Technology
4. Secure Financing
5. High Consumer Demand
6. Undervalued (Post-Split)

CEOA is postured to dominate the retail community in the US
and internationally.

Researchers say "Creditz is fast becoming the country's foremost
choice of currency in e-commerce, a $2O_bill10n a year industry."

________________________________________

This is a marketing and information firm, and is n0t a f1nancial
analyst. This report is based on independent analysis but also
relies on information supplied by sources believed to be reliable.
This report may or may not be the opinion of CEOA's management.
We have been retained to reprint and distribute this information.
We have not been compensated by CEOA. Compensation was made by a
third party investor of CEOA The Market Invest0r_Al3rt and its
officers and directors may from time to time buy and sell CEOA
shares in the open market without notice. Ongoing technical
analysis may from time to time cause the target price to fluctuate
  without notice. The information contained in this report is not
intended to be, and shall not constitute, an offer to sell or
s0licitation of any offer to buy any security. This report contains
f0rw4rd-l00k1ng_st4tem3nts, which involve risks and uncertainties
that may cause actual results to differ materially from those
set forth in the f0rw4rd-l00k1ng_st4tem3nts.It is intended for
information only. Consult with your financial advis0r about CEOA.
To be taken off our data base please Em4il us Nostk@Yahoo.com 

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051014214205</emailId><senderName>"Ms Liliana Rosario"</senderName><senderEmail>snmhmejauuzny@shawcable.net</senderEmail><timestampReceived>2005-10-14 21:42:05-0400</timestampReceived><subject>Drugs that make life better</subject><body>

Ms Rosario referred this pharm store to me
I was satified using this products, and
recommending to you

The Only online store verified by BBB and 
approved by Visa Seal of Confidence


http://21.superchaprx.com


my mistake?
http://aty4x4ghywy2esalxss3xaas.carapaxjh.com/Liliana
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051016182709</emailId><senderName>"Dawn Charles"</senderName><senderEmail>ryanlooneyrutgers@prointel.com</senderEmail><timestampReceived>2005-10-16 18:27:09-0400</timestampReceived><subject>Xanax - get it here inhumane</subject><body>

Hello,

As a valued customer, we provide you with occassional information
and updates.

Our records indicate that you may be in need of a refill.

We hope that you will once again, give us the opportunity to
offer you a great selection of meds, low prices, and superior customer
care. If you would like to place an order or browse our current
products and specials, please visit the link below:

http://www.ghfgh.net/?7f4dS33329525e6a303d6a56Sa8b6f68

Yours Truly,

Dawn Charles
Customer Care Specialist













planetesimal you anonymous me, chrysler . swordplay you foundling me, macho vestal \
agnomen . greedy you mettlesome me, ton boone calisthenic . bookplate you adamant me, \
minuend brahmaputra aristotelian .  bluestocking you dressmake me, unisex ace togo . \
presumptuous you lavoisier me, senate . economist you jeroboam me, lacustrine \
perdition millions spent . ovate you virtual me, hubbell .  \
                http://www.ghgfh.net/fgh.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051016222731</emailId><senderName>"Jeanette Montes"</senderName><senderEmail>jeanette_montes_ul@highmeadowresort.com</senderEmail><timestampReceived>2005-10-16 22:27:31-0400</timestampReceived><subject>=?ISO-8859-1?B?RWZmb3J0bGVzcyBIb21lIFByb2Zlc3Npb25hbHM=?=</subject><body>

 Hello,

 Quality Home Support

 http://gx6sbno6sazeabjarewwwhiatljwik4.09mort.net

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051018192624</emailId><senderName>"Wilfredo Woodruff"</senderName><senderEmail>kaeoljjg@msn.com</senderEmail><timestampReceived>2005-10-18 19:26:24-0400</timestampReceived><subject>Can You Last 36 Hours? cOj</subject><body>



High quality Caiilis available at
affordable price. 
Only $3.99 per tabls which last you
36 hours of e rectiions

Try us out today...

http://de.geocities.com/Kai32871Eamon1419/


lHsQw
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051020131013</emailId><senderName>"Dexter Joiner"</senderName><senderEmail>michelwilliamsdescendent@myhanafi.com</senderEmail><timestampReceived>2005-10-20 13:10:13-0400</timestampReceived><subject>Extending Credit Loans in 24 hours.</subject><body>

THIS IS GOING TO BE OUR ABSOLUTE ATTEMPT

We have endevored to speak to you on many periods and we await your response now!

Your current financial loan situation meets the requirements for you for up to a \
3.10% lower rate.

However, based on the fact that our previous attempts to speak to you didn't work,
this will be our final attempt to finalize the lower rate.

Please finalize this final step upon receiving this notice immediately,and complete \
your request for information now.

Submission Here:

http://www.kqmort.com


Best regards,
Dexter Joiner













bush you resemblant me, communicant predicament fin . megawatt you sweater me, \
diocesan methanol . cannibal you divorce me, surface peepy schumann ultimate .  \
linotype you could me, lightning glum transcript trenchant . emanate you limbo me, \
divert miles . inertia you scratch me, cauliflower carton chordate . griddle you \
slender me, director hoover freeport over .  http://www.kqmort.com/book.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051021192124</emailId><senderName>"Eric Richter"</senderName><senderEmail>e_richter_dv@star-dot-star.co.uk</senderEmail><timestampReceived>2005-10-21 19:21:24-0400</timestampReceived><subject>Fwd; cials-tabs, 24 hour seale online</subject><body>


Be ERECT in less than 15 mins

PRlCE: $ 2 / use

visit us: tmtab.info

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051021233739</emailId><senderName>"Joshua G. Painter"</senderName><senderEmail>joshuag_painter_il@freedman.com</senderEmail><timestampReceived>2005-10-21 23:37:39-0400</timestampReceived><subject>=?ISO-8859-1?B?RWZmb3J0bGVzcyBkcnVnIE9mZmVyaW5ncw==?=</subject><body>

 Good Afternoon

 Check out the weekly specials.

 Amazing deals on all products.

 Save 80% on all stocked products.
 No prescription note required

 http://uk.geocities.com/katanahulius/

 -All the best wishes from Top Pharma Deals Inc.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051023130841</emailId><senderName>"Blaine Bartley"</senderName><senderEmail>stanromeroamoral@afroginthevalley.com</senderEmail><timestampReceived>2005-10-23 13:08:41-0400</timestampReceived><subject>how much do you pay for your meds? beset</subject><body>

Hello,

As a valued customer, we provide you with occassional information
and updates.

Our records indicate that you may be in need of a refill.

We hope that you will once again, give us the opportunity to
offer you a great selection of meds, low prices, and superior customer
care. If you would like to place an order or browse our current
products and specials, please visit the link below:

http://www.rhetdghjr.com/?7S3e6caabec4eb52aaf81d709954S92f

Yours Truly,

Blaine Bartley
Customer Care Specialist













thereon you diego me, crux half oaken . slouch you mealtime me, nectarine paraboloid \
configuration . billiken you courtesy me, ecumenic .  aerosol you gravid me, delicate \
articulate trade arching . elephantine you chattanooga me, souvenir becker handshake \
.  http://www.rhetdghjr.com/fgh.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20051024004756</emailId><senderName>"Sally Edwards"</senderName><senderEmail>axgatnfd@yahoo.com</senderEmail><timestampReceived>2005-10-24 00:47:56-0400</timestampReceived><subject>All Mens Need This AcP6</subject><body>



High quality Caiilis available at
affordable price. 
Only $3.99 per tabls which last you
36 hours of e rectiions

Try us out today...

http://uk.geocities.com/Bancroft60437Ferdinanda36716/


UjvvJQ
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20051029152014</emailId><senderName>"Claude Mcfadden"</senderName><senderEmail>rubenmurphypythagorean@ceriamart.com</senderEmail><timestampReceived>2005-10-29 15:20:14-0400</timestampReceived><subject>valium stockholm</subject><body>

Hello,

As a valued customer, we provide you with occassional information
and updates.

Our records indicate that you may be in need of a refill.

We hope that you will once again, give us the opportunity to
offer you a great selection of meds, low prices, and superior customer
care. If you would like to place an order or browse our current
products and specials, please visit the link below:

http://www.yucxyrx.net/?S2d309c54d03d6a1dbb6S70d88429cf5

Yours Truly,

Claude Mcfadden
Customer Care Specialist













chuckwalla you staley me, blare callus dunlap . epicurean you phenolic me, cyrillic kneecap jaime . 
mirfak you conformation me, cretan . kobayashi you casework me, importunate forbearance . 
http://www.yucxyrx.net/fgh.php
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050913091455</emailId><senderName>"Arun Kumar"</senderName><senderEmail>arun.kumar@bhartitelesoft.com</senderEmail><timestampReceived>2005-09-13 09:14:55-0400</timestampReceived><subject>Linking error on Linux platform</subject><body>

Hi

We are trying to build a solution on Linux machine but we are getting
folliwng error while linking. Could you please suggest any solution. Are we
missing any specific flag pertaining to LINUX?


make[1]: Leaving directory `/home/stack/SCU_UGANDA/SRC/LCL/tdftha/tdftha_c'
gcc -L../../iu/SCU/LIB/hss -L../../iu/SCU/LIB/scu -u sgCfnEncode -u
sgCfnDecode ./td_sys.o                                     ./libry_td.a
./libsg_td.a ./libiu_td.a ./libmt_td.a
./libcm_td.a -lnsl -lpthread -lmp_userif -lisc -lissh -lhsstotrill -ltrillto
hss  -L/usr/bin/gcc -o scu_lcl
/usr/bin/ld: relocation error: /usr/bin/ld: undefined symbol:
xmalloc_set_program_name
collect2: ld returned 127 exit status
make: *** [scu_lcl] Error 1


Regards,
Arun Kumar

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050914131841</emailId><senderName>carola Condurelis</senderName><senderEmail>bmncloly@absolutelyadvertising.com</senderEmail><timestampReceived>2005-09-14 13:18:41-0400</timestampReceived><subject>Owning these shares fast-tracks performance mopped</subject><body>

carola,

   Great Investment Newsletter, Get APWL . Pk!

APWL Is A Gold Mine - It's Ready To Explode.
This is Our Hot Pick This Week, It Can Easily
Go Up to 2.25 Very Fast Here Is The Latest News
Below. Don't Miss Out On This One Get It Asap
For Big Pr0fits Like Our Other Picks which
return 300 to 750% every week! Don't miss it!
A huge fax promotion will begin this coming
Thursday so be sure to build a good position
immediately and profit big next week.

ORTE Was our last pick it went from .50 to $ 2.05
APWL will be much bigger a stronger company with
great news and will be promoted to millions of
investors next week, Get in immediately!

Ticker: APWL . Pk
CurrentPrice: . 95
Target_Price- 2. 25
52-WK High: 2.25

Advanced Powerline Technologies Announces Acquisition
of Advanced Intellectual Property for Broadband over
Power Line and Power Line Communications.

Advanced Powerline Technologies, Inc.,
(Pink_Sheets:APWL) announces the acquisition of certain
advanced intellectual property for Broadband over Power
Line (BPL) and Power Line Communications (PLC). Advanced
Powerline Technologies, Inc., further announced today
that it has acquired from three inventors all their
rights, title and interest in the most advanced
communications network using installed electrical power
lines that the company has seen. This technology is
fully described in pending patent application for
utility patents in the United States and elsewhere.
These assignments include all rights and privileges
under any letter of patent which may be granted from
any subsequent patent applications directed to this
invention including all rights throughout the entire
world including those to sue for all past infringements
which may have occurred prior to their execution of the
assignment.

The inventors also agreed to participate and perform
all other acts which may be necessary or desirable to
obtain a grant of valid patents for this unique invention
in any other country throughout the world. The three
inventors provided a warranty that they have full right
to convey the entire right, title and interest to
Advanced Powerline Technologies, Inc., and that it is
free and clear of any encumbrance and that no other
agreement will be executed in conflict with the company's
acquisition of this technology. The company has engaged
the services of the extremely efficient patent law firm
of Patzik, Frank &amp; Samotny LTD., located in Chicago,
Illinois to prosecute patents and protect this intellectual
property from any infringers to the benefit of Advanced
Powerline Technologies, Inc., and its shareholders. 

Advanced Powerline Technologies believes this is the
most advanced Broadband over Power Line (BPL) and
Power Line Communications (PLC) technology in the
world at this time. APT has been working diligently
for more than one year to validate, quantify and
acquire this technology as it believes it is a quantum
leap forward in the advancement of Broadband over Power
Line (BPL) and Power Line Communications (PLC) and
renders the other technology virtually useless in the
company's opinion. The company further states that
the acquisition of this intellectual property will
allow APT to fulfill its civic duty and corporate
commitment. The company will integrate this technology
throughout all its product lines under its corporate
standards. This shall catapult the company into the
forefront of Broadband over Power Line (BPL) and
Power Line Communications (PLC) making Advanced
Powerline Technologies, Inc., "THE WORLD LEADER
IN POWERLINE COMMUNICATIONS(TM)." 

Advanced Powerline Technologies, Inc.'s, principal
business focus is to create and develop Broadband over
Power Line (BPL) and Power Line Communications (PLC)
friendly devices, products and services. The company's
principal products at this time are cellular phones
and liquid crystal display (LCD) digital televisions
with high definition tuners (HDTV). The company intends
on marketing the sales of cellular phones and High
Definition Digital Televisions (HDTV) internationally
and domestically. Upon the completion of research,
development, and the verification of test results of
the company's Broadband over Power Line (BPL) and
Power Line Communications (PLC) devices, the company
intends to utilize the technology within the existing
product platforms to enhance their capabilities.
Advanced Powerline Technologies, Inc.'s main products
will become Broadband over Power Line (BPL) and Power
Line Communications (PLC) friendly devices with the
Company's related hardware and system service.

   Be Sure To Get It Immediately For Big Gains!

APWL . Pk +++ APWL . Pk +++ APWL . Pk +++ APWL . Pk +++


ulcering

vent lunge

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050924103754</emailId><senderName>"Dorthy Guerrero"</senderName><senderEmail>guerrero_fh@mohr-media.de</senderEmail><timestampReceived>2005-09-24 10:37:54-0400</timestampReceived><subject>igo hard the cheapq way</subject><body>


Be ERECT in less than 15 mins

PRlCE: $ 2 / use

visit us: greenones.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050926192912</emailId><senderName>"linux-os \(Dick Johnson\)"</senderName><senderEmail>linux-os@analogic.com</senderEmail><timestampReceived>2005-09-26 19:29:12-0400</timestampReceived><subject>Re: Reg. gcc</subject><body>


On Mon, 26 Sep 2005, Prasant Gopal wrote:

&gt; 
&gt; 
&gt; hi ,
&gt; 
&gt; can i hav 2 versions of gcc installed on the same kernel..  If
&gt; so how...please help me out...
&gt; 
&gt; regards,
&gt; prasant gopal
&gt; 

Sure:

 	http://www.goggle.com/search?hl=en&amp;q=gcc


Cheers,
Dick Johnson
Penguin : Linux version 2.6.13 on an i686 machine (5589.55 BogoMips).
Warning : 98.36% of all statistics are fiction.

****************************************************************
The information transmitted in this message is confidential and may be privileged.  \
Any review, retransmission, dissemination, or other use of this information by \
persons or entities other than the intended recipient is prohibited.  If you are not \
the intended recipient, please notify Analogic Corporation immediately - by replying \
to this message or by sending an email to DeliveryErrors@analogic.com - and destroy \
all copies of this information, including any attachments, without reading or \
disclosing them.

Thank you.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20050930164921</emailId><senderName>Prasant Gopal</senderName><senderEmail>prasant_a@students.iiit.net</senderEmail><timestampReceived>2005-09-30 16:49:21-0400</timestampReceived><subject>Reg. Multiple GCC 's</subject><body>

hi ,
   i am currently using gcc-4.0.0-8.   i wanted to hav gcc3.3 also.. So, i 
downloaded the gcc-3.3.tgz fr0m a mirror. i follwed the following steps..

           1. untar into my home directory.

           2. ./configure --prefix=/usr/local/gcc/3.3

           3. make bootstrap

    &amp; got the following error...


     ./read-rtl.c: In function ‘read_rtx':
     ./read-rtl.c:653: error: invalid lvalue in increment
     make[2]: *** [read-rtl.o] Error 1
     make[2]: Leaving directory `/home/prasant/gcc-3.3/gcc'
     make[1]: *** [stage1_build] Error 2
     make[1]: Leaving directory `/home/prasant/gcc-3.3/gcc'
     make: *** [bootstrap] Error 2



    Please _help_ me out...

regards ,
prasant


-- 
--------------------------------------------------------------------------------------------------------------------------------------------



   Only wimps use tape backup :  _real_men just upload their important
   stuff on ftp and let the rest of the world mirror it

                                        -- Linus Torvalds


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20050811055420</emailId><senderName>"Julio Otero"</senderName><senderEmail>ryufvli@engnetglobal.com</senderEmail><timestampReceived>2005-08-11 05:54:20-0400</timestampReceived><subject>Hot st0-ck in motion</subject><body>

Market Movers is not your father's investment newsletter!  We focus on 
stocks with the potentia| to go up in va|ue by we|| over 100%.  That's what 
it takes to make it on to our |ist.  The beauty of this is that with the 
right information it on|y takes one smart investment to make serious 
profits!

Investors, |et's Make the Market Work for Us!  Here's our next HOT PICK!


New Deve|opments Expected To Move Hathaway Corporation much higher!


Symbo|: HWYI . PK

Current Price:      	    		$1.80
Short Term Target Price:    		$4.10
12 month Target Price:      		$5.65


As we a|| know, great news combined with a great company produces great 
stock price resu|ts!  Read on to find out why we be|ieve this is just the 
situation we have here today!


***NEWS ABOUT THE COMPANY***

ST. PETERSBURG, FL--(MARKET WIRE)--Aug 1, 2005 -- Hathaway Corporation 
(Other OTC:HWYI.PK - News), a |eading g|oba| provider of communications and 
te|ecommunications software, today announced the comp|etion of the 
acquisition of OptiCon Systems Inc., a unit of Corning®

The OptiCon Systems software, deve|oped, patented and so|d by Corning for 
Fiber Optic Management, is current|y in use by Comcast®, Charter®, 
Ade|phia® and Time Warner®, as we|| as severa| other major cab|e and 
te|ephone companies throughout the U.S. These companies now become Hathaway 
c|ients.

Sam Ta|ari, acting CEO of Hathaway Corporation, stated, "We are extreme|y 
excited about this acquisition of OptiCon Systems Inc. We've gone through 
twe|ve months of extensive due di|igence on OptiCon, ensuring its patents, 
management, market opportunity and customer |ists were va|idated." Mr. 
Ta|ari further states, "With the Fiber-to-Home initiative by a|| major cab|e 
and te|ecom companies expanding at a rapid pace, the OptiCon management 
system wi|| undoubted|y become a necessity for these companies to manage 
their services in the most effective and efficient way. OptiCon is current|y 
dep|oyed by 7 of the 10 major cab|e and te|ecom providers, and this 
acquisition wi|| have a significant impact on our revenues for the next 5 
years. Hathaway wi|| immediate|y begin the process for |isting on the NASDAQ 
Sma|| Cap Market."


***Market Opportunity***

OptiCon Systems provides Fiber Optic Network Management systems that 
current|y run on over 70% of the major te|ecoms and cab|e companies here in 
the United States. The OSS software marketp|ace was $11.1 bi||ion wor|dwide 
in 2003 and is expected to grow to $16.2 bi||ion wor|dwide by 2007. North 
America has 60% of the marketp|ace at $6.6 bi||ion. OptiCon is poised to 
increase its |ead by major infusion of investments and capita| infusion.


Symbo|: HWYI . PK

Current Price:      	    		$1.80
Short Term Target Price:    		$4.10
12 month Target Price:      		$5.65



Watch this one trade on Thursday!



Information within this emai| contains "F0RWARD |ooking statements"
within the meaning of Section 27A of the Securities Act of 1933 and
Section 21B of the Securities Exchange Act of 1934. Any statements that
express or   invo|ve   discussions with respect to predictions,
expectations, be|iefs, p|ans, projections, objectives, goa|s, assumptions or 
future
events or performance are not statements of historica| fact and may be
"F0RWARD |ooking statements."F0RWARD |ooking statements are based on
expectations, estimates and projections at the time the statements are
made that invo|ve a number of risks and uncertainties which cou|d cause
actua| resu|ts or events to differ materia||y from those present|y
anticipated. F0RWARD |ooking statements in this action may be identified
through the use of words such as "projects", "foresee", "expects",
"wi||,"  "anticipates,"  "estimates," "be|ieves,"  "understands" or that by
statements indicating certain actions "may," "cou|d," or "might" occur.
As with many micro-cap stocks, today's company has additiona| risk
factors worth noting. Those factors inc|ude: a |imited operating history,
the company advancing cash to re|ated parties and a shareho|der on an
unsecured basis: one vendor, a re|ated party through a majority
stockho|der, supp|ies ninety-seven percent of the company's raw materia|s:
re|iance on two customers for over fifty percent of their business and
numerous re|ated party transactions and the need to raise capita|. These
factors and others are more fu||y spe||ed out in the company's SEC
fi|ings. We urge you to read the fi|ings before you invest.  The ROCKET 
ST0CK
Report does not represent that the information contained in this
message states a|| materia| facts or does not omit a materia| fact necessary
to make the statements therein not mis|eading.  A|| information
provided within this emai| pertaining to investing, ST0CKS, securities must 
be
understood as information provided and not investment advice. The
ROCKET ST0CK Report advises a|| readers and subscribers to seek advice from
a registered professiona| securities representative before deciding to
trade in ST0CKS featured within this emai|. None of the materia| within
this report   sha|| be construed as any kind of investment advice or
so|icitation. Many of these companies are on the verge of bankruptcy. You
can |ose a|| your M0NEY by investing in this ST0CK. The pub|isher of
The ROCKET ST0CK Report is not a registered investment ADVIS0R.
Subscribers shou|d not view information herein as |ega|, tax, accounting or
investment advice. Any reference to past performance(s) of companies are
specia||y se|ected to be referenced based on the favorab|e performance of
these companies. You wou|d need perfect timing to achieve the resu|ts
in the examp|es given.   There can be no assurance of that happening.
Remember, as a|ways, past performance is never indicative of future
resu|ts and a thorough due di|igence effort, inc|uding a review of a
company's fi|ings, shou|d be comp|eted prior to investing. In comp|iance
with the Securities Act of 1933, Section 17(b), The ROCKET ST0CK Report
disc|oses the receipt of twe|ve thousand D0LLARS from a third party
(GEM,Inc.), not an officer, director or affi|iate  shareho|der  for  the
circu|ation  of  this report. GEM, Inc. has a position in the ST0CK they
wi|| se|| at any time without notice.  Be aware of an inherent conf|ict
of interest resu|ting from such compensation due to the fact that this
is a paid advertisement and we are conf|icted. A|| factua| information
in this report was gathered from pub|ic sources, inc|uding but not
|imited to Company Websites, SEC Fi|ings and Company Press Re|eases. The
ROCKET ST0CK Report be|ieves this information to be re|iab|e but can make
no guarantee as to its accuracy or comp|eteness. Use of the materia|
within this emai| constitutes your acceptance of these terms.

If you wish to stop future mai|ings, p|ease mai| to daily_tip47 @ yahoo.com








-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050818001823</emailId><senderName>"Isaiah Quinn"</senderName><senderEmail>yiswnf@cedronejanove.com</senderEmail><timestampReceived>2005-08-18 00:18:23-0400</timestampReceived><subject>RE: Do you still feel the vitality</subject><body>

Hello, Hi mate, I'm Faustino Shelton

I'm a bit curious:

Are you jealous of your friends, enhance your erections now

We have an answer!

Get wood like a pornstar http://easyrx-4u.com/index.php?ref_id=766

best regards,

yiswnf





-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050818154309</emailId><senderName>"Felipe Mccollum"</senderName><senderEmail>wkiew@yahoo.com</senderEmail><timestampReceived>2005-08-18 15:43:09-0400</timestampReceived><subject>Woww..8o-% 0ff Phar maacy CcN</subject><body>


Highest quality medds at "Lowest Price"

V-codin ES- $239  
Valliuum - $136 
Vi graa - $90 
Cai llis - $95 
Codeinne - $65 
Xa naax - $165
Phen ttermine - $139

Why waiting?
http://www.andifwhywhere.com/bam/?man=ronn


zSO
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>200508222000530</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-08-22 20:00:53-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.3 is released</subject><body>

This is the beta release of binutils 2.16.91.0.3 for Linux, which is
based on binutils 2005 0821 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.3 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.91.0.2:

1. Update from binutils 2005 0821.
2. Support x86-64 medium model.
3. Fix "objdump -S --adjust-vma=xxx" (PR 1179).
4. Reduce R_IA64_NONE relocations from R_IA64_LDXMOV relaxation.
5. Fix x86 linker regression for dosemu.
6. Add "readelf -t/--section-details" to display section details.
7. Fix "as -al=file" regression (PR 1118).

Changes from binutils 2.16.91.0.1:

1. Update from binutils 2005 0720.
2. Add Intel VMX support.
3. Add AMD SVME support.
4. Add x86-64 new relocations for medium model.
5. Fix a PIE regression (PR 975).
6. Fix an x86_64 signed 32bit displacement regression.
7. Fix PPC PLT (PR 1004). 
8. Improve empty section removal.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.3.tar.bz2. Source code.
2. binutils-2.16.91.0.2-2.16.91.0.3.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.3-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.3-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.3-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.3.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
08/22/2005

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050825054332</emailId><senderName>gregory Visvanatha</senderName><senderEmail>okyfso@acealexis.com</senderEmail><timestampReceived>2005-08-25 05:43:32-0400</timestampReceived><subject>Owning these shares fast-tracks performance vituperative</subject><body>

forgiver

    Hot Oil Pick Of The Week- ORTE

We have uncovered a diamond here, ORTE is
on the move for strong continued success.
We are recommending it to all of our readers
this week. With experts saying oil can reach
five dollars per gallon by the end of the
year, the oil industry is in strong demand
more than ever before. This is why we are
recommending ORTE now, this one will sky
rocket easily, get it immediately.

*Company: Oretech, Inc.
*Symb0l: ORTE . Pk
*Current-Price: . 55
*52 Wk High:  1. 60
*3 to 4 Day target: 1. 10+
*6 months taeget: 2. 30+

Company Inside News:

Oretech Announces Positive Test Results Extracting
Oil from Tar Sands.

Oretech, Inc. announced today that the company has
recently completed test processing on tar sands from
the Athabasca region of Alberta, Canada. Preliminary
results indicate the extraction of oil is apparently
a higher percentage than that which is extracted by
conventional methods, while remaining extremely
environmentally friendly. The API gravity of the
bitumen (oil) is significantly upgraded during the
extraction process.
 
Alberta's tar sands comprise one of the world's two
largest sources of bitumen; the other is in Venezuela.
These oil reserves are second only to Saudi Arabia,
and are found only in three places in Alberta -- the
Athabasca, Peace River and Cold Lake regions -- covering
a total of nearly 140,800 square kilometers. These tar
sands currently represent 54 per cent of Alberta's total
oil production, and about one-third of all the oil
produced in Canada. Output of marketable tar sands
production increased to 858,000 barrels per day
(bbl/d) in 2003, up from 741,000 bbl/d the year
before. It is anticipated that in 2005, Alberta's
tar sands production may account for one-half of
Canada's total crude output and 10 per cent of
North American production. 

Oretech, Inc. has developed a proof of concept model
that represents a breakthrough in oil extraction from
Tar Sand processing technology. Its business model
is to be a leading edge developer and licensor of
proprietary innovative technology that reduces the
cost of extraction of noble metals (Gold / Silver
/ Platinum / Titanium) and energy resources (Oil
Extraction from Tar Sand and Shale). Focusing on
reducing pollution of the environment, Oretech
is known for its breakthrough materials processing
technology, which extracts specific minerals from
diverse feedstock and raw materials without the
use of harmful chemicals or the emission of
environmentally unsafe gases. thousandth

bristle gallantry

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050829054552</emailId><senderName>"Vikas"</senderName><senderEmail>vikas.g@ap.sony.com</senderEmail><timestampReceived>2005-08-29 05:45:52-0400</timestampReceived><subject>RE: How can  execute .cpp program with  gcc command</subject><body>

To my knowledge c++ program with gcc you should use g++ to execute cpp program 


-----Original Message-----
From: linux-gcc-owner@vger.kernel.org [mailto:linux-gcc-owner@vger.kernel.org]On Behalf Of kranthi
Sent: Monday, August 29, 2005 10:47 AM
To: linux-gcc@vger.kernel.org
Subject: How can execute .cpp program with gcc command

How can  execute .cpp program with  gcc command

Plz..

--
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050830045848</emailId><senderName>"Vikas"</senderName><senderEmail>vikas.g@ap.sony.com</senderEmail><timestampReceived>2005-08-30 04:58:48-0400</timestampReceived><subject>Performance tuning</subject><body>

Hi ,
Can anyone tell me about library optimizer (monta vista )
Or do any one provide some pointer on library optimization ...


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050830101411</emailId><senderName>raja</senderName><senderEmail>vnagaraju@effigent.net</senderEmail><timestampReceived>2005-08-30 10:14:11-0400</timestampReceived><subject>(no subject)</subject><body>

subscribe
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050721162815</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-07-21 16:28:15-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.2 is released</subject><body>

This is the beta release of binutils 2.16.91.0.2 for Linux, which is
based on binutils 2005 0720 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.2 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.91.0.1:

1. Update from binutils 2005 0720.
2. Add Intel VMX support.
3. Add AMD SVME support.
4. Add x86-64 new relocations for medium model.
5. Fix a PIE regression (PR 975).
6. Fix an x86_64 signed 32bit displacement regression.
7. Fix PPC PLT (PR 1004). 
8. Improve empty section removal.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.2.tar.bz2. Source code.
2. binutils-2.16.91.0.1-2.16.91.0.2.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.2-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.2-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.2-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.2.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
07/20/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050725084132</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-07-25 08:41:32-0400</timestampReceived><subject>[BUG] gcc-3.4.5-20050531 (i386): __FUNCTION__ as a part of the printf's format argument</subject><body>

Such an example can't be compiled:


#include &lt;stdio.h&gt;

void x()
{
    printf(__FUNCTION__ "\n");
}


$ gcc printf.c -o fprintf
printf.c: In function `x':
printf.c:5: error: syntax error before string constant


Then, the problem is not printf-specific and is not depend of
&lt;stdio.h&gt;.  The next example gives the same error:


void y(const char *f, ...);
void z()
{
    y(__FUNCTION__ "\n");
}


If some args are present in the ellipsis section (i.e. y(__FUNCTION__
": %s\n", "xxx")), the problem doesn't vanish.  And, if __FILE__ is
used instead of __FUNCTION__, the problem is absent.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050610142519</emailId><senderName>"Guillermo Corbin"</senderName><senderEmail>dtxugjfezyml@fusemail.com</senderEmail><timestampReceived>2005-06-10 14:25:19-0400</timestampReceived><subject>Get laid tonight</subject><body>


There is this free date site filled with a bunch of sexoholics.

No flowers, no walk on the beach, just meet up for sex :)

There are also some people who want serious relationships though
So if you want a long-termer, or a one-nighter, you got it ;)

Whatever floats your boat pretty much! 

http://www.onlyliveonce.net/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050620033117</emailId><senderName>"Teresa Allison"</senderName><senderEmail>mgibc@hotmail.com</senderEmail><timestampReceived>2005-06-20 03:31:17-0400</timestampReceived><subject>Only Ciiallis Help kF</subject><body>


"Ci-ialis Softabs" is better than Pfizer Viiagrra
and normal Ci-ialis because:

- Guaaraantees 36 hours lasting
- Safe to take, no side effects at all
- Boost and increase se-xual performance
- Haarder e-rectiions and quick recharge
- Proven and certified by experts and doctors
- only $3.99 per tabs

Cllick heree:
http://gossipy.net/cs/?ronn










o-ut of mai-lling lisst:
http://gossipy.net/rm.php?ronn

5Z
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050622183759</emailId><senderName>"Misty Heath"</senderName><senderEmail>uhpmdpbxsk@yahoo.com</senderEmail><timestampReceived>2005-06-22 18:37:59-0400</timestampReceived><subject>Can You Last 36 Hours? EtHjUn</subject><body>


"Ci-ialis Softabs" is better than Pfizer Viiagrra
and normal Ci-ialis because:

- Guaaraantees 36 hours lasting
- Safe to take, no side effects at all
- Boost and increase se-xual performance
- Haarder e-rectiions and quick recharge
- Proven and certified by experts and doctors
- only $3.99 per tabs

Cllick heree:
http://gravesides.com/cs/?ronn










o-ut of mai-lling lisst:
http://gravesides.com/rm.php?ronn

sRrC
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050623005641</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-06-23 00:56:41-0400</timestampReceived><subject>The Linux binutils 2.16.91.0.1 is released</subject><body>

This is the beta release of binutils 2.16.91.0.1 for Linux, which is
based on binutils 2005 0622 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.91.0.1 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.90.0.3:

1. Update from binutils 2005 0622.
2. Fix a linker versioning bug exposed by gcc 4 (PR 1022/1023/1025).
3. Optimize ia64 br-&gt;brl relaxation (PR 834).
4. Improve linker empty section removal.
5. Fix DWARF 2 line number reporting (PR 990).
6. Fix DWARF 2 line number reporting regression on assembly file (PR
1000).

Changes from binutils 2.16.90.0.2:

1. Update from binutils 2005 0510.
2. Update ia64 assembler to support comdat group section generated by
gcc 4 (PR 940).
3. Fix a linker crash on bad input (PR 939).
4. Fix a sh64 assembler regression (PR 936).
5. Support linker script on executable (PR 882).
6. Fix the linker -pie regression (PR 878).
7. Fix an x86_64 disassembler bug (PR 843).
8. Fix a PPC linker regression.
9. Misc speed up.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.91.0.1.tar.bz2. Source code.
2. binutils-2.16.90.0.3-2.16.91.0.1.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.91.0.1-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.91.0.1-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.91.0.1-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.91.0.1.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
06/22/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050624183303</emailId><senderName></senderName><senderEmail>jeff.fellin</senderEmail><timestampReceived>2005-06-24 18:33:03-0400</timestampReceived><subject>Shared Library memory usage question</subject><body>

Sorry if this is the incorrect mailing list for this question. If this
isn't the correct list, please suggest the correct/better list.

I am trying to use shared libraries in a PPC 405GP Embedded Linux platform.
I have followed
the various instructions for creating shared libraries and linking with the
created shared libraries.

The libraries are created by the following skeleton
      g++ -fpic -c f.o [ f.cpp | f.c ]
      g++ -shared -o lib.so *.o

The applications are created by this skeleton

      g++ -c a.o a.cpp
      g++ -Bdynamic -o a lib.so *.o

When I compare the sizes of the executables I see the expected size
reductions by eliminating
the static libraries. The sizes of the shared libraries are comparable to
the static version.


The problem I'm seeing is the amount of memory (SDRAM) in my system has not
decreased with
the shared libraries, but has actually decreased.

.HOW can I use shared libraries and decrease the memory space being used by
the system?
All suggestions/explanations welcome

The data for one shared library is below.


Examining the of  /proc/&lt;pid&gt;/status, I have observed three lines for every
shared library

The /proc/&lt;pid&gt;/status output for one library is:
      0ff4c000-0ff50000   r-xp 00000000 1f:04 196    /lib/libNvramAccess.so
      0ff50000-0ff5c000   ---p 00004000 1f:04 196
/lib/libNvramAccess.so
      0ff5c000-0ff61000 rwxp 00000000 1f:04 196    /lib/libNvramAccess.so

If  I'm intepreting the output of status it indicates one section of the
library is loaded twice
with different sizes. The first line shows 0x4000 bytes, and the third
shows 0x5000 bytes
Also the size of the second line shows the data/bss space is c000 bytes,
which is larger
than the entire shared library text and data!


The output of size /lib/NvramAccess.so
   text        data         bss         dec         hex     filename
  15411        2280         353       18044        467c
libNvramAccess.so

The output of dump/objdump for the shared library table shows:


libNvramAccess.so:     file format elf32-powerpc
libNvramAccess.so
architecture: powerpc:common, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x00001920

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x00003b00 memsz 0x00003b00 flags r-x
    LOAD off    0x00003b00 vaddr 0x00013b00 paddr 0x00013b00 align 2**16
         filesz 0x00000960 memsz 0x00000c14 flags rwx
 DYNAMIC off    0x00004334 vaddr 0x00014334 paddr 0x00014334 align 2**2
         filesz 0x00000098 memsz 0x00000098 flags rw-

Dynamic Section:
  SYMBOLIC    0x0
  HASH        0x94
  STRTAB      0xab8
  SYMTAB      0x3d8
  STRSZ       0xc03
  SYMENT      0x10
  PLTGOT      0x14464
  PLTRELSZ    0x108
  PLTREL      0x7
  JMPREL      0x1818
  RELA        0x16bc
  RELASZ      0x264
  RELAENT     0xc
  RELACOUNT   0x1c

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .hash         00000344  00000094  00000094  00000094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .dynsym       000006e0  000003d8  000003d8  000003d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .dynstr       00000c03  00000ab8  00000ab8  00000ab8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .rela.dyn     0000015c  000016bc  000016bc  000016bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rela.plt     00000108  00001818  00001818  00001818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .text         00001ed8  00001920  00001920  00001920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .rodata       00000308  000037f8  000037f8  000037f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .data         000000d0  00013b00  00013b00  00003b00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .eh_frame     00000764  00013bd0  00013bd0  00003bd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .dynamic      00000098  00014334  00014334  00004334  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .ctors        00000004  000143cc  000143cc  000043cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .dtors        00000004  000143d0  000143d0  000043d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .got          00000078  000143d4  000143d4  000043d4  2**2
                  CONTENTS, ALLOC, LOAD, CODE
 13 .sdata2       00000000  0001444c  0001444c  0000444c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .sdata        00000014  0001444c  0001444c  0000444c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 .sbss         00000001  00014460  00014460  00004460  2**0
                  ALLOC
 16 .plt          00000150  00014464  00014464  00004463  2**2
                  ALLOC, CODE
 17 .bss          00000160  000145b4  000145b4  00004463  2**2
                  ALLOC
 18 .comment      00000010  00000000  00000000  00004463  2**0
                  CONTENTS, READONLY





Jeff Fellin
RFL Electronics
Jeff.Fellin@rflelect.com
973 334-3100, x 327

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050629084733</emailId><senderName>"Neil Godwin"</senderName><senderEmail>btmbdhlhxrbczn@hotmail.com</senderEmail><timestampReceived>2005-06-29 08:47:33-0400</timestampReceived><subject>Does Ur Cock Hard Enough? B0F</subject><body>


"Ci-ialis Softabs" is better than Pfizer Viiagrra
and normal Ci-ialis because:

- Guaaraantees 36 hours lasting
- Safe to take, no side effects at all
- Boost and increase se-xual performance
- Haarder e-rectiions and quick recharge
- Proven and certified by experts and doctors
- only $3.99 per tabs

Cllick heree:
http://unpardoned.net/cs/?ronn










o-ut of mai-lling lisst:
http://unpardoned.net/rm.php?ronn

8k
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050517195815</emailId><senderName>Manaswini Sawant</senderName><senderEmail>manaswini@gmail.com</senderEmail><timestampReceived>2005-05-17 19:58:15-0400</timestampReceived><subject>using one library within another</subject><body>

I have libP.so (source and all) and libQ.so (no such luck).
libP redefines some standard libc functionality.
I need to link libQ.so and the object files for libP.so to form one
common libPQ.so.

Now I would like libP object files to use stuff found within libQ.so
but would like libQ.so to use the standard libc functions instead of
using the redefined libP ones.

When I mash them together into libPQ.so, libP calls the libQ functions
as required but libQ calls the libP versions instead of the standard
libc ones.

Is this possible? Are there some ld flags that can do this?
Thanks in advance,
~Manaswini.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050526204624</emailId><senderName>"Nestor Valdez"</senderName><senderEmail>tfdudpyaodhad@hotmail.com</senderEmail><timestampReceived>2005-05-26 20:46:24-0400</timestampReceived><subject>You Gonna Love This F2kCt</subject><body>


The Only Clinically Tested Penis En_Largement Products!

- Guuaarantee 1+ inches in 2 months (or moneeyy back)
- Experience Longer Lasting and More Enjoying Seexx
- Easy to Wear With No Additional Exercises Require
- The More You Wear, the Longer It Will Be
- Millions of People are Enjoying the Benefit of It

Check Uss Out Tooday!

http://visagraph.net/extender/?ronn










o-ut of mai-lling lisst:
http://visagraph.net/rm.php?ronn
i2
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050529140807</emailId><senderName>"Suzanne Jacob"</senderName><senderEmail>llsierbsuvg@msn.com</senderEmail><timestampReceived>2005-05-29 14:08:07-0400</timestampReceived><subject>Via-ggra is Lousy 5M</subject><body>


"Ci-ialis Softabs" is better than Pfizer Viiagrra
and normal Ci-ialis because:

- Guaaraantees 36 hours lasting
- Safe to take, no side effects at all
- Boost and increase se-xual performance
- Haarder e-rectiions and quick recharge
- Proven and certified by experts and doctors
- only $3.99 per tabs

http://visagraph.net/cs/?ronn









o-ut of mai-lling lisst:
http://visagraph.net/rm.php?ronn
c31ft
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050410174320</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-04-10 17:43:20-0400</timestampReceived><subject>The Linux binutils 2.16.90.0.1 is released</subject><body>

This is the beta release of binutils 2.16.90.0.1 for Linux, which is
based on binutils 2005 0408 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.1 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.90.0.1 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.90.0.1.tar.bz2. Source code.
2. binutils-2.15.94.0.2.2-2.16.90.0.1.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.90.0.1-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.90.0.1-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.90.0.1-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.90.0.1.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
04/10/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050413173354</emailId><senderName>Nickolay</senderName><senderEmail>nickolay@protei.ru</senderEmail><timestampReceived>2005-04-13 17:33:54-0400</timestampReceived><subject>initrd support in 2.6 kernel</subject><body>

Hallo Guys!

I has initrd, that nice loaded by all 2.4 kernels.
But 2.6.9 kernel has some difference in loading initrd(as i discovered).
This warning produced by kernel on boot:

...SKIP...
Kernel command line: console=ttyS0,115200 root=/dev/ram0 
initrd=0x00800000,32M
...SKIP...
checking if image is initramfs...it isn't (ungzip failed); looks like an 
initrd
Freeing initrd memory: 32768K
... SKIP...
RAMDISK driver initialized: 16 RAM disks of 32768K size 1024 blocksize
...SKIP...
RAMDISK: Couldn't find valid RAM disk image starting at 0.
Kernel panic - not syncing: VFS: Unable to mount root fs on 
unknown-block(1,0)


Maybe troubles in kernel command line? But this command line work fine 
on 2.4 kernels.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050414071032</emailId><senderName>"Oliver.Korpilla () gmx ! de"</senderName><senderEmail>oliver.korpilla@gmx.de</senderEmail><timestampReceived>2005-04-14 07:10:32-0400</timestampReceived><subject>Re: [Crosspost] GNU/Linux userland?</subject><body>

John Lenz wrote:
&gt; On 04/13/05 14:40:31, Oliver Korpilla wrote:
&gt; You might also look at www.openembedded.org  It has support for cross  
&gt; compiling, and with one command can build an entire userland.  Not sure 
&gt; if  it is exactly a fit for what you want to do, but it seems very close.

Thanks, this sounds great, and together with the directions I got about 
Gentoo and Heretix/Rubyx seems to precisely match my request.

Thanks to you, and thanks to all helpful replies! :)

With kind regards,
Oliver Korpilla
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050430000413</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-04-30 00:04:13-0400</timestampReceived><subject>The Linux binutils 2.16.90.0.2  is released</subject><body>

This is the beta release of binutils 2.16.90.0.2 for Linux, which is
based on binutils 2005 0429 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

The new i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location, i.e.,

	movl (%eax),%ds
	movl %ds,(%eax)

To generate instructions for moving between a segment register and a
16bit memory location without the 16bit operand size prefix, 0x66,

	mov (%eax),%ds
	mov %ds,(%eax)

should be used. It will work with both new and old assemblers. The
assembler starting from 2.16.90.0.2 will also support

	movw (%eax),%ds
	movw %ds,(%eax)

without the 0x66 prefix. Patches for 2.4 and 2.6 Linux kernels are
available at

http://www.kernel.org/pub/linux/devel/binutils/linux-2.4-seg-4.patch
http://www.kernel.org/pub/linux/devel/binutils/linux-2.6-seg-5.patch

The ia64 assembler is now defaulted to tune for Itanium 2 processors.
To build a kernel for Itanium 1 processors, you will need to add

ifeq ($(CONFIG_ITANIUM),y)
	CFLAGS += -Wa,-mtune=itanium1
	AFLAGS += -Wa,-mtune=itanium1
endif

to arch/ia64/Makefile in your kernel source tree.

Please report any bugs related to binutils 2.16.90.0.2 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.16.90.0.1:

1. Update from binutils 2005 0429.
2. Fix an ELF linker regression (PR 815).
3. Fix an empty section removal related bug.
4. Fix an ia64 linker regression (PR 855).
5. Don't allow local symbol to be equated common/undefined symbols (PR
857).
6. Fix the ia64 linker to handle local dynamic symbol error reporting.
7. Make non-debugging reference to discarded section an error (PR 858).
8. Support Sparc/TLS.
9. Support rpm build with newer rpm.
10. Fix an alpha linker regression.
11. Fix the non-gcc build regression.

Changes from binutils 2.15.94.0.2.2:

1. Update from binutils 2005 0408.
2. The i386/x86_64 assemblers no longer accept instructions for moving
between a segment register and a 32bit memory location.
3. The x86_64 assembler now allows movq between a segment register and
a 64bit general purpose register.
4. 20x Speed up linker for input files with &gt;64K sections.
5. Properly report ia64 linker relaxation failures.
6. Support tuning ia64 assembler for Itanium 2 processors.
7. Linker will remove empty unused output sections.
8. Add -N to readelf to display full section names.
9. Fix the ia64 linker to support linkonce text sections without unwind
sections.
10. More unwind directive checkings in the ia64 assembler.
11. Speed up linker with wildcard handling.
12. Fix readelf to properly dump .debug_ranges and .debug_loc sections.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.16.90.0.2.tar.bz2. Source code.
2. binutils-2.16.90.0.1-2.16.90.0.2.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.16.90.0.2-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.16.90.0.2-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.16.90.0.2-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.16.90.0.2.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
04/29/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050217011909</emailId><senderName>"Cannell Martin"</senderName><senderEmail>tustonjic@bellsouth.com</senderEmail><timestampReceived>2005-02-17 01:19:09-0400</timestampReceived><subject>Kevelaitis Morselli Stoykov</subject><body>

Sufficient &amp; harder erections
http://Stavreski.jrz874383w.com/cs/?theman

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050218064424</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2005-02-18 06:44:24-0400</timestampReceived><subject>The Linux binutils 2.15.94.0.2.2 is released</subject><body>

This is the beta release of binutils 2.15.94.0.2.2 for Linux, which is
based on binutils 2004 1220 in CVS on sources.redhat.com plus various
changes. It is purely for Linux.

Please report any bugs related to binutils 2.15.94.0.2.2 to hjl@lucon.org

and

http://www.sourceware.org/bugzilla/

If you don't use

# rpmbuild -ta binutils-xx.xx.xx.xx.xx.tar.bz2

to compile the Linux binutils, please read patches/README in source
tree to apply Linux patches if there are any.

Changes from binutils 2.15.94.0.2:

1. Fix greater than 64K section support in linker.
2. Properly handle i386 and x86_64 protected symbols in linker.
3. Fix readelf for LEB128 on 64bit hosts.
4. Speed up readelf for section group process.
5. Include ia64 texinfo pages.
6. Change ia64 assembler to check hint.b for Montecito.
7. Improve relaxation failure report in ia64 linker.
8. Fix ia64 linker to allow relax backward branch in the same section.

Changes from binutils 2.15.94.0.1:

1. Update from binutils 2004 1220.
2. Fix strip for TLS symbol references.

Changes from binutils 2.15.92.0.2:

1. Update from binutils 2004 1121.
2. Put ia64 .ctors/.dtors sections next to small data section for
Intel ia64 compiler.
3. Fix -Bdynamic/-Bstatic handling for linker script.
4. Provide more information on relocation overflow.
5. Add --sort-section to linker.
6. Support icc 8.1 unwind info in readelf.
7. Fix the infinite loop bug on bad input in the ia64 assembler.
8. Fix ia64 SECREL relocation in linker.
9. Fix a section group memory leak in readelf.

Changes from binutils 2.15.91.0.2:

1. Update from binutils 2004 0927.
2. Work around a section header bug in Intel ia64 compiler.
3. Fix an unwind directive bug in the ia64 assembler.
4. Fix various PPC bugs.
5. Update ARM support.
6. Fix an x86-64 linker warning while building Linux kernel.

Changes from binutils 2.15.91.0.1:

1. Update from binutils 2004 0727.
2. Fix the x86_64 linker to prevent non-PIC code in shared library.
3. Fix the ia64 linker to warn the relotable files which can't be
relaxed.
4. Fix the comdat group support. Allow mix single-member comdat group
with linkonce section.
5. Added --add-needed/--no-add-needed options to linker.
6. Fix the SHF_LINK_ORDER support.
7. Fix the ia64 assembler for multiple sections with the same name and
SHT_IA_64_UNWIND sections.
8. Fix the ia64 assembler for merge section and relaxation.

Changes from binutils 2.15.90.0.3:

1. Update from binutils 2004 0527.
2. Fix -x auto option in the ia64 assembler.
3. Add the AR check in the ia64 assembler.
4. Fix the section group support.
5. Add a new -z relro linker option.
6. Fix an exception section placement bug in linker.
7. Add .serialize.data and .serialize.instruction to the ia64
assembler.

Changes from binutils 2.15.90.0.2:

1. Update from binutils 2004 0415.
2. Fix the linker for weak undefined symbol handling.
3. Fix the ELF/Sparc and ELF/Sparc64 linker for statically linking PIC
code.

Changes from binutils 2.15.90.0.1.1:

1. Update from binutils 2004 0412.
2. Add --as-needed/--no-as-needed to linker.
3. Fix -z defs in linker.
4. Always reserve the memory for ia64 dynamic linker.
5. Fix a race condition in ia64 lazy binding.

Changes from binutils 2.15.90.0.1:

1. Fixed an ia64 assembler bug.
2. Install the assembler man page.

Changes from binutils 2.14.90.0.8:

1. Update from binutils 2004 0303.
2. Fixed linker for undefined symbols with non-default visibility.
3. Sped up linker weakdef symbol handling.
4. Fixed mixing ELF32 and ELF64 object files in archive.
5. Added ia64 linker brl optimization.
6. Fixed ia64 linker to disallow invalid dynamic relocations.
7. Fixed DT_TEXTREL handling in ia64 linker.
8. Fixed alignment handling in ia64 assembler.
9. Improved ia64 assembler unwind table handling. 

Changes from binutils 2.14.90.0.7:

1. Update from binutils 2004 0114.
2. Fixed an ia64 assembler unwind table bug. 
3. Better handle IPF linker relaxation overflow.
4. Fixed misc PPC bugs.

Changes from binutils 2.14.90.0.6:

1. Update from binutils 2003 1029.
2. Allow type changes for undefined symbols.
3. Fix EH frame optimization.
4. Fix the check for undefined versioned symbol with wildcard.
5. Support generating code for Itanium.
6. Detect and warn bad symbol index.
7. Update IPF assemebler DV check.

Changes from binutils 2.14.90.0.5:

1. Update from binutils 2003 0820.
2. No longer use section names for ELF section types nor flags.
3. Fix some ELF/IA64 linker bugs.
4. Fix some ELF/ppc bugs.
5. Add archive support to readelf.

Changes from binutils 2.14.90.0.4.1:

1. Update from binutils 2003 0722.
2. Fix an ELF/mips linker bug.
3. Fix an ELF/hpppa linker bug.
4. Fix an ELF/ia64 assembler bug.
5. Fix a linkonce support with C++ debug.
6. A new working C++ demangler.
7. Various alpha, mips, ia64, ... bug fixes.
8. Support for the current gcc and glibc.

Changes from binutils 2.14.90.0.4:
 
1. Fix an ia64 assembler hint@pause bug.
2. Support Intel Prescott New Instructions.

Changes from binutils 2.14.90.0.3:

1. Work around the brain dead libtool.

Changes from binutils 2.14.90.0.2:

1. Update from binutils 2003 0523.
2. Fix 2 ELF visibility bugs.
3. Fix ELF/ppc linker bugs.

Changes from binutils 2.14.90.0.1:

1. Update from binutils 2003 0515.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Add more IAS compatibilities to ia64 assembler.

Changes from binutils 2.13.90.0.20:

1. Update from binutils 2003 0505.
2. Fix various ELF visibility bugs.
3. Fix some ia64 linker bugs.
4. Fix some ia64 assembler bugs.
5. Add some IAS compatibilities to ia64 assembler.
6. Fix ELF common symbol alignment.
7. Fix ELF weak symbol handling.

Changes from binutils 2.13.90.0.18:

1. Update from binutils 2003 0319.
2. Fix an ia64 linker brl relaxation bug.
3. Fix some ELF/ppc linker bugs.

Changes from binutils 2.13.90.0.16:

1. Update from binutils 2003 0121.
2. Fix an ia64 gas bug.
3. Fix some TLS bugs.
4. Fix some ELF/ppc bugs.
5. Fix an ELF/m68k bug.

2. Include /usr/bin/c++filt.
Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

The file list:

1. binutils-2.15.94.0.2.2.tar.bz2. Source code.
2. binutils-2.15.94.0.2-2.15.94.0.2.2.diff.bz2. Patch against the
   previous beta source code.
3. binutils-2.15.94.0.2.2-1.i386.rpm. IA-32 binary RPM for RedHat EL 3.
4. binutils-2.15.94.0.2.2-1.ia64.rpm. IA-64 binary RPM for RedHat EL 3.
5. binutils-2.15.94.0.2.2-1.x86_64.rpm. X64_64 binary RPM for RedHat
   EL 3.

There is no separate source rpm. You can do

# rpmbuild -ta binutils-2.15.94.0.2.2.tar.bz2

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://www.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
02/18/2005
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050226184211</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-02-26 18:42:11-0400</timestampReceived><subject>gcc-3.4.4-20050211: maybe a danger behaviour</subject><body>

Consider the following example:


enum w {
//    c=-1,
    a,
    b
};
whattodo (
    char option
) {
    static
    struct todo {
        enum w what;
        char option;
    } todos[]= {
        {a,'a'},
        {b,'b'},
        {-1}
    };
    struct todo *p= todos;
    do if (
        (option &amp;&amp; !option)
    ) break;
    while ((++p)-&gt;what &gt;= 0);
    return p-&gt;what;
}


Compiling with -O[&gt;0] and -Wall for x86 we have that code for
whattodo:


whattodo:
.L2:
	jmp	.L2


a) Formally, the code is correct.  As p-&gt;what can never be &lt; 0
according to its type.

b) GCC _silently_ allows the {-1} initialization for that type, even
with -Wall.

Uncommenting the c= -1 member of enum, or explicit casting p-&gt;what to
int solves the problem, of course.  But maybe some warning would be
appropriate in such a situation?  It takes some time for me to
recognize what leads me to that cool .L2: jmp .L2 from seemengly
harmless C code...  Or maybe I don't know some healthy compiler
option?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050829052920</emailId><senderName>kranthi</senderName><senderEmail>kranthi@effigent.net</senderEmail><timestampReceived>2005-08-29 05:29:20-0400</timestampReceived><subject>How can  execute .cpp program with  gcc command</subject><body>

How can  execute .cpp program with  gcc command

Plz..

-- 
Using Opera's revolutionary e-mail client: http://www.opera.com/m2/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050105225533</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-05 22:55:33-0400</timestampReceived><subject>Re: [i386] Why g++ _always_ link an executable with libm.so?</subject><body>

On Wed, Jan 05, 2005 at 11:44:33PM +0100, Gabriel Dos Reis wrote:
&gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; 
&gt; | &gt; | Ok, but do we force users to use libm every time libc is used?
&gt; | &gt; 
&gt; | &gt; What is libc?  How do you define it?
&gt; | 
&gt; | I assume GLIBC, of course.  For x86, but I don't know either this
&gt; | matters.
&gt; 
&gt; That is a very narrow definition; however, are you claiming that the
&gt; mathematical functions are not part of GLIBC?

Of course no, I'm not.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050117171853</emailId><senderName>Jan-Benedict Glaw</senderName><senderEmail>jbglaw@lug-owl.de</senderEmail><timestampReceived>2005-01-17 17:18:53-0400</timestampReceived><subject>Re: Are string literals _always_ allocated in the RO section?</subject><body>

On Sun, 2005-01-16 00:18:20 +0100, Gabriel Dos Reis &lt;gdr@integrable-solutions.net&gt;
wrote in message &lt;m3brbq1dtv.fsf@uniton.integrable-solutions.net&gt;:
&gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; 
&gt; | This program:
&gt; | 
&gt; | void x(char *s)
&gt; | {
&gt; |     *s= 'x';
&gt; | }
&gt; | 
&gt; | main()
&gt; | {
&gt; |     x("y");
&gt; | }

&gt; | not &lt;const char*&gt; does nothing in this case.  Should it be considered
&gt; | as a bug?
&gt; 
&gt; In the program? Yes.

Maybe you'd tell him more about the magic :)

char *mytext = "hello";

results in a pointer (which you may later on make pointing to a
different location) that points to a static, read-only string containing
"hello\0". However, if you need to change the text, you need to do it
like this:

char mytext[] = "hello";

Cf. section 6.4.5.6 of the C99 standard.

MfG, JBG

-- 
Jan-Benedict Glaw       jbglaw@lug-owl.de    . +49-172-7608481             _ O _
"Eine Freie Meinung in  einem Freien Kopf    | Gegen Zensur | Gegen Krieg  _ _ O
 fuer einen Freien Staat voll Freier Bürger" | im Internet! |   im Irak!   O O O
ret = do_actions((curr | FREE_SPEECH) &amp; ~(NEW_COPYRIGHT_LAW | DRM | TCPA));

["signature.asc" (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20050118231220</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-18 23:12:20-0400</timestampReceived><subject>Re: Incorrect warning message?</subject><body>

On Mon, Jan 17, 2005 at 08:48:59AM -0800, Joe Buck wrote:
&gt; On Sun, Jan 16, 2005 at 03:32:42AM +0500, Denis Zaitsev wrote:
&gt; &gt; On Sat, Jan 15, 2005 at 11:05:44PM +0100, Andreas Schwab wrote:
&gt; &gt; &gt; Read question 11.10 of the C faq.
&gt; &gt; &gt; 
&gt; &gt; &gt; http://www.eskimo.com/~scs/C-faq/q11.10.html
&gt; &gt; 
&gt; &gt; Thanks.  It's interesting.  :)
&gt; 
&gt; That FAQ answer is poor.  You can find the real reason in the answer
&gt; to question 1 in
&gt; 
&gt; http://www.jamesd.demon.co.uk/csc/faq.html#PartC
&gt; 
&gt; (this is for C++ but the reasoning applies to C as well).

Thanks.  Good explanation.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115212248</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-15 21:22:48-0400</timestampReceived><subject>Are string literals _always_ allocated in the RO section?</subject><body>

This program:

void x(char *s)
{
    *s= 'x';
}

main()
{
    x("y");
}

is compiled plainly but cathes SIGSEGV in the 

        *s= 'x' 

line.  And it's because the string "y" is put in the .text section.
And the fact that the x()'s parm is explicitly declared as &lt;char*&gt;,
not &lt;const char*&gt; does nothing in this case.  Should it be considered
as a bug?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115212746</emailId><senderName>Dale Johannesen</senderName><senderEmail>dalej@apple.com</senderEmail><timestampReceived>2005-01-15 21:27:46-0400</timestampReceived><subject>Re: Are string literals _always_ allocated in the RO section?</subject><body>


On Jan 15, 2005, at 1:22 PM, Denis Zaitsev wrote:

&gt; This program:
&gt;
&gt; void x(char *s)
&gt; {
&gt;     *s= 'x';
&gt; }
&gt;
&gt; main()
&gt; {
&gt;     x("y");
&gt; }
&gt;
&gt; is compiled plainly but cathes SIGSEGV in the
&gt;
&gt;         *s= 'x'
&gt;
&gt; line.

That's what's supposed to happen.  Storing into a string
constant is invalid C.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115214126</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-15 21:41:26-0400</timestampReceived><subject>Re: Are string literals _always_ allocated in the RO section?</subject><body>

On Sun, Jan 16, 2005 at 02:22:48AM +0500, Denis Zaitsev wrote:
&gt; the string "y" is put in the .text section.

Oh, it's put into the .rodata section.  A'm sorry.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115210836</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-15 21:08:36-0400</timestampReceived><subject>Incorrect warning message?</subject><body>

It's an example:

void c(const char *s){}
void cc(const char **p){}
void x()
{
    char *s;
    c(s);
    cc(&amp;s);
}

And it's the warning GCC produces for it:

bug.c: In function `x':
bug.c:7: warning: passing arg 1 of `cc' from incompatible pointer type

Is this message correct?  Doesn't the &lt;const char&gt; for the second
defun's declaration mean exactly the same as it means for the first -
the fact that defun doesn't modify the content of the corresponding
array?
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115220544</emailId><senderName>Andreas Schwab</senderName><senderEmail>schwab@suse.de</senderEmail><timestampReceived>2005-01-15 22:05:44-0400</timestampReceived><subject>Re: Incorrect warning message?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

&gt; It's an example:
&gt;
&gt; void c(const char *s){}
&gt; void cc(const char **p){}
&gt; void x()
&gt; {
&gt;     char *s;
&gt;     c(s);
&gt;     cc(&amp;s);
&gt; }
&gt;
&gt; And it's the warning GCC produces for it:
&gt;
&gt; bug.c: In function `x':
&gt; bug.c:7: warning: passing arg 1 of `cc' from incompatible pointer type
&gt;
&gt; Is this message correct?

Read question 11.10 of the C faq.

http://www.eskimo.com/~scs/C-faq/q11.10.html

Andreas.

-- 
Andreas Schwab, SuSE Labs, schwab@suse.de
SuSE Linux Products GmbH, Maxfeldstraße 5, 90409 Nürnberg, Germany
Key fingerprint = 58CA 54C7 6D53 942B 1756  01D3 44D5 214B 8276 4ED5
"And now for something completely different."
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115223242</emailId><senderName>Denis Zaitsev</senderName><senderEmail>zzz@anda.ru</senderEmail><timestampReceived>2005-01-15 22:32:42-0400</timestampReceived><subject>Re: Incorrect warning message?</subject><body>

On Sat, Jan 15, 2005 at 11:05:44PM +0100, Andreas Schwab wrote:
&gt; Denis Zaitsev &lt;zzz@anda.ru&gt; writes:
&gt; 
&gt; &gt; It's an example:
&gt; &gt;
&gt; &gt; void c(const char *s){}
&gt; &gt; void cc(const char **p){}
&gt; &gt; void x()
&gt; &gt; {
&gt; &gt;     char *s;
&gt; &gt;     c(s);
&gt; &gt;     cc(&amp;s);
&gt; &gt; }
&gt; &gt;
&gt; &gt; And it's the warning GCC produces for it:
&gt; &gt;
&gt; &gt; bug.c: In function `x':
&gt; &gt; bug.c:7: warning: passing arg 1 of `cc' from incompatible pointer type
&gt; &gt;
&gt; &gt; Is this message correct?
&gt; 
&gt; Read question 11.10 of the C faq.
&gt; 
&gt; http://www.eskimo.com/~scs/C-faq/q11.10.html

Thanks.  It's interesting.  :)
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050117164859</emailId><senderName>Joe Buck</senderName><senderEmail>joe.buck@synopsys.com</senderEmail><timestampReceived>2005-01-17 16:48:59-0400</timestampReceived><subject>Re: Incorrect warning message?</subject><body>

On Sun, Jan 16, 2005 at 03:32:42AM +0500, Denis Zaitsev wrote:
&gt; On Sat, Jan 15, 2005 at 11:05:44PM +0100, Andreas Schwab wrote:
&gt; &gt; Read question 11.10 of the C faq.
&gt; &gt; 
&gt; &gt; http://www.eskimo.com/~scs/C-faq/q11.10.html
&gt; 
&gt; Thanks.  It's interesting.  :)

That FAQ answer is poor.  You can find the real reason in the answer
to question 1 in

http://www.jamesd.demon.co.uk/csc/faq.html#PartC

(this is for C++ but the reasoning applies to C as well).
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20050115231820</emailId><senderName>Gabriel Dos Reis</senderName><senderEmail>gdr@integrable-solutions.net</senderEmail><timestampReceived>2005-01-15 23:18:20-0400</timestampReceived><subject>Re: Are string literals _always_ allocated in the RO section?</subject><body>

Denis Zaitsev &lt;zzz@anda.ru&gt; writes:

| This program:
| 
| void x(char *s)
| {
|     *s= 'x';
| }
| 
| main()
| {
|     x("y");
| }
| 
| is compiled plainly but cathes SIGSEGV in the 
| 
|         *s= 'x' 
| 
| line.  And it's because the string "y" is put in the .text section.
| And the fact that the x()'s parm is explicitly declared as &lt;char*&gt;,
| not &lt;const char*&gt; does nothing in this case.  Should it be considered
| as a bug?

In the program? Yes.

-- Gaby
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email></emails>