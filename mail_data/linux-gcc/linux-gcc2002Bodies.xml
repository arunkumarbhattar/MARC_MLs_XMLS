<?xml version="1.0" encoding="utf-8"?>
<emails><email><emailId>20020123164622</emailId><senderName>Todd Roy</senderName><senderEmail>todd_m_roy@yahoo.com</senderEmail><timestampReceived>2002-01-23 16:46:22-0400</timestampReceived><subject>trying to compile glibc-2.2.5</subject><body>

Hi all, I'm trying to compile glibc-2.2.5 and
I'm getting the following:

/home/tmr/build/glibc-2.2.5/compile/elf/ld-linux.so.2
--library-path
/home/tmr/build/glibc-2.2.5/compile:/home/tmr/build/glibc-2.2.5/compile/math:/home/tmr \
/build/glibc-2.2.5/compile/elf:/home/tmr/build/glibc-2.2.5/compile/dlfcn:/home/tmr/bui \
ld/glibc-2.2.5/compile/nss:/home/tmr/build/glibc-2.2.5/compile/nis:/home/tmr/build/gli \
bc-2.2.5/compile/rt:/home/tmr/build/glibc-2.2.5/compile/resolv:/home/tmr/build/glibc-2.2.5/compile/crypt:/home/tmr/build/glibc-2.2.5/compile/linuxthreads
                
/home/tmr/build/glibc-2.2.5/compile/sunrpc/rpcgen -Y
../scripts -c rpcsvc/bootparam_prot.x -o
/home/tmr/build/glibc-2.2.5/compile/sunrpc/xbootparam_prot.T
execv: Permission denied
/home/tmr/build/glibc-2.2.5/compile/sunrpc/rpcgen: C
preprocessor failed with exit code 1
make[2]: ***
[/home/tmr/build/glibc-2.2.5/compile/sunrpc/xbootparam_prot.stmp]
Error 1
make[2]: Leaving directory
`/var/build/glibc-2.2.5/sunrpc'
make[1]: *** [sunrpc/others] Error 2
make[1]: Leaving directory `/var/build/glibc-2.2.5'
make: *** [all] Error 2
[pcx4168] /home/tmr/build/glibc-2.2.5/compile

I know about the cpp problem with gcc-2.95.3 and
previous versions of glibc.

Here is the relevent data:
$ ll -d /lib/cpp*
lrwxrwxrwx    1 root     root           12 Jan 23
08:42 /lib/cpp -&gt; /usr/bin/cpp*
$ ll /usr/bin/cpp
-rwxr-xr-x    1 root     bin         70172 May 27 
2001 /usr/bin/cpp*
$ ll /usr/lib/gcc-lib/i386-slackware-linux/2.95.3/cpp*
-rwxr-xr-x    1 root     root       127430 May 27 
2001
/usr/lib/gcc-lib/i386-slackware-linux/2.95.3/cpp0*

I tried reinstalling the standard gcc.tgz from
slackware-8.0 after removing all traces of my previous
installation.  

Thanks in advance,
  Todd




__________________________________________________
Do You Yahoo!?
Send FREE video emails in Yahoo! Mail!
http://promo.yahoo.com/videomail/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020124084856</emailId><senderName>Andreas Jaeger</senderName><senderEmail>aj@suse.de</senderEmail><timestampReceived>2002-01-24 08:48:56-0400</timestampReceived><subject>Re: trying to compile glibc-2.2.5</subject><body>

Todd Roy &lt;todd_m_roy@yahoo.com&gt; writes:

&gt; Hi all, I'm trying to compile glibc-2.2.5 and
&gt; I'm getting the following:
&gt; 
&gt; /home/tmr/build/glibc-2.2.5/compile/elf/ld-linux.so.2
&gt; --library-path
&gt; /home/tmr/build/glibc-2.2.5/compile:/home/tmr/build/glibc-2.2.5/compile/math:/home/t \
&gt; mr/build/glibc-2.2.5/compile/elf:/home/tmr/build/glibc-2.2.5/compile/dlfcn:/home/tmr \
&gt; /build/glibc-2.2.5/compile/nss:/home/tmr/build/glibc-2.2.5/compile/nis:/home/tmr/bui \
&gt; ld/glibc-2.2.5/compile/rt:/home/tmr/build/glibc-2.2.5/compile/resolv:/home/tmr/build/glibc-2.2.5/compile/crypt:/home/tmr/build/glibc-2.2.5/compile/linuxthreads
&gt;                 
&gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/rpcgen -Y
&gt; ../scripts -c rpcsvc/bootparam_prot.x -o
&gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/xbootparam_prot.T
&gt; execv: Permission denied

There's scripts/cpp, check that it has execute permissions
and if not set them.

Andreas
-- 
 Andreas Jaeger
  SuSE Labs aj@suse.de
   private aj@arthur.inka.de
    http://www.suse.de/~aj
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020124153527</emailId><senderName>"Todd M. Roy"</senderName><senderEmail>troy@holstein.com</senderEmail><timestampReceived>2002-01-24 15:35:27-0400</timestampReceived><subject>Re: trying to compile glibc-2.2.5</subject><body>

&gt; X-Apparently-To: todd_m_roy@yahoo.com via web13606.mail.yahoo.com; 24 Jan 2002 \
&gt;                 00:48:58 -0800 (PST)
&gt; X-Track: 1: 40
&gt; X-Authentication-Warning: gee.suse.de: aj set sender to aj@suse.de using -f
&gt; Sender: aj@suse.de
&gt; Mail-Copies-To: never
&gt; Cc: linux-gcc@vger.kernel.org
&gt; From: Andreas Jaeger &lt;aj@suse.de&gt;
&gt; Date: Thu, 24 Jan 2002 09:48:56 +0100
&gt; 
&gt; Todd Roy &lt;todd_m_roy@yahoo.com&gt; writes:
&gt; 
&gt; &gt; Hi all, I'm trying to compile glibc-2.2.5 and
&gt; &gt; I'm getting the following:
&gt; &gt; 
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/elf/ld-linux.so.2
&gt; &gt; --library-path
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile:/home/tmr/build/glibc-2.2.5/compile/math:/home \
&gt; &gt; /tmr/build/glibc-2.2.5/compile/elf:/home/tmr/build/glibc-2.2.5/compile/dlfcn:/home \
&gt; &gt; /tmr/build/glibc-2.2.5/compile/nss:/home/tmr/build/glibc-2.2.5/compile/nis:/home/t \
&gt; &gt; mr/build/glibc-2.2.5/compile/rt:/home/tmr/build/glibc-2.2.5/compile/resolv:/home/t \
&gt; &gt; mr/build/glibc-2.2.5/compile/crypt:/home/tmr/build/glibc-2.2.5/compile/linuxthreads
&gt; &gt;                 
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/rpcgen -Y
&gt; &gt; ../scripts -c rpcsvc/bootparam_prot.x -o
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/xbootparam_prot.T
&gt; &gt; execv: Permission denied
&gt; 
&gt; There's scripts/cpp, check that it has execute permissions
&gt; and if not set them.
&gt; 
&gt; Andreas
&gt; -- 
&gt; Andreas Jaeger
&gt; SuSE Labs aj@suse.de
&gt; private aj@arthur.inka.de
&gt; http://www.suse.de/~aj
&gt; 

Thanks Andreas.  That was exactly the problem.  I was mislead
by the other problem I found in google!.

-- todd --
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020129133227</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-01-29 13:32:27-0400</timestampReceived><subject>wrap symbols</subject><body>

I tried to write a small wrap around symbol, but then I got 
difficulties running it. 
Here is what I tried to do.
"file1.c" contains a simple link list and then I wrote a wrap for malloc just 
like what you mentioned. I did not even write __real_malloc , I have 
"file2.c"
 void *
 __wrap_malloc (int c)
 {
 printf ("malloc called with %ld\n", c);
 return __real_malloc (c);
 }

to see if worked. 
I compiled them seperately (gcc -c filex.c). 
And linked them as:
"ld --wrap malloc file1.o file2.o -lc"
I got a warnning that _start symbol was missing so I used "e" option (e 
0x2300). And I got a file that is executable and I cannot run it. Would you 
please tell me where I am wrong. I really appreciate your help.
Good day,

Mehran
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020121064342</emailId><senderName>Ulrich Drepper</senderName><senderEmail>drepper@redhat.com</senderEmail><timestampReceived>2002-01-21 06:43:42-0400</timestampReceived><subject>glibc 2.2.5</subject><body>

I've uploaded the files

  glibc-2.2.5.tar.bz2               (also .gz)
  glibc-linuxthreads-2.2.5.tar.bz2  (also .gz)
  glibc-2.2.4-2.2.5.diff.bz2        (also .gz)
  glibc-2.2.5pre1-2.2.5.diff.bz2    (also .gz)

to

  ftp://sources.redhat.com/pub/glibc/releases/

The files will shortly appear on

  ftp://ftp.gnu.org/pub/gnu/glibc/

and all the mirrors (of both servers) world-wide.  Please use mirrors
if possible.

The user visible changes in this release include:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Version 2.2.5

* Stephen Moshier implemented log2, log10, powl and cbrtl for the
  128-bit long double format.

* Masahide Washizawa contributed iconv modules for IBM1132, IBM1133, IBM1160,
  IBM1161, and IBM1162 charsets.

* Andreas Jaeger contributed a port to x86-64/Linux.

* Peter Bruin contributed a port to PowerPC/Hurd.

* libc functions using I/O streams now can handle wide-oriented streams
  as well.

* optimizations in the dynamic linker.  Binaries created by recent binutils
  versions start up quicker due to reduced time spend on relocations.

* Support for use of gcc3 added by Jakub Jelinek and HJ Lu.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Despite this short list the changes are quite long and complicated.
The dynamic linker change as well as the gcc3 support are quite
complicated and potentially carry the risk of problems.  But we don't
expect any problems and therefore upgrading to version is advised.
Installation is not easy and has the potential to ruin your system.
Therefore it is highly encouraged to use the packages provided by the
distribution maker once they become available.

The release has been tested and no big problems were reported.  Only
on Alpha one of the tests (reldep6 in elf/) fails due to a bug in the
binutils.  No solution exists for this at this point so just ignore
the problem for now.

If no dangerous problems are found this will be the last release in
the 2.2 series.  Work on 2.3 is already on the way and all efforts are
concentrated on this.


As usual, I couldn't have done the work alone.  The usual crowd is
responsible and deserves thanks:

	Wolfram Gloger
	Bruno Haible
	Richard Henderson
	Andreas Jaeger
	Jakub Jelinek
	Thorsten Kukuk
	Kaz Kylheku
	H.J. Lu
	Roland McGrath
	Stephen L Moshier
	Andreas Schwab
	Masahide Washizawa

plus many more who send reports and patches.

-- 
---------------.                          ,-.   1325 Chesapeake Terrace
Ulrich Drepper  \    ,-------------------'   \  Sunnyvale, CA 94089 USA
Red Hat          `--' drepper at redhat.com   `------------------------
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020124153534</emailId><senderName>"Todd M. Roy"</senderName><senderEmail>troy@holstein.com</senderEmail><timestampReceived>2002-01-24 15:35:34-0400</timestampReceived><subject>Re: trying to compile glibc-2.2.5</subject><body>

&gt; X-Apparently-To: todd_m_roy@yahoo.com via web13606.mail.yahoo.com; 24 Jan 2002 \
&gt;                 00:48:58 -0800 (PST)
&gt; X-Track: 1: 40
&gt; X-Authentication-Warning: gee.suse.de: aj set sender to aj@suse.de using -f
&gt; Sender: aj@suse.de
&gt; Mail-Copies-To: never
&gt; Cc: linux-gcc@vger.kernel.org
&gt; From: Andreas Jaeger &lt;aj@suse.de&gt;
&gt; Date: Thu, 24 Jan 2002 09:48:56 +0100
&gt; 
&gt; Todd Roy &lt;todd_m_roy@yahoo.com&gt; writes:
&gt; 
&gt; &gt; Hi all, I'm trying to compile glibc-2.2.5 and
&gt; &gt; I'm getting the following:
&gt; &gt; 
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/elf/ld-linux.so.2
&gt; &gt; --library-path
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile:/home/tmr/build/glibc-2.2.5/compile/math:/home \
&gt; &gt; /tmr/build/glibc-2.2.5/compile/elf:/home/tmr/build/glibc-2.2.5/compile/dlfcn:/home \
&gt; &gt; /tmr/build/glibc-2.2.5/compile/nss:/home/tmr/build/glibc-2.2.5/compile/nis:/home/t \
&gt; &gt; mr/build/glibc-2.2.5/compile/rt:/home/tmr/build/glibc-2.2.5/compile/resolv:/home/t \
&gt; &gt; mr/build/glibc-2.2.5/compile/crypt:/home/tmr/build/glibc-2.2.5/compile/linuxthreads
&gt; &gt;                 
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/rpcgen -Y
&gt; &gt; ../scripts -c rpcsvc/bootparam_prot.x -o
&gt; &gt; /home/tmr/build/glibc-2.2.5/compile/sunrpc/xbootparam_prot.T
&gt; &gt; execv: Permission denied
&gt; 
&gt; There's scripts/cpp, check that it has execute permissions
&gt; and if not set them.
&gt; 
&gt; Andreas
&gt; -- 
&gt; Andreas Jaeger
&gt; SuSE Labs aj@suse.de
&gt; private aj@arthur.inka.de
&gt; http://www.suse.de/~aj
&gt; 

Thanks Andreas.  That was exactly the problem.  I was mislead
by the other problem I found in google!.

-- todd --
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020129225839</emailId><senderName></senderName><senderEmail>lawson_whitney</senderEmail><timestampReceived>2002-01-29 22:58:39-0400</timestampReceived><subject>Re: wrap symbols</subject><body>

On Tue, 29 Jan 2002, Mehran Rezaei wrote:

&gt; I tried to write a small wrap around symbol, but then I got
&gt; difficulties running it.

&gt; I compiled them seperately (gcc -c filex.c).
&gt; And linked them as:
&gt; "ld --wrap malloc file1.o file2.o -lc"

Use "gcc -o wrapped -Wl,--wrap,malloc file1.o file2.o"
or so here, I think, or look up what the start files are and feed them
to ld yourself if you like.

&gt; I got a warnning that _start symbol was missing so I used "e" option (e
&gt; 0x2300). And I got a file that is executable and I cannot run it. Would you
&gt; please tell me where I am wrong. I really appreciate your help.
&gt; Good day,
&gt;
&gt; Mehran

Lawson

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020309205434</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-03-09 20:54:34-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.1 is released.</subject><body>

This is the beta release of binutils 2.12.90.0.1 for Linux, which is
based on binutils 2002 0307 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.1 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.1.tar.gz. Source code.
2. binutils-2.11.93.0.2-2.12.90.0.1.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.1-1.i386.rpm. IA-32 binary RPM for RedHat 7.1.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.1.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
03/08/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020401162154</emailId><senderName></senderName><senderEmail>iemailedtheworld7260t44@rediff.com</senderEmail><timestampReceived>2002-04-01 16:21:54-0400</timestampReceived><subject>If you could say anything you wanted to, what would it be? 1343YJiE1-817paqk2215ebvB2-72l27</subject><body>

------=_NextPart_000_00C3_11B11C7B.B1184D61
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: base64

SSBoYXZlIGEgY2hhbmNlIHRvIHNheSBzb21ldGhpbmcsIGFueXRoaW5nIEkg
d2FudCwgdG8gdHdvLWh1bmRyZWQgdGhvdXNhbmQgcGVvcGxlLiAgV2hhdCB3
b3VsZCB5b3Ugc2F5IGlmIHlvdSB3ZXJlIGluIG15IHNob2VzIHJpZ2h0IG5v
dz8NCkxldCBtZSBzdGFydCBieSBzYXlpbmcgSSdtIGEgMzUgeWVhciBvbGQg
Z3V5IGluIEF1c3RpbiwgVGV4YXMgVVNBIHdobyBqdXN0IGhhZCBhIGJpcnRo
ZGF5IG9uZSB3ZWVrIGFnby4gIEkgc2l0IG9uIHRoZSBiYWNrIHBvcmNoIGFs
b25lIHRoaW5raW5nIGFib3V0IHdoYXQgdG8gc2F5LiAgSSd2ZSBiZWVuIGFs
b25lIGluIG15IGxpZmUgZm9yIGFib3V0IHNpeCBtb250aHMuICBNeSB3aWZl
IGFuZCBkYXVnaHRlciBnb25lIG5vdyB3aGF0IHNlZW1zIGFuIGV0ZXJuaXR5
LiAgU28sIHdoYXQgd291bGQgYSBndXkgbGlrZSBtZSBzYXk/ICBTaG91bGQg
SSB0YWxrIGFib3V0IGFsbCB0aGUgdGVycm9yaXNtIG9yIHdoYXQgaGFwcGVu
ZWQgb24gU2VwdGVtYmVyIDExdGg/ICBPciBob3cgYWJvdXQgd2hhdCBoYXMg
Y2F1c2VkIHRoZSBhdHRhY2tzIGluIHRoZSBmaXJzdCBwbGFjZTogIEVhY2gg
b2YgdXMgd2l0aCBvdXIgdmVyeSBvd24gYmVsaWVmcy4NCkRvZXMgaXQgcmVh
bGx5IG1hdHRlciB3aGF0IHdlIGVhY2ggY2FsbCBvdXIgR29kPyAgSXMgaXQg
cG9zc2libGUgdG8gYWdyZWUgdGhhdCB0aGVyZSBpcyBhIEhpZ2hlciBBdXRo
b3JpdHkgb3IgQmVpbmcgZWl0aGVyIHdpdGhpbiBvciBvdXRzaWRlIG9mIG91
ciBzZWx2ZXMgYW5kIGp1c3QgbGVhdmUgaXQgYXQgdGhhdD8NCklmIHlvdSBh
cyBhIHBlcnNvbiBoYXZlIGEgYmVsaWVmIHdpdGhpbiB5b3VyIG93biBsaWZl
IGluIHNvbWUga2luZCBvZiBoaWdoZXIgcG93ZXIgLSB0aGF0J3Mgd2hhdCBj
b3VudHMhICBJdCBpcyB0aGF0IGJlbGllZiwgaG93ZXZlciBtZWFnZXIsIHRo
YXQgZ2l2ZXMgTmF0dXJhbCBMYXcgbGlmZS4gIEl0IGlzIHRoYXQgYmVsaWVm
IHRoYXQgZ2l2ZXMgeW91IHRoZSBlbmVyZ3kgdG8gZG8gdGhpbmdzIGluIHlv
dXIgbGlmZS4gIFdoZW4geW91IGhhdmUgc3Ryb25nIGJlbGllZnMgeW91IGRv
IHN0cm9uZyB0aGluZ3MsIHdoZW4geW91IGhhdmUgd2VhayBiZWxpZWZzIHlv
dSBkbyBsaXR0bGUgb3Igbm90aGluZy4NCk5vIG1hdHRlciB3aGF0IHNwaXJp
dHVhbCBiZWxpZWZzIHlvdSBtYXkgaG9sZCwgZWFjaCBvZiB0aGVtIGhhdmUg
c2V2ZXJhbCBiYXNpYyBpZGVhcyBpbiBjb21tb24sIGFuZCBtb3N0IGFsbCBv
ZiB0aGVtIHdpbGwgYm9pbCBkb3duIHRvOg0KMS4JU2ltcGx5IHJlc3BlY3Qg
ZWFjaCBvdGhlciwNCjIuCW5vdCBvbmx5IHZhbHVlLCBidXQgY29tYmluZSBl
YWNoIG90aGVycyBkaWZmZXJlbmNlcywgYW5kDQozLglsZXQgb3VyIGxpZmUg
YmUgYSByZWZsZWN0aW9uIG9mIHdoYXQgd2UgYmVsaWV2ZSBhbmQgbm90IG9m
IHdoYXQgb3RoZXJzIHdvdWxkIGhhdmUgdXMgdG8gYmUuDQpJIGd1ZXNzIGlm
IGl0IHdlcmUgYWxsIHJlYWxseSB0aGlzIHNpbXBsZSB3ZSB3b3VsZCBhbHJl
YWR5IGJlIGRvaW5nIGl0LCBodWguICBMb29rLCBJIG1hbmFnZWQgdG8gZmlu
ZCBzb21ldGhpbmcgdG8gc2F5IGFmdGVyIGFsbC4NClRoaXMgaXMgbXkgaG9w
ZSBmb3IgeW91ciBsaWZlOiBCZWxpZXZlIHN0cm9uZ2x5IQ0KDQpTZW5kIGEg
cmVwbHkgdG8gaWVtYWlsZWR0aGV3b3JsZEByZWRpZmYuY29tIGlmIHlvdSB3
YW50Lg0KDQoNCg0KDQo5ODg4RGw1DQo=

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020501182030</emailId><senderName>Glynn Clements</senderName><senderEmail>glynn.clements@virgin.net</senderEmail><timestampReceived>2002-05-01 18:20:30-0400</timestampReceived><subject>Re: timing</subject><body>


Mehran Rezaei wrote:

&gt; For the sake of performance analysis of some programs, I am using
&gt; clock() function call. I am running the programs on a linux box (Redhat
&gt; 7.2, and my machine is i686).
&gt; However, I am not getting the correct results as I expected. Perhaps I
&gt; miss something necessary for using timing function calls.

[snip]

&gt; To my understanding both printfs should at least show 10 seconds
&gt; (because of "sleep(10)"). But they do not.

clock() reports the amount of CPU time used by the program. sleep()
will use negligible CPU time (probably too small to measure).

-- 
Glynn Clements &lt;glynn.clements@virgin.net&gt;
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508232212</emailId><senderName>george anzinger</senderName><senderEmail>george@mvista.com</senderEmail><timestampReceived>2002-05-08 23:22:12-0400</timestampReceived><subject>Re: Measure time</subject><body>

Der Herr Hofrat wrote:
&gt; 
&gt; &gt;
&gt; &gt; Hi,
&gt; &gt;
&gt; &gt; ftime() will return milliseconds, but it's considered an obsolete function.
&gt; &gt; You could use gettimeofday() (as Richard Johnson suggested) to get
&gt; &gt; microseconds and divide them to get milliseconds, although I don't know how
&gt; &gt; time critical your routines are.
&gt; &gt;
&gt; &gt; If you're still looking for nanoseconds, I'm told you can use
&gt; &gt; clock_gettime() but it's still quite unavailable (I've never seen it myself,
&gt; &gt; yet).. however even if it was available you possibly wouldn't get a very
&gt; &gt; high resolution from it with current systems..
&gt; &gt;
&gt; clock_gettime() is available in the hard realtime extensions like RTLinux .
&gt; The clock resolution is limited to 32ns though - and atleast on X86 I don't
&gt; think there is a way to get below that.

The high-res-timers patch provides clock_gettime() with resolution to
the TSC increment.  But you need to understand that this is a system
call which can take on the order of 1000 or these units.  Add in a
little cach hit/ miss and interrupt randomness and well...

Still, there it is.  Check out the web site below.

-- 
George Anzinger   george@mvista.com
High-res-timers:  http://sourceforge.net/projects/high-res-timers/
Real time sched:  http://sourceforge.net/projects/rtsched/
Preemption patch: http://www.kernel.org/pub/linux/kernel/people/rml
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020518204959</emailId><senderName>"Wild Cats"</senderName><senderEmail>hereunder@dr.com</senderEmail><timestampReceived>2002-05-18 20:49:59-0400</timestampReceived><subject>Call me                    79560</subject><body>


Hello I am your hot lil horny toy.
    I am the one you dream About,
    I am a very open minded person,
    Love to talk about and any subject.


    Fantasy is my way of life, 
    Ultimate in sex play.

     Ummmmmmmmmmmmmm
     I am Wet and ready for you.

     It is not your looks but your imagination that matters most,
     With My sexy voice I can make your dream come true...
  
     Hurry Up! call me let me Cummmmm for you..........................


TOLL-FREE:             1-877-451-TEEN (1-877-451-8336)

For phone billing:     1-900-993-2582




















































-- 
_______________________________________________
Sign-up for your own FREE Personalized E-mail at Mail.com
http://www.mail.com/?sr=signup

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020527084622</emailId><senderName>"WWW.BAU-CENTER.COM"</senderName><senderEmail>bau-center@firemail.de</senderEmail><timestampReceived>2002-05-27 08:46:22-0400</timestampReceived><subject>CD ROM</subject><body>


You are offering or searching for used and new Construction equipment in Europe? You \
can reach with our program contening the whole database of our web site \
www.bau-center.com ( 10 000 E-Mail worlwide in Construction Industry), new customers \
in East and West Europe. You can order this program by clicking on the link below:

http://www.bau-center.com/german.php3?german=order

You can also add your advert for free in our web site, the most visited web site for \
used construction material in Europe.

Best Regards.

Your BMC Euronewspaper team.

Madame, Monsieur,

Nous vous ofrons la possibilite de contacter an un click tous les clients potentiels \
en EUrope de l'Est et Europe de l'Ouest. Notre CD Rom contient 10 000 adresses E Mail \
de notre base de donnees ( Entreprises BTP et Negociants Materiel BTP en Europe de \
l'Est et de l'Ouest. Ce CD Rom est en vente au prix de 100 EUROS. Vous pouvez le \
commander en cliquant sur le link suivant:

http://www.bau-center.com/german.php3?german=order

Salutations.

L'equipe BMC Euronewspaper

Sehr geehrte Damen und Herren,

wir bitten CD ROM mit Mailing programm und 10 000 E mail Adresse in der Bau bzw \
Baumaschinen Branche. Damit koennen Sie Ihre neue Kunde in West und Ost Europa \
erreichen. Kicken Sie dafuer:

http://www.bau-center.com/german.php3?german=order

Mit freundlichen Gruessen.

Ihre BMC Team.
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020529182301</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-05-29 18:23:01-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.9 is released.</subject><body>

This is the beta release of binutils 2.12.90.0.9 for Linux, which is
based on binutils 2002 0526 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.9 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.9.tar.gz. Source code.
2. binutils-2.12.90.0.7-2.12.90.0.9.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.9-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.9.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
04/29/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020410195020</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-04-10 19:50:20-0400</timestampReceived><subject>The Linux binutils 2.12.90.4 is released.</subject><body>

This is the beta release of binutils 2.12.90.0.4 for Linux, which is
based on binutils 2002 0408 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.4 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.4.tar.gz. Source code.
2. binutils-2.12.90.0.3-2.12.90.0.4.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.4-1.i386.rpm. IA-32 binary RPM for RedHat 7.2.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.4.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
04/10/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020419162250</emailId><senderName>David Hollister</senderName><senderEmail>dhollister@igca.com</senderEmail><timestampReceived>2002-04-19 16:22:50-0400</timestampReceived><subject>Problems with "cross" development linking</subject><body>

Hello,

I have a development environment where I'd like to be able to use all 
libraries from a specified directory when compiling and linking.  Both 
the host and the "target" are x86, so I didn't build the "target" gcc 
as a cross-compiler.  In the past, our development machines always ran 
the same release as our target.  I'd like, however, to remove that 
restriction for the future.  What I've done seems to work fine if the 
"host" has the same or newer glibc as the "target", but I found that 
if the reverse is true, my setup breaks.

I am able to get all the proper executables called and the library 
paths set with the appropriate environment variables.  However, when I 
compile, this is what I see (in this example, the host is RedHat 6.2 
and the target is RedHat 7.2-based)

/space/target/bin/as: /lib/libc.so.6: version `GLIBC_2.2.3' not found 
(required by /space/target/bin/as)

I even tried the following:

LD_LIBRARY_PATH=/space/target/lib /space/target/lib/ld-linux.so.2 
/space/target/bin/gcc ...

Everything now appears to come from the right place (/space/target) 
except for "ld-linux.so.2".  In that case, I saw:

/space/target/lib/gcc-lib/i486-redhat-linux/2.96/cpp0: 
/lib/ld-linux.so.2: version `GLIBC_2.2.3' not found (required by 
/space/target/lib/libc.so.6)
/space/target/lib/gcc-lib/i486-redhat-linux/2.96/cpp0: 
/lib/ld-linux.so.2: version `GLIBC_2.2' not found (required by 
/space/target/lib/libc.so.6)

 From what I've seen on numerous searches all over the net, it would 
seem that /lib/ld-linux.so.? is hard-coded.  Is that true?  Is there 
any way to get the binaries in my target to look for ld-linux.so.2 
from the target directory?  Am I even in the right ballpark on how to 
attack this?

I hope I've described the situation well enough.  Any suggestions or 
help would be greatly appreciated.

Thanks.

-- 
David Hollister
Sr. Software Engineer
Innovative Gaming Corporation of America

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020420213912</emailId><senderName>"Manto"</senderName><senderEmail>ceri@firemail.de</senderEmail><timestampReceived>2002-04-20 21:39:12-0400</timestampReceived><subject>USED FORMWORK MANTO HUENNEBECK</subject><body>

DEAR SIR,

OUR COMPANY IS TRADING WITH USED CONSTRUCTION EQUIPMENT IN WEST AND EAST EUROPE.

WE HAVE FOR SALE MANTO HUENNEBECK FORMWORK IN VERY GOOD CONDITION COMPLET WITH CLAMPS.

1 000 SQM LOCATION GERMANY

ALSO FOR SALE PERI/DOKA/THYSSEN HUENNEBECK

IF INTEREST WE CAN SEND YOU PICTURES PER E-MAIL.

PRICE 10 % FROM NEW PRICE.

BEST REGARDS.

S.BUTAUX

HTTP://WWW.BAU-CENTER.COM

TEL: 00 49 177 57 57 329
TEL: 00 48 604 280 506
FAX: 00 49 25 61 95 950 4001
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020423230749</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-04-23 23:07:49-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.7 is released.</subject><body>

This is the beta release of binutils 2.12.90.0.7 for Linux, which is
based on binutils 2002 0423 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.7 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.7.tar.gz. Source code.
2. binutils-2.12.90.0.4-2.12.90.0.7.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.7-1.i386.rpm. IA-32 binary RPM for RedHat 7.2.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.7.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
04/23/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020312093718</emailId><senderName>´ºÌìµÄ½Å²½</senderName><senderEmail>iuhf@sfhs.net</senderEmail><timestampReceived>2002-03-12 09:37:18-0400</timestampReceived><subject>=?ISO-8859-1?Q?=B6=AC=CC=EC=B5=BD=C1=CB=CE=B2=C9=F9=A3=AC=B4=BA=CC=EC=BB=B9=D4=B6=C2=F0=A3=BF?=</subject><body>


   ÄÏ¾© ÃÓÎÔ¤¶©ÍøÊÇ¹úÄÚÖªÃûµÄ×¨Òµ \
ÃÓÎÍøÕ¾£¬È¥Äê£¬ÔÚ¡°Î¢Èí.ÖÐ¹ú¡±ÍøÕ¾Ö÷³ÖµÄ¹úÄÚÍøÕ¾ÆÀÑ¡ÖÐ£¬»ñµÃ¡°³É¹¦µç×ÓÉÌÎñÍøÕ¾¡±µÄ³ÆºÅ¡£


    2000ÄêÓë¡°ÕÐÐÐ¡±Ç©Ô¼£¬³ÉÎªÕÐÐÐÈ«¹ú·¶Î§ÄÚ¡°ÌØÔ¼ÍøÉÏÉÌ»§¡±£¬¾ß±¸ÁË¡°ÍøÉÏÖ§¸¶¡±¹¦ÄÜ¡£ÊÇ¹úÄÚµÚÒ»ÅúÕæÕýÒâÒåÉÏµÄµç×ÓÉÌÎñÍøÕ¾¡£


    ±¾Ô ÒÑ¿ªÍ¨¡°¹¤ÉÌÒøÐÐ¡±È«¹ú·¶Î§µÄ¡°Äµµ¤¿¨¡±ÔÚÏßÖ§¸¶ÏµÍ³£¬Îª±¾Õ¾ÊµÏÖÈ«ÃæµÄµç×ÓÉÌÎñ·½ \
ÔÌá¹©ÁË¿É¿¿µÄ±£Ö¤¡£

·þÎñÏîÄ¿£º

£¨1.£©ÍøÕ¾ÒÔ¸öÈË¡¢¼ÒÍ¥»òÅóÓÑ×é³ÉµÄµ¥ÔªÎª·þÎñÖ÷Ìå£¬ÊÜÀí±ö¹Ý·¹µê,·É»úÆ±µÈ¶àÏî \
ÃÓÎÏà¹ØÔ¤¶©£¬

£¨2.£©Îª×ÔÖúÓÎµÄ¿ÍÈËÌá¹©ÔÚÄÏ¾© \
ÃÓÎÆÚ¼äËùÐèµÄ¶àÖÖÐÍºÅ³µÁ¾£¬¼ÒÍ¥Àà×ÔÖúÓÎÍÆ¼ö7×ù¹ú²úÐ¡³µ¡£

£¨3.£©¹úÄÚ×î¿áµÄÓïÒôÁÄÌìÊÒ,Äã¿ÉÒÔÓÃËüÓëÔ¶·½ÅóÓÑÏó´òµç»°Ò»Ñù½»Ì¸,Ãâµç»°·Ñ¡£¶àÖÖ·ç¸ñµç×ÓºØ¿¨µÈÄúËÍ¸øÇ×ÅóºÃÓÑ,Ôö½øÇéÒê!!


£¨4.£©ÓëÄÏ¾©»éÀñÍøºÏ×÷ÍÆ³öÊ±ÉÐµÄ¡°ÍøÉÏÕ÷»é¡±Ãâ·Ñ·þÎñ£¬ÎªÓÐÇéÈËÇ£Ïß´îÇÅ¡£
  
 ÍøÖ·£ºhttp://www.njchina.com    http://www.njchina.com/jd/jydjtop.htm

£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­
£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­£­
ÒÔÉÏÐÅÏ¢ÓÉ¡°½ð ÃÍø ç¹«Ë¾¡±Ìá¹©·¢ËÍ·þÎñ£¬Ã¿50000·ÝÊÕ·Ñ80Ôª¡£

Èç¹ûÄúÐèÒªÎÒÃÇÎªÄú·¢²¼²úÆ·Ðû´«¹ã¸æ£¬¾´ÇëÓëÎÒÃÇÁªÏµ¡£025-6522502

ÓÊ¼þ·¢Íù
To: &lt;linux-gcc@vger.kernel.org&gt;
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020313081317</emailId><senderName></senderName><senderEmail>jeanluc128gp</senderEmail><timestampReceived>2002-03-13 08:13:17-0400</timestampReceived><subject>remove</subject><body>

 
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020313081332</emailId><senderName></senderName><senderEmail>jeanluc128gp</senderEmail><timestampReceived>2002-03-13 08:13:32-0400</timestampReceived><subject>(no subject)</subject><body>

remove
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020317011450</emailId><senderName></senderName><senderEmail>1w1vtc</senderEmail><timestampReceived>2002-03-17 01:14:50-0400</timestampReceived><subject>=?ISO-8859-1?Q?**=A5[=B7=F9=A9=B1=BC=F6=AFP=A9=DB=B6=D2=A4=A4**?=</subject><body>

*** =A5=FE=AC=D9=A5d=B0=D5=AC=B5=C2=FB=A5[=B7=F9=A9=B1=BC=F6=AFP=A9=DB=B6=D2=A4=A4 ***

1. =A4=EB=A6=AC=A4J 5-10 =B8U
2. =A4@=A4H=A7Y=A5i=B6}=A9=B1 , =A4=A3=A5=B2=A6h=BD=D0=A4H=A4=E2 !
3. =A5=FE=AC=D9=A5=D8=ABe=A6@=A6=B3 50 =B4X=AD=D3=A5[=B7=F9=A6=A8=A5\=AA=BA=AE=D7=A8=D2 !
4. =AC=B5=C2=FB=A4f=A8=FD=BFW=AFS , =C5=FD=AB=C8=A4H=A6Y=A4F=A6^=A8=FD=B5L=BDa !!


=BA=F4=A7} : 

http://211.78.42.181:5168


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020319173226</emailId><senderName></senderName><senderEmail>sog5</senderEmail><timestampReceived>2002-03-19 17:32:26-0400</timestampReceived><subject>= =?ISO-8859-1?Q?=3D=A5=FE=AC=D9?= =?ISO-8859-1?Q?=A5=D8=ABe=A6@=A6=B3?= 50 =?ISO-8859-1?Q?=B4X?= =?</subject><body>

 * * * =A5=FE =AC=D9 =A5d =B0=D5 =AC=B5 =C2=FB =A5[ =B7=F9 =A9=B1 =BC=F6 =AFP =A9=DB =B6=D2=A4=A4 ***
 
&lt;.1. &gt; =A4=EB=A6=AC=A4J 5-10 =B8U
&lt;.2. &gt; =A4@=A4H=A7Y=A5i=B6}=A9=B1 , =A4=A3=A5=B2=A6h=BD=D0=A4H=A4=E2
&lt;.3. &gt; =A5=FE=AC=D9=A5=D8=ABe=A6@=A6=B3 50 =B4X=AD=D3=A5[=B7=F9=A6=A8=A5\=AA=BA=A8=D2=A4l 
&lt;.4. &gt;  =AC=B5=C2=FB=A4f=A8=FD=BFW=AFS , =C5=FD=AB=C8=A4H=A6Y=A4F=A6^=A8=FD=B5L=BDa


=BD=D0.=B0=D1.=C6[.=A7=DA.=AD=CC.=AA=BA.=BA=F4.=A7} :  

http://211.78.42.181:5168


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020210180832</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-02-10 18:08:32-0400</timestampReceived><subject>having problem with bash</subject><body>

Hi there,

I am having problem setting up my library path. I am kinda new to linux.
Can anyone tell me if we have env varuable called LIBRARY_PATH or
LD_LIBRARY_PATH. Or simply we should add library path to PATH in linux.
And also I want to get a hold of all environment variable.
Any help is quite appreciated.
So long,

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020211005505</emailId><senderName></senderName><senderEmail>lawson_whitney</senderEmail><timestampReceived>2002-02-11 00:55:05-0400</timestampReceived><subject>Re: having problem with bash</subject><body>

On Sun, 10 Feb 2002, Mehran Rezaei wrote:

&gt; Hi there,
&gt;
&gt; I am having problem setting up my library path. I am kinda new to linux.
&gt; Can anyone tell me if we have env varuable called LIBRARY_PATH or
&gt; LD_LIBRARY_PATH. Or simply we should add library path to PATH in linux.
&gt; And also I want to get a hold of all environment variable.
&gt; Any help is quite appreciated.
&gt; So long,
&gt;
&gt; Mehran

LD_LIBRARY_PATH is one place the dynamic linker looks to resolve library
references.  It is nothing to do with PATH, which is where the shell
(and library calls execlp and execvp) looks for executables called by
name without absolute or relative path.  If you type /bin/cat or
cd /bin
./cat
the PATH doesn't matter, but if you type only cat, it does.
The dynamic linker also looks in the directories
named in /etc/ld.so.conf which normally contains paths to all libraries
installed on the system, so you don't normally use LD_LIBRARY_PATH
unless you are FI testing a library before installing it.  I use it to
test a new version of Wine to make sure my mail app still works before
installing it on top of a Wine I know is usbale.

To see your current environment,

printenv

to set an environment variable FOO to "bar"

esport FOO="bar"

Lawson
---oof---

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020211104308</emailId><senderName>Elias Athanasopoulos</senderName><senderEmail>eathan@otenet.gr</senderEmail><timestampReceived>2002-02-11 10:43:08-0400</timestampReceived><subject>Re: having problem with bash</subject><body>

Hi Lawson!

On Sun, Feb 10, 2002 at 07:55:05PM -0500, lawson_whitney@juno.com wrote:

&gt; to set an environment variable FOO to "bar"
&gt; 
&gt; esport FOO="bar"

Just a minor typo here, most probably caused by fast writting ('x' is
quite near to 's' in our keyboards. :-)).

So, s/esport/export

Cheers,
Elias

-- 
http://gnewtellium.sourceforge.net			MP3 is not a crime.	
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020322170332</emailId><senderName></senderName><senderEmail>linux-gcc</senderEmail><timestampReceived>2002-03-22 17:03:32-0400</timestampReceived><subject>=?ISO-8859-1?Q?=BD=E1=BB=E9,=D7=E2=BB=A8=B3=B5,=C7=EB=CB=BE=D2=C7,=C6=F3=D2=B5=D7=A8=CC=E2=C6=AC=D6=</subject><body>

ICAgIsTPvqm76cDx07DK0834IsrHufrE2taqw/u1xNeo0rXN+NW+o6zXqNK1zqq49sjLzOG5qSK7
6cDx0rvM9cH6t/7O8SIszqrG89K1zOG5qSKy+sa30Pu0q6Gi0MLOxbeisry499bWx+y15KGiyczS
tbnjuOYgDQoNCsHstby/vLLpoaLV0MnM0v3XyiAg16jM4sasxcTJ49bG1/cgIg0KDQogICAgMjAw
MMTq0+uhsNXQ0NChscep1LyjrLPJzqrV0NDQyKu5+re2zqfE2qGwzNjUvM34yc/JzLunobGjrL7f
sbjBy6GwzfjJz9anuLahsbmmxNyho8rHufrE2rXa0rvF+tXm1f3S4tLlyc+1xLXn19PJzM7xzfjV
vqGjDQoNCiAgICC98cTqv6rNqKGwuaTJzNL40NChscirufq3ts6ntcShsMS1taS/qKGx1NrP39an
uLbPtc2zo6zOqrG+1b7Ktc/WyKvD5rXEtefX08nMzvG3vcLUzOG5qcHLv8m/v7XEsaPWpKGjDQoN
Cg0KICANCiDN+Na3o7podHRwOi8vd3d3Lm5qY2hpbmEuY29tL2pkICAgIGh0dHA6Ly93d3cubmpj
aGluYS5jb20vamQvanlkanRvcC5odG0NCg0Ko62jraOto62jraOto62jraOto62jraOto62jraOt
o62jraOto62jraOto62jraOto62jraOto62jraOto62jraOto62jraOto60NCqOto62jraOto62j
raOto62jraOto62jraOto62jraOto62jraOto62jraOto62jraOto62jraOto62jraOto62jraOt
o62jraOtDQrS1MnP0MXPotPJobC98MLDzfjC57mry76hsczhuam3osvNt/7O8aOsw781MDAwMLfd
ytW30Tgw1Kqhow0KDQrI57n7xPrQ6NKqztLDx86qxPq3orK8svrGt9D7tKu547jmo6y+tMfr0+vO
0sPHwarPtaGjMDI1LTY1MjI1MDI=

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020322173316</emailId><senderName>"Alexandre P. Nunes"</senderName><senderEmail>alexnunes@escriba.com.br</senderEmail><timestampReceived>2002-03-22 17:33:16-0400</timestampReceived><subject>Re: =?GB2312?B?veG76SzX4ruos7Usx+vLvtLHLMbz0rXXqMzixqzWxtf3LNXSxM8=?=</subject><body>

Is this some alien spam? :-)

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020325041220</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-03-25 04:12:20-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.3 is released</subject><body>

This is the beta release of binutils 2.12.90.0.3 for Linux, which is
based on binutils 2002 0323 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.3 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.3.tar.gz. Source code.
2. binutils-2.12.90.0.1-2.12.90.0.3.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.3-1.i386.rpm. IA-32 binary RPM for RedHat 7.1.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.3.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
03/24/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020326231050</emailId><senderName></senderName><senderEmail>rimki</senderEmail><timestampReceived>2002-03-26 23:10:50-0400</timestampReceived><subject>=?ISO-8859-1?Q?~~=A5=FE=AC=D9=A5=D8=ABe=A6@=A6=B3?= 50 =?ISO-8859-1?Q?=B4X=AD=D3=A5[=B7=F9=A6=A8=A5\</subject><body>

 * * * =A5=FE=AC=D9=A5d=B0=D5=AC=B5=C2=FB=A5[=B7=F9=A9=B1=BC=F6=AFP=A9=DB=B6=D2=A4=A4 ***

1. =A4=EB=A6=AC=A4J 5-10 =B8U
2. =A4@=A4H=A7Y=A5i=B6}=A9=B1 , =A4=A3=A5=B2=A6h=BD=D0=A4H=A4=E2 !
3. =A5=FE=AC=D9=A5=D8=ABe=A6@=A6=B3 50 =B4X=AD=D3=A5[=B7=F9=A6=A8=A5\=AA=BA=AE=D7=A8=D2 !
4. =AC=B5=C2=FB=A4f=A8=FD=BFW=AFS , =C5=FD=AB=C8=A4H=A6Y=A4F=A6^=A8=FD=B5L=BDa !!


=BD=D0=B0=D1=C6[=A7=DA=AD=CC=AA=BA=BA=F4=A7} :  

http://211.78.42.181:5168


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020211171841</emailId><senderName></senderName><senderEmail>lawson_whitney</senderEmail><timestampReceived>2002-02-11 17:18:41-0400</timestampReceived><subject>Re: having problem with bash</subject><body>

On Mon, 11 Feb 2002, Elias Athanasopoulos wrote:

&gt; Hi Lawson!
&gt;
&gt; On Sun, Feb 10, 2002 at 07:55:05PM -0500, lawson_whitney@juno.com wrote:
&gt;
&gt; &gt; to set an environment variable FOO to "bar"
&gt; &gt;
&gt; &gt; esport FOO="bar"
&gt;
&gt; Just a minor typo here, most probably caused by fast writting ('x' is
&gt; quite near to 's' in our keyboards. :-)).
&gt;
&gt; So, s/esport/export
&gt;
&gt; Cheers,
&gt; Elias
&gt;
Right, thanks.

Lawson

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020212085256</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-02-12 08:52:56-0400</timestampReceived><subject>problem building a cross compiler</subject><body>

Good morning
I am trying to build a xcompiler, the makefile succeeds until I get an
error that Assembler does not have "-EL" option. Error happens just when
it tries to build libgcc1.a. So I thought I could build it. Then I did
and I got the same error!! It has already built xgcc for me. But
whenever I use it, it does the assembling directly and I get the error.
This is what I am talking about:
xgcc -c libgcc1.c
cpp: -lang-c : linker input file unused because linking not done
as: unrecognized option `-EL`
any suggestion to solve my problem is appreciated.
So long,

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020217055258</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-02-17 05:52:58-0400</timestampReceived><subject>Binutils 2.11.93.0.2 is released</subject><body>

This is the beta release of binutils 2.11.93.0.2 for Linux, which is
based on binutils 2002 0207 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.11.93.0.2 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.11.93.0.2.tar.gz. Source code.
2. binutils-2.11.92.0.12.3-2.11.93.0.2.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.11.93.0.2-1.i386.rpm. IA-32 binary RPM for RedHat 7.1.

There is no separate source rpm. You can do

# rpm -ta binutils-2.11.93.0.2.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
02/08/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020501115122</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-05-01 11:51:22-0400</timestampReceived><subject>timing</subject><body>

Hello dear all,
For the sake of performance analysis of some programs, I am using
clock() function call. I am running the programs on a linux box (Redhat
7.2, and my machine is i686).
However, I am not getting the correct results as I expected. Perhaps I
miss something necessary for using timing function calls.
Here is a code fragment that I am testing:
/***************************************************************/
#include &lt;sys/types.h&gt;
#include &lt;stdio.h&gt;
#include &lt;time.h&gt;
#include &lt;unistd.h&gt;
#include &lt;assert.h&gt;
#define TEST 8
main(){
    int i=1;
    int size=5*8000;
    void *pBreak,*newBreak;
    time_t time1,time2;
    clock_t start,finish,elapsed;
    start=clock();
    time(&amp;time1);
    sleep(10);
    1 &lt;&lt; i;
    for(i=0;i&lt;100;i++){
        printf("%x %d\n",-TEST,(1 &lt;&lt; i));
        if (1 &lt;&lt; i == 8192) break;
    }
    printf("%d \n",size &gt;&gt; i);
    i=brk(pBreak);
    assert(i == 0);
    newBreak=sbrk(1024);
    finish=clock();
    elapsed=finish-start;
    time(&amp;time2);
    printf("Exec Time from clock()    =
%f\n,(double)(finish-start)/(double)CLOCKS_PER_SEC);
    printf("Exec Time from difftime() = %lf\n",difftime(time2,time1));
}
/*****************************************************************************/

To my understanding both printfs should at least show 10 seconds
(because of "sleep(10)"). But they do not.
Note that I am not looking for so called Wall-Clock (total program
execution), for which I can use system calls. I should stick to a
function call that enables me to monitor the execution time of only some
of the functions in my programs (for my specific purpose).
Do you see any problem with my simple program? Is there anyway that I
can get perhaps better resolution on CPU time or elapsed time?
Your help and concern is appreciated.
So long,

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508084824</emailId><senderName>"Serguei I. Ivantsov"</senderName><senderEmail>administrator@svitonline.com</senderEmail><timestampReceived>2002-05-08 08:48:24-0400</timestampReceived><subject>Measure time</subject><body>

Hello!

Is there any function for high precision time measuring.
time() returns only in second. I need nanoseconds.

--
 Regards,
  Serguei I. Ivantsov
   GSC Game World


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508120036</emailId><senderName>Der Herr Hofrat</senderName><senderEmail>der.herr@mail.hofr.at</senderEmail><timestampReceived>2002-05-08 12:00:36-0400</timestampReceived><subject>Re: Measure time</subject><body>

&gt; Hello!
&gt; 
&gt; Is there any function for high precision time measuring.
&gt; time() returns only in second. I need nanoseconds.
&gt;
you can directly read the TSC but that will not realy give you nanoseconds
resolution as the actual read access even on a PIII/1GHz is going to take
up to a few 100 nanoseconds, and depending on what you want to time
stamp the overall jitter of that code can easaly be in the
range of a microsecond. 

There are some hard-realtime patches to the Linux kernel that will
allow time precission of aprox. 1us (the TSC has a precission of 32ns)
but I don't think you can get below that without dedicated hardware.

for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/ 

hofrat
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508122100</emailId><senderName>"Richard B. Johnson"</senderName><senderEmail>root@chaos.analogic.com</senderEmail><timestampReceived>2002-05-08 12:21:00-0400</timestampReceived><subject>Re: Measure time</subject><body>

On Wed, 8 May 2002, Serguei I. Ivantsov wrote:

&gt; Hello!
&gt; 
&gt; Is there any function for high precision time measuring.
&gt; time() returns only in second. I need nanoseconds.
&gt; 
&gt; --
&gt;  Regards,
&gt;   Serguei I. Ivantsov
&gt;    GSC Game World
&gt; 

gettimeofday() returns seconds/microseconds. If you need nanoseconds,
you can read CPU clock cycles in Intel machines with (assembly) rdtsc
instructions and convert, based upon the CPU clock.

If you really need nanosecond resolution in code that may be
interrupted or preempted at any time, you are in a world of hurt.
I suggest you review the requirement. You may need a TMS320C30 or
similar DSP standing alone.

Cheers,
Dick Johnson

Penguin : Linux version 2.4.18 on an i686 machine (797.90 BogoMips).

                 Windows-2000/Professional isn't.

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508154653</emailId><senderName>"Serguei I. Ivantsov"</senderName><senderEmail>admin@gsc-game.kiev.ua</senderEmail><timestampReceived>2002-05-08 15:46:53-0400</timestampReceived><subject>Re: Measure time</subject><body>

Is there any function like GetTickCount() in M$ Win32 that retrieves time in
milliseconds?

--
 Regards,
  Serguei I. Ivantsov

----- Original Message -----
From: "Der Herr Hofrat" &lt;der.herr@mail.hofr.at&gt;
To: "Serguei I. Ivantsov" &lt;administrator@svitonline.com&gt;
Cc: &lt;linux-gcc@vger.kernel.org&gt;; &lt;linux-kernel@vger.kernel.org&gt;
Sent: Wednesday, May 08, 2002 3:00 PM
Subject: Re: Measure time


&gt; &gt; Hello!
&gt; &gt;
&gt; &gt; Is there any function for high precision time measuring.
&gt; &gt; time() returns only in second. I need nanoseconds.
&gt; &gt;
&gt; you can directly read the TSC but that will not realy give you nanoseconds
&gt; resolution as the actual read access even on a PIII/1GHz is going to take
&gt; up to a few 100 nanoseconds, and depending on what you want to time
&gt; stamp the overall jitter of that code can easaly be in the
&gt; range of a microsecond.
&gt;
&gt; There are some hard-realtime patches to the Linux kernel that will
&gt; allow time precission of aprox. 1us (the TSC has a precission of 32ns)
&gt; but I don't think you can get below that without dedicated hardware.
&gt;
&gt; for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/
&gt;
&gt; hofrat

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508162529</emailId><senderName>"Nate"</senderName><senderEmail>nate@uniwest.com</senderEmail><timestampReceived>2002-05-08 16:25:29-0400</timestampReceived><subject>Re: Measure time</subject><body>


With you can get system time and then use the millisecond member in Win32...

&lt;code&gt;

SYSTEMTIME systm;

GetSystemTime(&amp;systm);

/*
Can access members of the structure

systm.wMilliseconds
systm.wSecond
systm.wMinute
systm.wHour

... and yet more members ...
*/

&lt;/code&gt;

~ Nate




----- Original Message -----
From: "Serguei I. Ivantsov" &lt;admin@gsc-game.kiev.ua&gt;
To: "Der Herr Hofrat" &lt;der.herr@mail.hofr.at&gt;
Cc: &lt;linux-gcc@vger.kernel.org&gt;; &lt;linux-kernel@vger.kernel.org&gt;
Sent: Wednesday, May 08, 2002 8:46 AM
Subject: Re: Measure time


&gt; Is there any function like GetTickCount() in M$ Win32 that retrieves time
in
&gt; milliseconds?
&gt;
&gt; --
&gt;  Regards,
&gt;   Serguei I. Ivantsov
&gt;
&gt; ----- Original Message -----
&gt; From: "Der Herr Hofrat" &lt;der.herr@mail.hofr.at&gt;
&gt; To: "Serguei I. Ivantsov" &lt;administrator@svitonline.com&gt;
&gt; Cc: &lt;linux-gcc@vger.kernel.org&gt;; &lt;linux-kernel@vger.kernel.org&gt;
&gt; Sent: Wednesday, May 08, 2002 3:00 PM
&gt; Subject: Re: Measure time
&gt;
&gt;
&gt; &gt; &gt; Hello!
&gt; &gt; &gt;
&gt; &gt; &gt; Is there any function for high precision time measuring.
&gt; &gt; &gt; time() returns only in second. I need nanoseconds.
&gt; &gt; &gt;
&gt; &gt; you can directly read the TSC but that will not realy give you
nanoseconds
&gt; &gt; resolution as the actual read access even on a PIII/1GHz is going to
take
&gt; &gt; up to a few 100 nanoseconds, and depending on what you want to time
&gt; &gt; stamp the overall jitter of that code can easaly be in the
&gt; &gt; range of a microsecond.
&gt; &gt;
&gt; &gt; There are some hard-realtime patches to the Linux kernel that will
&gt; &gt; allow time precission of aprox. 1us (the TSC has a precission of 32ns)
&gt; &gt; but I don't think you can get below that without dedicated hardware.
&gt; &gt;
&gt; &gt; for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/
&gt; &gt;
&gt; &gt; hofrat
&gt;
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508162603</emailId><senderName>"Calin A. Culianu"</senderName><senderEmail>calin@ajvar.org</senderEmail><timestampReceived>2002-05-08 16:26:03-0400</timestampReceived><subject>Re: Measure time</subject><body>

On Wed, 8 May 2002, Der Herr Hofrat wrote:

&gt; &gt; Hello!
&gt; &gt;
&gt; &gt; Is there any function for high precision time measuring.
&gt; &gt; time() returns only in second. I need nanoseconds.
&gt; &gt;
&gt; you can directly read the TSC but that will not realy give you nanoseconds
&gt; resolution as the actual read access even on a PIII/1GHz is going to take
&gt; up to a few 100 nanoseconds, and depending on what you want to time
&gt; stamp the overall jitter of that code can easaly be in the
&gt; range of a microsecond.
&gt;
&gt; There are some hard-realtime patches to the Linux kernel that will
&gt; allow time precission of aprox. 1us (the TSC has a precission of 32ns)
&gt; but I don't think you can get below that without dedicated hardware.
&gt;
&gt; for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/

I recommend RTAI instead.  It's more feature-rich, and works with newer
kernels.. the url is http://www.aero.polimi.it/~rtai/, or
http://www.rtai.org.

-Calin

&gt;
&gt; hofrat
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; Please read the FAQ at  http://www.tux.org/lkml/
&gt;

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508164021</emailId><senderName>george anzinger</senderName><senderEmail>george@mvista.com</senderEmail><timestampReceived>2002-05-08 16:40:21-0400</timestampReceived><subject>Re: Measure time</subject><body>

"Serguei I. Ivantsov" wrote:
&gt; 
&gt; Is there any function like GetTickCount() in M$ Win32 that retrieves time in
&gt; milliseconds?

The kernel provides gettimeofday() which give micro seconds AND is
usually quite accurate.  On machines of about 800 MHZ and better you
can, sometimes, even get the same value on back to back readings.

The high-res-timers patch (see sig. below) implements the POSIX clocks
and timers which return values in nanoseconds, but the resolution, due
to jitter and such is still in the range of micro seconds.

If, on the other hand, you are trying to measure execution time of some
task that blocks during that time, you are in a world of hurt.  The
kernel allocates 1/HZ chunks of elapsed time to what ever task it finds
running at the 1/HZ tick.  There is NO attempt by the kernel to refine
this measurement.

George
&gt; 
&gt; --
&gt;  Regards,
&gt;   Serguei I. Ivantsov
&gt; 
&gt; ----- Original Message -----
&gt; From: "Der Herr Hofrat" &lt;der.herr@mail.hofr.at&gt;
&gt; To: "Serguei I. Ivantsov" &lt;administrator@svitonline.com&gt;
&gt; Cc: &lt;linux-gcc@vger.kernel.org&gt;; &lt;linux-kernel@vger.kernel.org&gt;
&gt; Sent: Wednesday, May 08, 2002 3:00 PM
&gt; Subject: Re: Measure time
&gt; 
&gt; &gt; &gt; Hello!
&gt; &gt; &gt;
&gt; &gt; &gt; Is there any function for high precision time measuring.
&gt; &gt; &gt; time() returns only in second. I need nanoseconds.
&gt; &gt; &gt;
&gt; &gt; you can directly read the TSC but that will not realy give you nanoseconds
&gt; &gt; resolution as the actual read access even on a PIII/1GHz is going to take
&gt; &gt; up to a few 100 nanoseconds, and depending on what you want to time
&gt; &gt; stamp the overall jitter of that code can easaly be in the
&gt; &gt; range of a microsecond.
&gt; &gt;
&gt; &gt; There are some hard-realtime patches to the Linux kernel that will
&gt; &gt; allow time precission of aprox. 1us (the TSC has a precission of 32ns)
&gt; &gt; but I don't think you can get below that without dedicated hardware.
&gt; &gt;
&gt; &gt; for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/
&gt; &gt;
&gt; &gt; hofrat
&gt; 
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-kernel" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt; Please read the FAQ at  http://www.tux.org/lkml/

-- 
George Anzinger   george@mvista.com
High-res-timers:  http://sourceforge.net/projects/high-res-timers/
Real time sched:  http://sourceforge.net/projects/rtsched/
Preemption patch: http://www.kernel.org/pub/linux/kernel/people/rml
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508165142</emailId><senderName>"Simon Butcher"</senderName><senderEmail>pickle@alien.net.au</senderEmail><timestampReceived>2002-05-08 16:51:42-0400</timestampReceived><subject>RE: Measure time</subject><body>


Hi,

ftime() will return milliseconds, but it's considered an obsolete function.
You could use gettimeofday() (as Richard Johnson suggested) to get
microseconds and divide them to get milliseconds, although I don't know how
time critical your routines are.

If you're still looking for nanoseconds, I'm told you can use
clock_gettime() but it's still quite unavailable (I've never seen it myself,
yet).. however even if it was available you possibly wouldn't get a very
high resolution from it with current systems..

 - Simon

&gt; -----Original Message-----
&gt; From: linux-gcc-owner@vger.kernel.org
&gt; [mailto:linux-gcc-owner@vger.kernel.org]On Behalf Of Serguei I. Ivantsov
&gt; Sent: Thursday, 9 May 2002 01:47
&gt; To: Der Herr Hofrat
&gt; Cc: linux-gcc@vger.kernel.org; linux-kernel@vger.kernel.org
&gt; Subject: Re: Measure time
&gt;
&gt;
&gt; Is there any function like GetTickCount() in M$ Win32 that
&gt; retrieves time in
&gt; milliseconds?
&gt;
&gt; --
&gt;  Regards,
&gt;   Serguei I. Ivantsov
&gt;
&gt; ----- Original Message -----
&gt; From: "Der Herr Hofrat" &lt;der.herr@mail.hofr.at&gt;
&gt; To: "Serguei I. Ivantsov" &lt;administrator@svitonline.com&gt;
&gt; Cc: &lt;linux-gcc@vger.kernel.org&gt;; &lt;linux-kernel@vger.kernel.org&gt;
&gt; Sent: Wednesday, May 08, 2002 3:00 PM
&gt; Subject: Re: Measure time
&gt;
&gt;
&gt; &gt; &gt; Hello!
&gt; &gt; &gt;
&gt; &gt; &gt; Is there any function for high precision time measuring.
&gt; &gt; &gt; time() returns only in second. I need nanoseconds.
&gt; &gt; &gt;
&gt; &gt; you can directly read the TSC but that will not realy give you
&gt; nanoseconds
&gt; &gt; resolution as the actual read access even on a PIII/1GHz is
&gt; going to take
&gt; &gt; up to a few 100 nanoseconds, and depending on what you want to time
&gt; &gt; stamp the overall jitter of that code can easaly be in the
&gt; &gt; range of a microsecond.
&gt; &gt;
&gt; &gt; There are some hard-realtime patches to the Linux kernel that will
&gt; &gt; allow time precission of aprox. 1us (the TSC has a precission of 32ns)
&gt; &gt; but I don't think you can get below that without dedicated hardware.
&gt; &gt;
&gt; &gt; for RTLinux check at ftp://ftp.rtlinux.org/pub/rtlinux/
&gt; &gt;
&gt; &gt; hofrat
&gt;
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
&gt;
&gt;

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020508165847</emailId><senderName>Der Herr Hofrat</senderName><senderEmail>der.herr@mail.hofr.at</senderEmail><timestampReceived>2002-05-08 16:58:47-0400</timestampReceived><subject>Re: Measure time</subject><body>

&gt; 
&gt; Hi,
&gt; 
&gt; ftime() will return milliseconds, but it's considered an obsolete function.
&gt; You could use gettimeofday() (as Richard Johnson suggested) to get
&gt; microseconds and divide them to get milliseconds, although I don't know how
&gt; time critical your routines are.
&gt; 
&gt; If you're still looking for nanoseconds, I'm told you can use
&gt; clock_gettime() but it's still quite unavailable (I've never seen it myself,
&gt; yet).. however even if it was available you possibly wouldn't get a very
&gt; high resolution from it with current systems..
&gt;
clock_gettime() is available in the hard realtime extensions like RTLinux .
The clock resolution is limited to 32ns though - and atleast on X86 I don't
think there is a way to get below that.

hofrat 
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020602011837</emailId><senderName>"CERI"</senderName><senderEmail>ceri@firemail.de</senderEmail><timestampReceived>2002-06-02 01:18:37-0400</timestampReceived><subject>FOR SALE USED PERI AND HUENNEBECK.</subject><body>

WE HAVE FOR SALE USED 800 FORKHEADS PERI 300 TRIPODS, HANDSET,  TOPEC FORMWORK.

PLEASE CONTACT US IF YOU ARE INTERESTED.

BEST REGARDS.

S.BUTAUX
TEL: 00 49 177 57 57 329
FAX: 00 49 25 61 95 950 4001
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020801120523</emailId><senderName>Stefanos Koutsoutos</senderName><senderEmail>koutsoutos@md5sa.com</senderEmail><timestampReceived>2002-08-01 12:05:23-0400</timestampReceived><subject>Re: stat() problems.</subject><body>

Thanks a lot Alexandre!


On Thu, 2002-08-01 at 14:48, Alexandre P. Nunes wrote:
&gt;
&gt; stat() follows symlinks. That's why there's lstat(), try it instead.
&gt; 
&gt; Cheers,
&gt; 
&gt; 

-- 
____________________
Stefanos Koutsoutos
Developer
MD5 S.A.
koutsoutos@md5sa.com
www.md5sa.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020802182802</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-08-02 18:28:02-0400</timestampReceived><subject>The Linux binutils 2.13.90.0.2 is released</subject><body>

This is the beta release of binutils 2.13.90.0.2 for Linux, which is
based on binutils 2002 0802 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.13.90.0.2 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.15:

1. Update from binutils 2002 0802.
2. Initial support for mips n32 ABI.
3. Fix some x86 TLS bugs.

Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to apply the modutils patch enclosed here in order to
support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.13.90.0.2.tar.gz. Source code.
2. binutils-2.12.90.0.15-2.13.90.0.2.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.13.90.0.2-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.13.90.0.2.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
08/02/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020802214040</emailId><senderName>Robert Schiele</senderName><senderEmail>rschiele@uni-mannheim.de</senderEmail><timestampReceived>2002-08-02 21:40:40-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

On Fri, Aug 02, 2002 at 12:18:49PM -0600, SoloCDM wrote:
&gt; Robert Schiele stated the following:
&gt; &gt; 
&gt; &gt; On Fri, Aug 02, 2002 at 06:47:41AM -0600, SoloCDM wrote:
&gt; &gt; 
&gt; &gt; &gt; It starts the linking (ln command) with /usr/bin/g++ --&gt;
&gt; &gt; &gt; /etc/alternatives/g++ --&gt; /usr/bin/colorg++ --&gt; /usr/bin/colorgcc.
&gt; &gt; &gt; G++ is acting as a link.  If executed in the same manner as g++ to
&gt; &gt; &gt; create an a.out file, without options, colorgcc doesn't execute like
&gt; &gt; &gt; g++.
&gt; &gt; 
&gt; &gt; What do you have in ~/.colorgccrc?
&gt; 
&gt; No such file exists.  Everything for g++ and gcc is exactly as it was
&gt; installed.

Then your installation of colorgcc is braindead, as you have an
infinite loop, because colorgcc runs /usr/bin/g++ by default, which is
itself in your case.  You need to specify the path to your real g++ in
the config file.

Robert

-- 
Robert Schiele			Tel.: +49-621-181-2517
Dipl.-Wirtsch.informatiker	mailto:rschiele@uni-mannheim.de

[Attachment #3 (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020810002304</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-08-10 00:23:04-0400</timestampReceived><subject>The Linux binutils 2.13.90.0.3 is released</subject><body>

This is the beta release of binutils 2.13.90.0.3 for Linux, which is
based on binutils 2002 0809 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.13.90.0.3 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

Changes from binutils 2.12.90.0.15:

1. Update from binutils 2002 0802.
2. Initial support for mips n32 ABI.
3. Fix some x86 TLS bugs.

Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to upgrade to modutils 2.4.19 or apply the modutils patch
enclosed here in order to support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.13.90.0.3.tar.gz. Source code.
2. binutils-2.13.90.0.2-2.13.90.0.3.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.13.90.0.3-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.13.90.0.3.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
08/09/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020815163014</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-08-15 16:30:14-0400</timestampReceived><subject>The Linux binutils 2.13.90.0.4 is released</subject><body>

This version of binutils may be required for gcc 3.2 on Linux.


H.J.
----
This is the beta release of binutils 2.13.90.0.4 for Linux, which is
based on binutils 2002 0814 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.13.90.0.4 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

Changes from binutils 2.12.90.0.15:

1. Update from binutils 2002 0802.
2. Initial support for mips n32 ABI.
3. Fix some x86 TLS bugs.

Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to upgrade to modutils 2.4.19 or apply the modutils patch
enclosed here in order to support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.13.90.0.4.tar.gz. Source code.
2. binutils-2.13.90.0.3-2.13.90.0.4.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.13.90.0.4-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.13.90.0.4.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
08/14/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020821104037</emailId><senderName>Ralf Baechle DO1GRB</senderName><senderEmail>ralf@linux-mips.org</senderEmail><timestampReceived>2002-08-21 10:40:37-0400</timestampReceived><subject>Re: Archive hunt for vger's lists ...  (and FAQs too!)</subject><body>

On Wed, Aug 21, 2002 at 12:36:00PM +0300, Matti Aarnio wrote:

&gt; Also, if any list has a FAQ, we would like to know about it too!
&gt; My plan is to add archive and FAQ pointters to all list footers
&gt; (in style similar to linux-kernel).

Reminds me that various popular anti-spam packages like Spamassassin
consider vger postings spam likely to be spam because of the unsubscription
information in the footer added by Majordomo so that may need to be
rephrased to get around that problem.

73 de DO1GRB op Ralf

--
Loc. JN47BS / CQ 14 / ITU 28 / DOK A21
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020828221640</emailId><senderName>Stephen Satchell</senderName><senderEmail>list@fluent2.pyramid.net</senderEmail><timestampReceived>2002-08-28 22:16:40-0400</timestampReceived><subject>Re: C Language Reference for @ and :</subject><body>

At 01:50 PM 8/28/02 -0700, Nate wrote:
&gt;I am looking at some C code and I cannot find any language reference as to
&gt;what the '@' symbol or token means...
&gt;
&gt;For, example, from the header file I am trying to interpret....
&gt;
&gt;/////////////////////////////////////////////////////////////////
&gt;static unsigned char P1 @ 0x90;
&gt;static unsigned char P2 @ 0xA0;
&gt;static unsigned char P3 @ 0xB0;
&gt;/////////////////////////////////////////////////////////////////

The compiler implements an extension that indicates that the unsigned char 
P1 is at the absolute address 0x00000090, and when the compiler generates 
an access it should use this absolute address.  The equivalent ANSI C code 
using pointer variables might be:

static unsigned char * const P1 = (unsigned char *) 0x90;
static unsigned char * const P2 = (unsigned char *) 0xA0;
static unsigned char * const P3 = (unsigned char *) 0xB0;

Or the other way to do this is to use the preprocessor:

#define P1 ((unsigned char *)(0x90));
#define P2 ((unsigned char *)(0xA0));
#define P3 ((unsigned char *)(0xB0));

I used to see this with some compilers for machines that had memory-mapped 
I/O in which the registers were at hardware-fixed locations.  This is 
actually bad form, particularly when a driver can be used with multiple 
devices and there was no way to "map in" the particular device interface.

This is an oldie, and VERY machine-dependent.

&gt;Also what does these colons mean... ( I understand this is creating a new
&gt;type and it is a "public by default" class for a bit watching type.)  But
&gt;what does the colon do?  Initialize defualts?
&gt;
&gt;/////////////////////////////////////////////////////////////////
&gt;typedef struct
&gt;{
&gt;    unsigned B0:1;
&gt;    unsigned B1:1;
&gt;    unsigned B2:1;
&gt;    unsigned B3:1;
&gt;    unsigned B4:1;
&gt;    unsigned B5:1;
&gt;    unsigned B6:1;
&gt;    unsigned B7:1;
&gt;} SFR;
&gt;/////////////////////////////////////////////////////////////////

Bitfield definition.  Page 136-138 in the first edition of K&amp;R _The C 
Programming Language_, 149-150 in the second edition.  This is part of ANSI 
C, but the implementation definition makes it a non-portable 
construct.  Some people like to try to use bitfields in networking, with 
disastrous results as you change compilers or even versions of the same 
compiler.

The colon introduces a bit-width.  In your definition, you are defining 
seven bits in the variable SFR to be one-bit values that can be set or 
reset using a simple assignment statement:

      SFR.B0 = 1;   /* Set a single bit */
      SFR.B4 = 0;   /* Reset a single bit */

The problem is that which structure variables get assigned to which bits is 
not specified in the standard, but is labelled "implementation 
defined."  From the definition you show, I suspect that the compiler 
originally used to compile the code assigned bit fields from the low-order 
bits to the high-order bits of a regular integer.  Other compilers may 
start from the most significant bit and work down, which is why this 
construct is highly non-portable if you store or read the variable to/from 
storage or a network.

Satch

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021105233109</emailId><senderName>Dieter =?iso-8859-1?q?N=FCtzel?=</senderName><senderEmail>dieter.nuetzel@hamburg.de</senderEmail><timestampReceived>2002-11-05 23:31:09-0400</timestampReceived><subject>Re: 2.5.46: SCSI and/or ReiserFS v3.6 broken? Kernel panic</subject><body>

Am Mittwoch, 6. November 2002 00:19 schrieben Sie:
&gt; Dieter Nützel wrote:
&gt; &gt; VFS: Cannot open root device "803" or 08:03
&gt; &gt; Please append a correct "root=" boot option
&gt; &gt; Kernel panic: VFS: unable to mount root fs on 08:03
&gt;
&gt; That was happening to me yesterday as well.  After a bit
&gt; of poking around and recompiling, it mysteriously went away.
&gt;
&gt; The same has happened about ten times over the past few months,
&gt; and rebuilding the world makes it go away.  On ext3.
&gt;
&gt; Something is definitely fishy.  It's unhelpful that it cures
&gt; itself just as you get geared up to fix it.
&gt;
&gt; Does a full rebuild fix it for you?

Sadly, NO.

I did it first with the standard CFLAGS, then with mine, which I used for 
several years on my Athlon systems (the later running fine with 2.5.45 as 
always). All were full rebuilds. Then I've tried it with and without "HugeTLB 
file system support".

New stuff is at the beginning of the .config file:

#
# Automatically generated make config: don't edit
#
CONFIG_X86=y
CONFIG_MMU=y
CONFIG_SWAP=y
CONFIG_UID16=y
CONFIG_GENERIC_ISA_DMA=y

Here comes a diff of my running 2.5.45 .config file and the one for 2.5.46:

src/linux&gt; diff ../linux-2.5.45/.config .config
4a5,6
&gt; CONFIG_MMU=y
&gt; CONFIG_SWAP=y
828a831
&gt; # CONFIG_VIDEO_SAA7134 is not set
864a868
&gt; CONFIG_HUGETLBFS=y
880a885,886
&gt; CONFIG_EXT2_FS_XATTR=y
&gt; CONFIG_EXT2_FS_POSIX_ACL=y
908a915,916
&gt; CONFIG_FS_MBCACHE=m
&gt; CONFIG_FS_POSIX_ACL=y

Even without HUGETLBFS and EXT2_FS_XATTR it will not run.

-Dieter
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021220231432</emailId><senderName>Andre Majorel</senderName><senderEmail>amajorel@teaser.fr</senderEmail><timestampReceived>2002-12-20 23:14:32-0400</timestampReceived><subject>"fixed or forbidden register 0 (ax) was spilled for class AREG"</subject><body>

Greetings gentlemen. Trying to compile Linux-hexen 0.6.0 with
GCC 2.95.4, I got "Invalid `asm' statement" errors. The errors
occur in a routine that seems to multiply a 16.16 fixed point
number by a integer. Here's a fragment that triggers the error :

   1  typedef int fixed_t;
   2  
   3  int foo (void)
   4  {
   5    int f_w;
   6    fixed_t m_w;
   7    fixed_t scale_ftom;
   8  
   9    m_w =
  10    (
  11      {
  12        int __value, __fb = (scale_ftom);
  13        __asm__("imul %%ebx; shrd $16,%%edx,%%eax"
  14                : "=a" (__value)
  15                : "a" (f_w&lt;&lt;16), "b" (__fb)
  16                : "eax", "edx");
  17        __value;
  18      }
  19    );
  20  }

  $ gcc badasm.c
  badasm.c: In function `foo':
  badasm.c:16: Invalid `asm' statement:
  badasm.c:16: fixed or forbidden register 0 (ax) was spilled for class AREG.

This code used to compile before GCC was upgraded. I'd
appreciate any hints on how to fix it.

-- 
André Majorel &lt;amajorel@teaser.fr&gt;
http://www.teaser.fr/~amajorel/
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021230143503</emailId><senderName>narayana rao</senderName><senderEmail>narayank@intotoinc.com</senderEmail><timestampReceived>2002-12-30 14:35:03-0400</timestampReceived><subject>Speed of Ethernet Interface in linux-kernel</subject><body>


Hi All,

     I am Implementing MIB-II( rfc-1213) on Linux. All these API's are kept 
under kernel. my questions is how can I get speed of the Ethernet 
INTERFACE. i get "net_device" structure and "pci_device" structure for 
Interface. but No information about Speed of Interface in that structure's. 
Any help would be highly appreciated.

Regards
KVVNR

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020731105228</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-07-31 10:52:28-0400</timestampReceived><subject>actual memory size</subject><body>

Hello,

Is anyone aware of a shell command that tells you the size of physical
memory used in your computer?
Any help is appreciated.
So long,

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020801075601</emailId><senderName>Stefanos Koutsoutos</senderName><senderEmail>koutsoutos@md5sa.com</senderEmail><timestampReceived>2002-08-01 07:56:01-0400</timestampReceived><subject>stat() problems.</subject><body>

Hi,

I'm facing problems with stat() system call. It seems that it follows
filesystem links! To be more accurate I try:

struct stat buf;
stat("this_is_a_link", &amp;buf);

and then:	S_ISLNK( buf.st_mode )  is false!

More, the mode is the same as the mode of the file it links to! I think
that this is not what it supposed to be done by stat(). Any ideas??

Thanks in advance.
Stefanos.

-- 
____________________
Stefanos Koutsoutos
Developer
MD5 S.A.
koutsoutos@md5sa.com
www.md5sa.com

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020801114843</emailId><senderName>"Alexandre P. Nunes"</senderName><senderEmail>alexnunes@escriba.com.br</senderEmail><timestampReceived>2002-08-01 11:48:43-0400</timestampReceived><subject>Re: stat() problems.</subject><body>

Stefanos Koutsoutos wrote:

&gt;Hi,
&gt;
&gt;I'm facing problems with stat() system call. It seems that it follows
&gt;filesystem links! To be more accurate I try:
&gt;
&gt;struct stat buf;
&gt;stat("this_is_a_link", &amp;buf);
&gt;
&gt;and then:	S_ISLNK( buf.st_mode )  is false!
&gt;
&gt;More, the mode is the same as the mode of the file it links to! I think
&gt;that this is not what it supposed to be done by stat(). Any ideas??
&gt;
&gt;Thanks in advance.
&gt;Stefanos.
&gt;
&gt;  
&gt;

stat() follows symlinks. That's why there's lstat(), try it instead.

Cheers,

Alexandre


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021118004138</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-11-18 00:41:38-0400</timestampReceived><subject>The Linux binutils 2.13.90.0.14 is released</subject><body>

This is the beta release of binutils 2.13.90.0.14 for Linux, which is
based on binutils 2002 1114 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.13.90.0.14 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

Changes from binutils 2.12.90.0.15:

1. Update from binutils 2002 0802.
2. Initial support for mips n32 ABI.
3. Fix some x86 TLS bugs.

Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to upgrade to modutils 2.4.19 or apply the modutils patch
enclosed here in order to support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.13.90.0.14.tar.gz. Source code.
2. binutils-2.13.90.0.10-2.13.90.0.14.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.13.90.0.14-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.13.90.0.14.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
11/17/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20021128075635</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-11-28 07:56:35-0400</timestampReceived><subject>The Linux binutils 2.13.90.0.16 is released</subject><body>

This is the beta release of binutils 2.13.90.0.16 for Linux, which is
based on binutils 2002 1126 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.13.90.0.16 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.13.90.0.14:

1. Update from binutils 2002 1126.
2. Include /usr/bin/c++filt.
3. Fix "ld -r" with execption handling.

Changes from binutils 2.13.90.0.10:

1. Update from binutils 2002 1114.
2. Fix ELF/alpha bugs.
3. Fix an ELF/i386 assembler bug.

Changes from binutils 2.13.90.0.4:

1. Update from binutils 2002 1010.
2. More ELF/PPC linker bug fixes.
3. Fix an ELF/alpha linker bug.
4. Fix an ELF/sparc linker bug to support Solaris.
5. More TLS updates.

Changes from binutils 2.13.90.0.3:

1. Update from binutils 2002 0814.
2. Fix symbol versioning bugs for gcc 3.2.
3. Fix mips gas.

Changes from binutils 2.13.90.0.2:

1. Update from binutils 2002 0809.
2. Fix a mips gas compatibility bug.
3. Fix an x86 TLS bfd bug.
4. Fix an x86 PIC gas bug.
5. Improve symbol versioning support.

Changes from binutils 2.12.90.0.15:

1. Update from binutils 2002 0802.
2. Initial support for mips n32 ABI.
3. Fix some x86 TLS bugs.

Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to upgrade to modutils 2.4.19 or apply the modutils patch
enclosed here in order to support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.13.90.0.16.tar.gz. Source code.
2. binutils-2.13.90.0.14-2.13.90.0.16.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.13.90.0.16-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.13.90.0.16.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
11/27/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20021015174147</emailId><senderName>Ulrich Drepper</senderName><senderEmail>drepper@redhat.com</senderEmail><timestampReceived>2002-10-15 17:41:47-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Keld Jørn Simonsen wrote:

&gt;  Would it be possible to roll this in again?

No.  That stuff is gone.  *Nobody* ever showed any interest in this.
Ever.  And we have already problems enough with the current format.

- -- 
- --------------.                        ,-.            444 Castro Street
Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
Red Hat         `--' drepper at redhat.com `---------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)

iD8DBQE9rFNb2ijCOnn/RHQRAj9kAKCJlP1SqHbY0kUPsol0gADKRTL37QCeLq/d
9MvbPYlyWn+Dyc12lkmqCdA=
=wjWB
-----END PGP SIGNATURE-----

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021031073403</emailId><senderName>Andreas Jaeger</senderName><senderEmail>aj@suse.de</senderEmail><timestampReceived>2002-10-31 07:34:03-0400</timestampReceived><subject>Re: difference between march=athlon-xp and march=athlon-mp</subject><body>

"Sleight of Mind" &lt;sleight@xs4all.nl&gt; writes:

&gt; I run a system with 2 AMD Athlon XP CPU's. The XP isn't different from the MP
&gt; afaik, but there are 2 different gcc march options for them. Which one should
&gt; i use? Or doesn't it matter.

doesn't matter,
Andreas
-- 
 Andreas Jaeger
  SuSE Labs aj@suse.de
   private aj@arthur.inka.de
    http://www.suse.de/~aj
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020912162150</emailId><senderName>Robert Schiele</senderName><senderEmail>rschiele@uni-mannheim.de</senderEmail><timestampReceived>2002-09-12 16:21:50-0400</timestampReceived><subject>Re: Syntax Code Compiled Incorrectly</subject><body>

On Thu, Sep 12, 2002 at 07:33:01AM -0400, Mike Black wrote:
&gt; I can tell you that your program does not compile on gcc 2.95.3
&gt; But it does compile on gcc 3.1
&gt; I tried checking gcc.gnu.org but my queries would never finish.
&gt; I suspect it was a bug that has been fixed.  A google search shows others with the \
&gt; same problem up to gcc 3.0.

That's partially correct. It is not a bug in the compiler, but this
variant of the compare() method was not implemented in the STL shipped
with older gccs.

To fix that you have to upgrade your STL. I don't know, if current STL
works with older compilers, so it might be necessary to upgrade the
compiler too.

Robert

-- 
Robert Schiele			Tel.: +49-621-181-2517
Dipl.-Wirtsch.informatiker	mailto:rschiele@uni-mannheim.de


[Attachment #3 (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020801070933</emailId><senderName>Robert Schiele</senderName><senderEmail>rschiele@uni-mannheim.de</senderEmail><timestampReceived>2002-08-01 07:09:33-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

On Wed, Jul 31, 2002 at 05:04:04AM -0600, SoloCDM wrote:
&gt; Recently I tried to compile fig01_02.cpp with Kernel 2.2.20 on Linux
&gt; Mandrake 8.0.  I used "gcc fig01_02.cpp" and received the following
&gt; errors:
&gt; 
&gt; &lt;user_account&gt;/tmp/ccmeDWKS.o: In function `main':
&gt; &lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0xf): undefined reference to
&gt; `cout'
&gt; &lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0x14): undefined reference to
&gt; `ostream::operator&lt;&lt;(char const *)'collect2: ld returned 1 exit status
&gt; 
&gt; Why didn't it work?

cout is in libstdc++. So either you have to call "g++ fig01_02.cpp" or
"gcc -lstdc++ fig01_02.cpp".

Robert

-- 
Robert Schiele			Tel.: +49-621-181-2517
Dipl.-Wirtsch.informatiker	mailto:rschiele@uni-mannheim.de

[Attachment #3 (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020801083832</emailId><senderName>SoloCDM</senderName><senderEmail>deedsmis@aculink.net</senderEmail><timestampReceived>2002-08-01 08:38:32-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

Robert Schiele stated the following:
&gt; 
&gt; On Wed, Jul 31, 2002 at 05:04:04AM -0600, SoloCDM wrote:
&gt; &gt; Recently I tried to compile fig01_02.cpp with Kernel 2.2.20 on Linux
&gt; &gt; Mandrake 8.0.  I used "gcc fig01_02.cpp" and received the following
&gt; &gt; errors:
&gt; &gt;
&gt; &gt; &lt;user_account&gt;/tmp/ccmeDWKS.o: In function `main':
&gt; &gt; &lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0xf): undefined reference to
&gt; &gt; `cout'
&gt; &gt; &lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0x14): undefined reference to
&gt; &gt; `ostream::operator&lt;&lt;(char const *)'collect2: ld returned 1 exit status
&gt; &gt;
&gt; &gt; Why didn't it work?
&gt; 
&gt; cout is in libstdc++. So either you have to call "g++ fig01_02.cpp" or
&gt; "gcc -lstdc++ fig01_02.cpp".

It worked -- Thanks!

I couldn't help but notice how g++ linked all the way back to
colorgcc.  Although, colorgcc doesn't react like g++.  Colorgcc won't
create a.out.

What is gcc used for?  I noticed it seems to have some of the same
files or libraries as g++.

-- 
Note: When you reply to this message, please include the mailing
      list and/or newsgroup address and my email address in To:

*********************************************************************
Signed,
SoloCDM-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020801133342</emailId><senderName>Robert Schiele</senderName><senderEmail>rschiele@uni-mannheim.de</senderEmail><timestampReceived>2002-08-01 13:33:42-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

On Thu, Aug 01, 2002 at 02:38:32AM -0600, SoloCDM wrote:
&gt; Robert Schiele stated the following:
&gt; &gt; cout is in libstdc++. So either you have to call "g++ fig01_02.cpp" or
&gt; &gt; "gcc -lstdc++ fig01_02.cpp".
&gt; 
&gt; It worked -- Thanks!
&gt; 
&gt; I couldn't help but notice how g++ linked all the way back to
&gt; colorgcc.  Although, colorgcc doesn't react like g++.  Colorgcc won't
&gt; create a.out.

Sorry, but I cannot see what you wanted to tell us with this
paragraph.

&gt; What is gcc used for?  I noticed it seems to have some of the same
&gt; files or libraries as g++.

gcc and g++ are the same, but gcc uses C as it's standard language,
where g++ uses C++ as standard language and links standard C++
libraries without the need to specify them explicitly.

Robert

-- 
Robert Schiele			Tel.: +49-621-181-2517
Dipl.-Wirtsch.informatiker	mailto:rschiele@uni-mannheim.de

[Attachment #3 (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020821093600</emailId><senderName>Matti Aarnio</senderName><senderEmail>matti.aarnio@zmailer.org</senderEmail><timestampReceived>2002-08-21 09:36:00-0400</timestampReceived><subject>Archive hunt for vger's lists ...  (and FAQs too!)</subject><body>


At vger's web we have:
  http://vger.kernel.org/vger-lists.html

which has all lists at vger, and links to all list archives that
I found last week (at google/marc) when I did a full review of those.

If you know any archive that should be listed there, please tell
vger's webmaster.  (NOT the lists!)

Also, if any list has a FAQ, we would like to know about it too!
My plan is to add archive and FAQ pointters to all list footers
(in style similar to linux-kernel).
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020828205026</emailId><senderName>"Nate"</senderName><senderEmail>nate@uniwest.com</senderEmail><timestampReceived>2002-08-28 20:50:26-0400</timestampReceived><subject>C Language Reference for @ and :</subject><body>


I am looking at some C code and I cannot find any language reference as to
what the '@' symbol or token means...

For, example, from the header file I am trying to interpret....

/////////////////////////////////////////////////////////////////
static unsigned char P1 @ 0x90;
static unsigned char P2 @ 0xA0;
static unsigned char P3 @ 0xB0;
/////////////////////////////////////////////////////////////////



Also what does these colons mean... ( I understand this is creating a new
type and it is a "public by default" class for a bit watching type.)  But
what does the colon do?  Initialize defualts?

/////////////////////////////////////////////////////////////////
typedef struct
{
   unsigned B0:1;
   unsigned B1:1;
   unsigned B2:1;
   unsigned B3:1;
   unsigned B4:1;
   unsigned B5:1;
   unsigned B6:1;
   unsigned B7:1;
} SFR;
/////////////////////////////////////////////////////////////////


Thanks,

Nate

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020911193947</emailId><senderName>SoloCDM</senderName><senderEmail>deedsmis@aculink.net</senderEmail><timestampReceived>2002-09-11 19:39:47-0400</timestampReceived><subject>Syntax Code Compiled Incorrectly</subject><body>

Recently I tried to compile sstrcom.cpp with Kernel 2.2.20 on Linux
Mandrake 8.0.  I used "g++ sstrcom.cpp" and received the following
errors:

sstrcom.cpp: In function `int main ()':
sstrcom.cpp:24: no matching function for call to `basic_string&lt;char, 
string_char_traits&lt;char&gt;, __default_alloc_template&lt;true, 0&gt; &gt;::compare 
(int, int, string &amp;, int, int)'
/usr/include/g++-3/std/bastring.cc:398: candidates are: int 
basic_string&lt;charT, traits, Allocator&gt;::compare (const 
basic_string&lt;charT, traits, Allocator&gt; &amp;, unsigned int = 0, unsigned 
int = basic_string&lt;charT, traits, Allocator&gt;::npos) const [with charT
= 
char, traits = string_char_traits&lt;char&gt;, Allocator = 
__default_alloc_template&lt;true, 0&gt;]
/usr/include/g++-3/std/bastring.cc:417:                 int 
basic_string&lt;charT, traits, Allocator&gt;::compare (const charT *, 
unsigned int, unsigned int) const [with charT = char, traits = 
string_char_traits&lt;char&gt;, Allocator = __default_alloc_template&lt;true, 
0&gt;]
/usr/include/g++-3/std/bastring.h:402:                 int 
basic_string&lt;charT, traits, Allocator&gt;::compare (const charT *, 
unsigned int = 0) const [with charT = char, traits = 
string_char_traits&lt;char&gt;, Allocator = __default_alloc_template&lt;true, 
0&gt;]

Everything points to "n = susername.compare( 0, 2, saname, 0, 2 );",
even though the immediate line preceding it doesn't have any errors.

What is wrong with the attached file?

The output indicates that a function doesn't exist in &lt;string&gt;; if so,
what library needs to be included?

--
Note: When you reply to this message, please include the mailing
      list and/or newsgroup address and my email address in To:

*********************************************************************
Signed,
SoloCDM
["sstrcom.cpp" (text/plain)]

// sstrcom.cpp
// Comparing string objects
#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;

/*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
int main() {

	string saname = "George", susername;

	std::cout &lt;&lt; "Enter your first name: ";
	cin &gt;&gt; susername;

	if ( susername == saname )
		std::cout &lt;&lt; "Greetings, George\n";
	else if ( susername &lt; saname )
		std::cout &lt;&lt; "You come before George\n";
	else
		std::cout &lt;&lt; "You come after George\n";

	int n = susername.compare( saname );
	n = susername.compare( 0, 2, saname, 0, 2 );

	std::cout &lt;&lt; "The first two letters of your name ";

	if ( n == 0 )
		std::cout &lt;&lt; "match ";
	else if ( n &lt; 0 )
		std::cout &lt;&lt; "come before ";
	else
		std::cout &lt;&lt; "come after ";

	std::cout &lt;&lt; saname.substr( 0, 2 ) &lt;&lt; endl;

	return 0;

}


-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20021003100957</emailId><senderName>Ulrich Drepper</senderName><senderEmail>drepper@redhat.com</senderEmail><timestampReceived>2002-10-03 10:09:57-0400</timestampReceived><subject>glibc 2.3</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Release 2.3 of the GNU C library is now available at

	ftp://sources.redhat.com/pub/glibc/releases

and (hopefully soon)

	ftp://ftp.gnu.org/pub/gnu/glibc

and all the mirror sites around the globe.

The new files are

	glibc-2.3.tar.bz2
	glibc-linuxthreads-2.3.tar.bz2
	glibc-2.2.5-2.3.diff.bz2

and for those following the test releases

	glibc-2.2.94-2.3.diff.bz2


This release introduces a number of new features but not too many.
glibc 2.2 was already mostly complete.  Instead this release focuses
on making functionality compliant with standards and on performance
optimizations.  The user visible changes include:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Version 2.3

* Masahide Washizawa contributed iconv modules for IBM1163 and IBM1164
  charsets.

* iconv (the program and the interface) now accepts empty names (excluding
  options like //TRANSLIT) to mean "use charset of current locale".

* localedef can now transliterate characters in strings which are not in
  the provided charmap.  The information from the input locale is used.

* Prelinking support was added for ELF targets.  This requires additional
  tools and recent versions of the GNU binutils.  Contributed by Jakub
Jelinek.

* Read-only stdio streams now use mmap to speed up operation by eliminating
  copying and buffer underflows.  To use add 'm' to the mode string of
  the fopen/fdopen/freopen call.  Implemented by Ulrich Drepper.

* The malloc functions were completely rewritten by Wolfram Gloger based
  on Doug Lea's malloc-2.7.0.c.

* Isamu Hasegawa contributed a completely new and POSIX-conformant
  implementation of regex.

* Bruno Haible upgraded the iconv and locale implementation to support
  Unicode 3.2.

* Contents of the LC_* and LANG environment variables in the CEN style are
  not recognized anymore.   It never was used.  Change by Ulrich Drepper.

* The runtime (ld.so, libc, libpthread for Linux) now can handle the ELF
  thread-local storage (TLS) ABI on some platforms.
  Changes by Ulrich Drepper.  SH support by Kaz Kojima.

* Bruno Haible contributed iconv converters for ISO-2022-JP-3, SHIFT
JIS-X0213,
  EUC-JISX0213, and TISCII.

* New header &lt;ifaddrs.h&gt; with functions `getifaddrs' and `freeifaddrs':
  BSD-compatible interface for getting all network interface addresses.
  Implementation for IPv4 by Roland McGrath.

* Loading of locale data is faster due to the introduction of a locale
  archive.  Implemented by Roland McGrath and Ulrich Drepper.

* Startup times are significantly reduced by not using exported functions
  inside the library itself.  Changes by Jakub Jelinek, Roland McGrath,
  and Ulrich Drepper.

* Steven Munroe contributed a port to PowerPC64/Linux.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


This release of the library runs on the following targets:

	i[3456]86-*-gnu		GNU Hurd on Intel
	i[3456]86-*-linux-gnu	Linux-2.x on Intel
	alpha*-*-linux-gnu	Linux-2.x on DEC Alpha
	powerpc-*-linux-gnu     Linux and MkLinux on PowerPC systems
	powerpc64-*-linux-gnu	Linux-2.4.19+ on 64-bit PowerPC systems
	sparc-*-linux-gnu	Linux-2.x on SPARC
	sparc64-*-linux-gnu	Linux-2.x on UltraSPARC 64-bit
	ia64-*-linux-gnu	Linux-2.x on ia64
	s390-*-linux-gnu	Linux-2.x on IBM S/390
	s390x-*-linux-gnu	Linux-2.4+ on IBM S/390 64-bit
	sh-*-linux-gnu		Linux-2.x on Super Hitachi
	x86-64-*-linux-gnu	Linux-2.4+ on x86-64

The following targets should not be far away from being usable:

	*-*-gnu			GNU Hurd on platforms other than Intel
	arm-*-linux-gnu		Linux-2.x on ARM
	cris-*-linux-gnu	Linux-2.4+ on CRIS
	hppa*-*-linux-gnu	Linux-2.x on HP/PA
	m68k-*-linux-gnu	Linux-2.x on Motorola 680x0
	mips*-*-linux-gnu	Linux-2.x on MIPS

Previous releases worked on the following targets, the current status
is unknown:

	arm-*-none		ARM standalone systems
	arm-*-linuxaout		Linux-2.x on ARM using a.out (obsolete?!)


We believe that this release is very stable.  Upgrading is highly
encouraged.

*BUT*: updating the C library is no trivial task and it is very easy
to damage one's system.  Therefore, persons who do not exactly know
what to do, should consider using a binary distribution instead, when
it becomes available.  All major Linux distributors will hopefully
base their next release on glibc 2.3.  Don't tell us you haven't
been warned.  Another reason why not everybody should think about
compiling glibc is the disk and CPU requirements: on Intel platforms
the full build requires about 330MB plus the space you need to install
it.  This number is higher on most RISC platforms.  During the
compilation the compiler will need large amounts of virtual memory.
We are talking about 100MB on Intel and 200MB on Alpha.  If using the
`-j' option of make these numbers grow linearly.  Building the
complete library without profiling support on a 2xPIII@550MHz system
takes about 32 minutes, checking adds another 25 minutes.  On not
highly tuned and slower systems the times are very much higher and it
possibly takes several days on very old and slow systems.  The '-j'
option for make is very useful on SMP systems, the Makefiles are save
for builds with high '-j' numbers (except when the compilation happens
in the source directory; simply create a new directory and compile in
that one instead).

It is generally always a good idea to build in a separate directory
and simply configure using

  /path/to/glibc-2.3/configure ...options for configure...

Even though TLS support is mentioned as one new feature for this release
the default is not to build glibc with TLS support enabled.  This has
several reasons, most of which are out of control of the glibc
developers.  Therefore it is necessry to *not* use the --with-tls option
for configure.


In case you decide to compile glibc yourself you need to read the
files INSTALL and FAQ.  It will explain among other things which tools
are necessary.  The most important one is the compiler.  Starting with
this release the earliest accepted compiler is gcc 3.2.  The configure
script will complain about any earlier compiler.

In case of problems with building glibc it is advised to first try the
very latest sources from the stable gcc 3.2 branch.  The problems
might already have been fixed.


It is also important to get very recent binutils.  For Linux this
normally means the releases by H.J. Lu which are available at

  ftp://ftp.kernel.org/pub/linux/devel/binutils

Version 2.13.90.0.4 has been reported to work.  Before reporting a bug
please make sure you are using a recent version.


In case you are modifying the source files which will cause autoconf
to run make sure you have autoconf 2.13 installed and *NOT* version
2.50 and up.  These versions will not work.  Support for the new
autoconf will be enabled in upcoming releases.


To enable prelinking an additional package is needed.  The prelink
program is available at

  ftp://people.redhat.com/jakub/prelink/

The last version as of this writing is

  prelink-20021002.tar.bz2

It should support all the not-embedded architectures but the demands
on recent tools and kernels might be high.  Read the documentation
coming with the package.  Your distribution of choice might already
have a package available, check it first.


On Linux systems the configure script has a new option
`--enable-kernel' (find the documentation in the INSTALL file).  This
option allows one to strip out compatibility code for older kernel
versions.  This is of interest since configuring for a 2.4.x kernel
reduces the libc size by about 1%.  This is no high percentage but all
the code gone is in the by far most often used functions.  The
compatibility code is needed because of poor design decisions of the
kernel developers who constantly have to adjust the interface to new
requirements.  If you never expect to run kernel versions older than
the one used at compile time of the library it is a good idea to pass
`--enable-kernel=current' to configure.  But be careful since with an
older kernel the program won't even start and the whole system might
be rendered useless (unless backup kernels are available).


The 2.3.x release should be binary compatible with the 2.2 and earlier
releases.  All correct programs should continue to run.  This does
*not* mean that programs compiled on a system running glibc 2.3.x will
run on systems with only glibc 2.2.  Compatibility is always in one
direction.  Systems with glibc 2.2 will not even attempt to run
binaries generated with glibc 2.3.x if this is not possible so there
is not much to worry about.

The locale files are now kept in an archive which guarantees much
faster access.  Startup times of applications using setlocale() are
significantly improved.  The locale archive is handled by the
localedef program just like ordinary compilation of locales.  By
running

	make localedata/install-locales

it is possible to generate an archive with all locales.
take a while.  Using the -j option on SMP systems should help.  It is
most of the time not necessary to install all locales.  Just pick the
once which the users of the system will want to use.


There are normally no problems to be expected when compiling code with
the new glibc version.  In a few cases programs make wrong assumptions
and the build will suddenly fail (recent example: using CLK_TCK in
initializers for static or global variables which is wrong since is
CLK_TCK is not guaranteed to be a constant).  Make sure you review
the appropriate standards before you claim to have found a bug.


Problems should all be reported using the `glibcbug' shell script.
*NEVER* send mail to me and preferably any other developer directly; I
won't even read it.  Mailing lists are there not only to distribute
the workload, they also help to archive questions and answers.  this
script, fill out the information and you are set.  If at the time you
start the script it complains like this

	/usr/bin/glibcbug: emacs: command not found

set one of the environment variables EDITOR and VISUAL (this should
ideally happen on every system automatically):

	env EDITOR=vi glibcbug

Do this also if you don't want to edit the bug report in Emacs (I
cannot imagine why not but...)

Before sending a bug report make sure you have read the BUGS and the
FAQ files which come with the glibc sources.  You won't even get an
answer if it is obvious you haven't read these files.  It is also
helpful to scan the appropriate newsgroups and mailing lists to see
whether somebody else already had this problem.  There is another
thing we don't want to hear about: the size.  glibc is big, but this
is necessary for a multi-platform Unix library.

In case the bug database is once again offline send the reports to the
libc-alpha@sources.redhat.com mailing list.


Responsible for this release are among others:

	Wolfram Gloger
	Bruno Haible
	Isamu Hasegawa
	Andreas Jaeger
	Jakub Jelinek
	Kaz Kojima
	H.J. Lu
	Roland McGrath
	Steven Munroe
	Andreas Schwab
	Franz Sirl


I want to thank all of them.  Thanks also to the few dedicated
testers we have:

	Kaoru Fukui
	Jack Howarth

- -- 
- --------------.                        ,-.            444 Castro Street
Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
Red Hat         `--' drepper at redhat.com `---------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQE9nBd12ijCOnn/RHQRAk6YAKCzhwbMdsXaLo2d42ZCvUyqP9SKzgCgkYtT
TZrS2FWhkeVCV/WtEFvwaKE=
=GgNw
-----END PGP SIGNATURE-----

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021003161107</emailId><senderName>"Mike Black"</senderName><senderEmail>mblack@csi-inc.com</senderEmail><timestampReceived>2002-10-03 16:11:07-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

OK...now I'm confused:
configure says:
*** On GNU/Linux systems the GNU C Library should not be installed into
*** /usr/local since this might make your system totally unusable.
*** We strongly advise to use a different prefix.  For details read the FAQ.
*** If you really mean to do this, run configure again using the extra
*** parameter `--disable-sanity-checks'.
And the FAQ says the opposite:
{ZW} If you wish to be cautious, do not configure with --prefix=/usr.  If
you don't specify a prefix, glibc will be installed in /usr/local, where it
will probably not break anything.  (If you wish to be certain, set the
prefix to something like /usr/local/glibc2 which is not used for anything.)

It appears configure is using prefix /usr/local and spits out a bogus message.

----- Original Message ----- 
From: "Ulrich Drepper" &lt;drepper@redhat.com&gt;
To: &lt;libc-alpha@sources.redhat.com&gt;; &lt;linux-gcc@vger.kernel.org&gt;
Sent: Thursday, October 03, 2002 6:09 AM
Subject: glibc 2.3


&gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; Hash: SHA1
&gt; 
&gt; Release 2.3 of the GNU C library is now available at
&gt; 
&gt; ftp://sources.redhat.com/pub/glibc/releases
&gt; 
&gt; and (hopefully soon)
&gt; 
&gt; ftp://ftp.gnu.org/pub/gnu/glibc
&gt; 
&gt; and all the mirror sites around the globe.
&gt; 
&gt; The new files are
&gt; 
&gt; glibc-2.3.tar.bz2
&gt; glibc-linuxthreads-2.3.tar.bz2
&gt; glibc-2.2.5-2.3.diff.bz2
&gt; 
&gt; and for those following the test releases
&gt; 
&gt; glibc-2.2.94-2.3.diff.bz2
&gt; 
&gt; 
&gt; This release introduces a number of new features but not too many.
&gt; glibc 2.2 was already mostly complete.  Instead this release focuses
&gt; on making functionality compliant with standards and on performance
&gt; optimizations.  The user visible changes include:
&gt; 
&gt; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&gt; Version 2.3
&gt; 
&gt; * Masahide Washizawa contributed iconv modules for IBM1163 and IBM1164
&gt;   charsets.
&gt; 
&gt; * iconv (the program and the interface) now accepts empty names (excluding
&gt;   options like //TRANSLIT) to mean "use charset of current locale".
&gt; 
&gt; * localedef can now transliterate characters in strings which are not in
&gt;   the provided charmap.  The information from the input locale is used.
&gt; 
&gt; * Prelinking support was added for ELF targets.  This requires additional
&gt;   tools and recent versions of the GNU binutils.  Contributed by Jakub
&gt; Jelinek.
&gt; 
&gt; * Read-only stdio streams now use mmap to speed up operation by eliminating
&gt;   copying and buffer underflows.  To use add 'm' to the mode string of
&gt;   the fopen/fdopen/freopen call.  Implemented by Ulrich Drepper.
&gt; 
&gt; * The malloc functions were completely rewritten by Wolfram Gloger based
&gt;   on Doug Lea's malloc-2.7.0.c.
&gt; 
&gt; * Isamu Hasegawa contributed a completely new and POSIX-conformant
&gt;   implementation of regex.
&gt; 
&gt; * Bruno Haible upgraded the iconv and locale implementation to support
&gt;   Unicode 3.2.
&gt; 
&gt; * Contents of the LC_* and LANG environment variables in the CEN style are
&gt;   not recognized anymore.   It never was used.  Change by Ulrich Drepper.
&gt; 
&gt; * The runtime (ld.so, libc, libpthread for Linux) now can handle the ELF
&gt;   thread-local storage (TLS) ABI on some platforms.
&gt;   Changes by Ulrich Drepper.  SH support by Kaz Kojima.
&gt; 
&gt; * Bruno Haible contributed iconv converters for ISO-2022-JP-3, SHIFT
&gt; JIS-X0213,
&gt;   EUC-JISX0213, and TISCII.
&gt; 
&gt; * New header &lt;ifaddrs.h&gt; with functions `getifaddrs' and `freeifaddrs':
&gt;   BSD-compatible interface for getting all network interface addresses.
&gt;   Implementation for IPv4 by Roland McGrath.
&gt; 
&gt; * Loading of locale data is faster due to the introduction of a locale
&gt;   archive.  Implemented by Roland McGrath and Ulrich Drepper.
&gt; 
&gt; * Startup times are significantly reduced by not using exported functions
&gt;   inside the library itself.  Changes by Jakub Jelinek, Roland McGrath,
&gt;   and Ulrich Drepper.
&gt; 
&gt; * Steven Munroe contributed a port to PowerPC64/Linux.
&gt; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
&gt; 
&gt; 
&gt; This release of the library runs on the following targets:
&gt; 
&gt; i[3456]86-*-gnu GNU Hurd on Intel
&gt; i[3456]86-*-linux-gnu Linux-2.x on Intel
&gt; alpha*-*-linux-gnu Linux-2.x on DEC Alpha
&gt; powerpc-*-linux-gnu     Linux and MkLinux on PowerPC systems
&gt; powerpc64-*-linux-gnu Linux-2.4.19+ on 64-bit PowerPC systems
&gt; sparc-*-linux-gnu Linux-2.x on SPARC
&gt; sparc64-*-linux-gnu Linux-2.x on UltraSPARC 64-bit
&gt; ia64-*-linux-gnu Linux-2.x on ia64
&gt; s390-*-linux-gnu Linux-2.x on IBM S/390
&gt; s390x-*-linux-gnu Linux-2.4+ on IBM S/390 64-bit
&gt; sh-*-linux-gnu Linux-2.x on Super Hitachi
&gt; x86-64-*-linux-gnu Linux-2.4+ on x86-64
&gt; 
&gt; The following targets should not be far away from being usable:
&gt; 
&gt; *-*-gnu GNU Hurd on platforms other than Intel
&gt; arm-*-linux-gnu Linux-2.x on ARM
&gt; cris-*-linux-gnu Linux-2.4+ on CRIS
&gt; hppa*-*-linux-gnu Linux-2.x on HP/PA
&gt; m68k-*-linux-gnu Linux-2.x on Motorola 680x0
&gt; mips*-*-linux-gnu Linux-2.x on MIPS
&gt; 
&gt; Previous releases worked on the following targets, the current status
&gt; is unknown:
&gt; 
&gt; arm-*-none ARM standalone systems
&gt; arm-*-linuxaout Linux-2.x on ARM using a.out (obsolete?!)
&gt; 
&gt; 
&gt; We believe that this release is very stable.  Upgrading is highly
&gt; encouraged.
&gt; 
&gt; *BUT*: updating the C library is no trivial task and it is very easy
&gt; to damage one's system.  Therefore, persons who do not exactly know
&gt; what to do, should consider using a binary distribution instead, when
&gt; it becomes available.  All major Linux distributors will hopefully
&gt; base their next release on glibc 2.3.  Don't tell us you haven't
&gt; been warned.  Another reason why not everybody should think about
&gt; compiling glibc is the disk and CPU requirements: on Intel platforms
&gt; the full build requires about 330MB plus the space you need to install
&gt; it.  This number is higher on most RISC platforms.  During the
&gt; compilation the compiler will need large amounts of virtual memory.
&gt; We are talking about 100MB on Intel and 200MB on Alpha.  If using the
&gt; `-j' option of make these numbers grow linearly.  Building the
&gt; complete library without profiling support on a 2xPIII@550MHz system
&gt; takes about 32 minutes, checking adds another 25 minutes.  On not
&gt; highly tuned and slower systems the times are very much higher and it
&gt; possibly takes several days on very old and slow systems.  The '-j'
&gt; option for make is very useful on SMP systems, the Makefiles are save
&gt; for builds with high '-j' numbers (except when the compilation happens
&gt; in the source directory; simply create a new directory and compile in
&gt; that one instead).
&gt; 
&gt; It is generally always a good idea to build in a separate directory
&gt; and simply configure using
&gt; 
&gt;   /path/to/glibc-2.3/configure ...options for configure...
&gt; 
&gt; Even though TLS support is mentioned as one new feature for this release
&gt; the default is not to build glibc with TLS support enabled.  This has
&gt; several reasons, most of which are out of control of the glibc
&gt; developers.  Therefore it is necessry to *not* use the --with-tls option
&gt; for configure.
&gt; 
&gt; 
&gt; In case you decide to compile glibc yourself you need to read the
&gt; files INSTALL and FAQ.  It will explain among other things which tools
&gt; are necessary.  The most important one is the compiler.  Starting with
&gt; this release the earliest accepted compiler is gcc 3.2.  The configure
&gt; script will complain about any earlier compiler.
&gt; 
&gt; In case of problems with building glibc it is advised to first try the
&gt; very latest sources from the stable gcc 3.2 branch.  The problems
&gt; might already have been fixed.
&gt; 
&gt; 
&gt; It is also important to get very recent binutils.  For Linux this
&gt; normally means the releases by H.J. Lu which are available at
&gt; 
&gt;   ftp://ftp.kernel.org/pub/linux/devel/binutils
&gt; 
&gt; Version 2.13.90.0.4 has been reported to work.  Before reporting a bug
&gt; please make sure you are using a recent version.
&gt; 
&gt; 
&gt; In case you are modifying the source files which will cause autoconf
&gt; to run make sure you have autoconf 2.13 installed and *NOT* version
&gt; 2.50 and up.  These versions will not work.  Support for the new
&gt; autoconf will be enabled in upcoming releases.
&gt; 
&gt; 
&gt; To enable prelinking an additional package is needed.  The prelink
&gt; program is available at
&gt; 
&gt;   ftp://people.redhat.com/jakub/prelink/
&gt; 
&gt; The last version as of this writing is
&gt; 
&gt;   prelink-20021002.tar.bz2
&gt; 
&gt; It should support all the not-embedded architectures but the demands
&gt; on recent tools and kernels might be high.  Read the documentation
&gt; coming with the package.  Your distribution of choice might already
&gt; have a package available, check it first.
&gt; 
&gt; 
&gt; On Linux systems the configure script has a new option
&gt; `--enable-kernel' (find the documentation in the INSTALL file).  This
&gt; option allows one to strip out compatibility code for older kernel
&gt; versions.  This is of interest since configuring for a 2.4.x kernel
&gt; reduces the libc size by about 1%.  This is no high percentage but all
&gt; the code gone is in the by far most often used functions.  The
&gt; compatibility code is needed because of poor design decisions of the
&gt; kernel developers who constantly have to adjust the interface to new
&gt; requirements.  If you never expect to run kernel versions older than
&gt; the one used at compile time of the library it is a good idea to pass
&gt; `--enable-kernel=current' to configure.  But be careful since with an
&gt; older kernel the program won't even start and the whole system might
&gt; be rendered useless (unless backup kernels are available).
&gt; 
&gt; 
&gt; The 2.3.x release should be binary compatible with the 2.2 and earlier
&gt; releases.  All correct programs should continue to run.  This does
&gt; *not* mean that programs compiled on a system running glibc 2.3.x will
&gt; run on systems with only glibc 2.2.  Compatibility is always in one
&gt; direction.  Systems with glibc 2.2 will not even attempt to run
&gt; binaries generated with glibc 2.3.x if this is not possible so there
&gt; is not much to worry about.
&gt; 
&gt; The locale files are now kept in an archive which guarantees much
&gt; faster access.  Startup times of applications using setlocale() are
&gt; significantly improved.  The locale archive is handled by the
&gt; localedef program just like ordinary compilation of locales.  By
&gt; running
&gt; 
&gt; make localedata/install-locales
&gt; 
&gt; it is possible to generate an archive with all locales.
&gt; take a while.  Using the -j option on SMP systems should help.  It is
&gt; most of the time not necessary to install all locales.  Just pick the
&gt; once which the users of the system will want to use.
&gt; 
&gt; 
&gt; There are normally no problems to be expected when compiling code with
&gt; the new glibc version.  In a few cases programs make wrong assumptions
&gt; and the build will suddenly fail (recent example: using CLK_TCK in
&gt; initializers for static or global variables which is wrong since is
&gt; CLK_TCK is not guaranteed to be a constant).  Make sure you review
&gt; the appropriate standards before you claim to have found a bug.
&gt; 
&gt; 
&gt; Problems should all be reported using the `glibcbug' shell script.
&gt; *NEVER* send mail to me and preferably any other developer directly; I
&gt; won't even read it.  Mailing lists are there not only to distribute
&gt; the workload, they also help to archive questions and answers.  this
&gt; script, fill out the information and you are set.  If at the time you
&gt; start the script it complains like this
&gt; 
&gt; /usr/bin/glibcbug: emacs: command not found
&gt; 
&gt; set one of the environment variables EDITOR and VISUAL (this should
&gt; ideally happen on every system automatically):
&gt; 
&gt; env EDITOR=vi glibcbug
&gt; 
&gt; Do this also if you don't want to edit the bug report in Emacs (I
&gt; cannot imagine why not but...)
&gt; 
&gt; Before sending a bug report make sure you have read the BUGS and the
&gt; FAQ files which come with the glibc sources.  You won't even get an
&gt; answer if it is obvious you haven't read these files.  It is also
&gt; helpful to scan the appropriate newsgroups and mailing lists to see
&gt; whether somebody else already had this problem.  There is another
&gt; thing we don't want to hear about: the size.  glibc is big, but this
&gt; is necessary for a multi-platform Unix library.
&gt; 
&gt; In case the bug database is once again offline send the reports to the
&gt; libc-alpha@sources.redhat.com mailing list.
&gt; 
&gt; 
&gt; Responsible for this release are among others:
&gt; 
&gt; Wolfram Gloger
&gt; Bruno Haible
&gt; Isamu Hasegawa
&gt; Andreas Jaeger
&gt; Jakub Jelinek
&gt; Kaz Kojima
&gt; H.J. Lu
&gt; Roland McGrath
&gt; Steven Munroe
&gt; Andreas Schwab
&gt; Franz Sirl
&gt; 
&gt; 
&gt; I want to thank all of them.  Thanks also to the few dedicated
&gt; testers we have:
&gt; 
&gt; Kaoru Fukui
&gt; Jack Howarth
&gt; 
&gt; - -- 
&gt; - --------------.                        ,-.            444 Castro Street
&gt; Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
&gt; Red Hat         `--' drepper at redhat.com `---------------------------
&gt; -----BEGIN PGP SIGNATURE-----
&gt; Version: GnuPG v1.0.7 (GNU/Linux)
&gt; Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
&gt; 
&gt; iD8DBQE9nBd12ijCOnn/RHQRAk6YAKCzhwbMdsXaLo2d42ZCvUyqP9SKzgCgkYtT
&gt; TZrS2FWhkeVCV/WtEFvwaKE=
&gt; =GgNw
&gt; -----END PGP SIGNATURE-----
&gt; 
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021003162237</emailId><senderName>Ulrich Drepper</senderName><senderEmail>drepper@redhat.com</senderEmail><timestampReceived>2002-10-03 16:22:37-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mike Black wrote:

&gt; It appears configure is using prefix /usr/local and spits out a bogus message.

THere is no bogus messages.  Installing in /usr/local does not overwrite
the system's libc and is safe from this perspective.  But gcc handles
/usr/local special which might lead to normal compilations picking the
headers up which might or might not lead to problems.  And /usr/local is
the default prefix because this is what it always is.

- -- 
- --------------.                        ,-.            444 Castro Street
Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
Red Hat         `--' drepper at redhat.com `---------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQE9nG7N2ijCOnn/RHQRAnSbAJ4/nvyFSjpqDjqjwWZvfCnXPt115wCbB473
FZtM68iPti/03fqC28vf5kk=
=UsED
-----END PGP SIGNATURE-----

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021003162623</emailId><senderName>"Mike Black"</senderName><senderEmail>mblack@csi-inc.com</senderEmail><timestampReceived>2002-10-03 16:26:23-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

But configure says NOT to install in /usr/local
FAQ says TO install in /usr/local
Which is it?  Or am I supposed to pick something other than /usr/ or /usr/local now?

----- Original Message ----- 
From: "Ulrich Drepper" &lt;drepper@redhat.com&gt;
To: "Mike Black" &lt;mblack@csi-inc.com&gt;
Cc: &lt;libc-alpha@sources.redhat.com&gt;; &lt;linux-gcc@vger.kernel.org&gt;
Sent: Thursday, October 03, 2002 12:22 PM
Subject: Re: glibc 2.3


&gt; -----BEGIN PGP SIGNED MESSAGE-----
&gt; Hash: SHA1
&gt; 
&gt; Mike Black wrote:
&gt; 
&gt; &gt; It appears configure is using prefix /usr/local and spits out a bogus message.
&gt; 
&gt; THere is no bogus messages.  Installing in /usr/local does not overwrite
&gt; the system's libc and is safe from this perspective.  But gcc handles
&gt; /usr/local special which might lead to normal compilations picking the
&gt; headers up which might or might not lead to problems.  And /usr/local is
&gt; the default prefix because this is what it always is.
&gt; 
&gt; - -- 
&gt; - --------------.                        ,-.            444 Castro Street
&gt; Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
&gt; Red Hat         `--' drepper at redhat.com `---------------------------
&gt; -----BEGIN PGP SIGNATURE-----
&gt; Version: GnuPG v1.0.7 (GNU/Linux)
&gt; Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org
&gt; 
&gt; iD8DBQE9nG7N2ijCOnn/RHQRAnSbAJ4/nvyFSjpqDjqjwWZvfCnXPt115wCbB473
&gt; FZtM68iPti/03fqC28vf5kk=
&gt; =UsED
&gt; -----END PGP SIGNATURE-----
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021003163322</emailId><senderName>Ulrich Drepper</senderName><senderEmail>drepper@redhat.com</senderEmail><timestampReceived>2002-10-03 16:33:22-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Mike Black wrote:
&gt; But configure says NOT to install in /usr/local
&gt; FAQ says TO install in /usr/local
&gt; Which is it?  Or am I supposed to pick something other than /usr/ or /usr/local now?

It depends on what you want.  Using a prefix other than /usr and
/usr/local avoids both problems.

- -- 
- --------------.                        ,-.            444 Castro Street
Ulrich Drepper \    ,-----------------'   \ Mountain View, CA 94041 USA
Red Hat         `--' drepper at redhat.com `---------------------------
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.7 (GNU/Linux)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQE9nHFS2ijCOnn/RHQRAj/eAKCcaX4XZRB951Qsi3FMDKbxLxxemgCfeGU/
J9tUsrW3r9gAa5ZzfTXNLQ0=
=8wHh
-----END PGP SIGNATURE-----

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021005193557</emailId><senderName>Graham Murray</senderName><senderEmail>graham@gmurray.org.uk</senderEmail><timestampReceived>2002-10-05 19:35:57-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

Ulrich Drepper &lt;drepper@redhat.com&gt; writes:


&gt; The 2.3.x release should be binary compatible with the 2.2 and earlier
&gt; releases.  All correct programs should continue to run. 

I have encountered what looks like a binary incompatibility since
upgrading from 2.2.5.

I received the error message "relocation error: symbol
__libc_stack_end, version GLIBC_2.1 not defined in file ld-linux.so.2
with link time reference". This was on a program built from source
using the same gcc3.2 and glibc 2.2.5 (SuSE). Recompiling while
running glibc 2.3 
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021005193926</emailId><senderName>Jakub Jelinek</senderName><senderEmail>jakub@redhat.com</senderEmail><timestampReceived>2002-10-05 19:39:26-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

On Sat, Oct 05, 2002 at 08:35:57PM +0100, Graham Murray wrote:
&gt; Ulrich Drepper &lt;drepper@redhat.com&gt; writes:
&gt; 
&gt; 
&gt; &gt; The 2.3.x release should be binary compatible with the 2.2 and earlier
&gt; &gt; releases.  All correct programs should continue to run. 
&gt; 
&gt; I have encountered what looks like a binary incompatibility since
&gt; upgrading from 2.2.5.
&gt; 
&gt; I received the error message "relocation error: symbol
&gt; __libc_stack_end, version GLIBC_2.1 not defined in file ld-linux.so.2
&gt; with link time reference". This was on a program built from source
&gt; using the same gcc3.2 and glibc 2.2.5 (SuSE). Recompiling while
&gt; running glibc 2.3 

__libc_stack_end is part of glibc private interface, libraries other
then the ones contained in glibc or programs must not use it.
The private interfaces has been moved to GLIBC_PRIVATE symbol version
to catch broken programs/libraries and also to document what is and what
is not considered to be private interface in a clear way.

	Jakub
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021015155723</emailId><senderName>Keld =?iso-8859-1?Q?J=F8rn?= Simonsen</senderName><senderEmail>keld@dkuug.dk</senderEmail><timestampReceived>2002-10-15 15:57:23-0400</timestampReceived><subject>Re: glibc 2.3</subject><body>

On Thu, Oct 03, 2002 at 03:09:57AM -0700, Ulrich Drepper wrote:
&gt; 
&gt; * Contents of the LC_* and LANG environment variables in the CEN style are
&gt;   not recognized anymore.   It never was used.  Change by Ulrich Drepper.

Yes, I can understand it has not really been used. But it is not just
CEN ENV 12005 that has these naming rules, they are also in the ISO Cultural
Registry standard ISO/IEC 15897 (which is a fasttrack of the CEN
prestandard). And it is one of the things that my Unicode collegueges
are asking for in the revision of the ISO 15897 standard, so there must
be something good in it.  Would it be possible to roll this in again?

Best regards
keld
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020912113301</emailId><senderName>"Mike Black"</senderName><senderEmail>mblack@csi-inc.com</senderEmail><timestampReceived>2002-09-12 11:33:01-0400</timestampReceived><subject>Re: Syntax Code Compiled Incorrectly</subject><body>

I can tell you that your program does not compile on gcc 2.95.3
But it does compile on gcc 3.1
I tried checking gcc.gnu.org but my queries would never finish.
I suspect it was a bug that has been fixed.  A google search shows others with the \
same problem up to gcc 3.0.


----- Original Message ----- 
From: "SoloCDM" &lt;deedsmis@aculink.net&gt;
To: "Linux-GCC (Majordomo)" &lt;linux-gcc@vger.kernel.org&gt;
Sent: Wednesday, September 11, 2002 3:39 PM
Subject: Syntax Code Compiled Incorrectly


&gt; Recently I tried to compile sstrcom.cpp with Kernel 2.2.20 on Linux
&gt; Mandrake 8.0.  I used "g++ sstrcom.cpp" and received the following
&gt; errors:
&gt; 
&gt; sstrcom.cpp: In function `int main ()':
&gt; sstrcom.cpp:24: no matching function for call to `basic_string&lt;char, 
&gt; string_char_traits&lt;char&gt;, __default_alloc_template&lt;true, 0&gt; &gt;::compare 
&gt; (int, int, string &amp;, int, int)'
&gt; /usr/include/g++-3/std/bastring.cc:398: candidates are: int 
&gt; basic_string&lt;charT, traits, Allocator&gt;::compare (const 
&gt; basic_string&lt;charT, traits, Allocator&gt; &amp;, unsigned int = 0, unsigned 
&gt; int = basic_string&lt;charT, traits, Allocator&gt;::npos) const [with charT
&gt; = 
&gt; char, traits = string_char_traits&lt;char&gt;, Allocator = 
&gt; __default_alloc_template&lt;true, 0&gt;]
&gt; /usr/include/g++-3/std/bastring.cc:417:                 int 
&gt; basic_string&lt;charT, traits, Allocator&gt;::compare (const charT *, 
&gt; unsigned int, unsigned int) const [with charT = char, traits = 
&gt; string_char_traits&lt;char&gt;, Allocator = __default_alloc_template&lt;true, 
&gt; 0&gt;]
&gt; /usr/include/g++-3/std/bastring.h:402:                 int 
&gt; basic_string&lt;charT, traits, Allocator&gt;::compare (const charT *, 
&gt; unsigned int = 0) const [with charT = char, traits = 
&gt; string_char_traits&lt;char&gt;, Allocator = __default_alloc_template&lt;true, 
&gt; 0&gt;]
&gt; 
&gt; Everything points to "n = susername.compare( 0, 2, saname, 0, 2 );",
&gt; even though the immediate line preceding it doesn't have any errors.
&gt; 
&gt; What is wrong with the attached file?
&gt; 
&gt; The output indicates that a function doesn't exist in &lt;string&gt;; if so,
&gt; what library needs to be included?
&gt; 
&gt; --
&gt; Note: When you reply to this message, please include the mailing
&gt; list and/or newsgroup address and my email address in To:
&gt; 
&gt; *********************************************************************
&gt; Signed,
&gt; SoloCDM


--------------------------------------------------------------------------------


&gt; // sstrcom.cpp
&gt; // Comparing string objects
&gt; #include &lt;iostream&gt;
&gt; #include &lt;string&gt;
&gt; 
&gt; using namespace std;
&gt; 
&gt; /*^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
&gt; int main() {
&gt; 
&gt; string saname = "George", susername;
&gt; 
&gt; std::cout &lt;&lt; "Enter your first name: ";
&gt; cin &gt;&gt; susername;
&gt; 
&gt; if ( susername == saname )
&gt; std::cout &lt;&lt; "Greetings, George\n";
&gt; else if ( susername &lt; saname )
&gt; std::cout &lt;&lt; "You come before George\n";
&gt; else
&gt; std::cout &lt;&lt; "You come after George\n";
&gt; 
&gt; int n = susername.compare( saname );
&gt; n = susername.compare( 0, 2, saname, 0, 2 );
&gt; 
&gt; std::cout &lt;&lt; "The first two letters of your name ";
&gt; 
&gt; if ( n == 0 )
&gt; std::cout &lt;&lt; "match ";
&gt; else if ( n &lt; 0 )
&gt; std::cout &lt;&lt; "come before ";
&gt; else
&gt; std::cout &lt;&lt; "come after ";
&gt; 
&gt; std::cout &lt;&lt; saname.substr( 0, 2 ) &lt;&lt; endl;
&gt; 
&gt; return 0;
&gt; 
&gt; }
&gt; 
&gt; 

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020828210937</emailId><senderName>"Nate"</senderName><senderEmail>nate@uniwest.com</senderEmail><timestampReceived>2002-08-28 21:09:37-0400</timestampReceived><subject>Re: C Language Reference for @ and :</subject><body>

I thought that could be the answer on the bit width issue...

I do not know which compiler was being used but I bet you're right because
this code was to compile for a micro-controller.  So the output was probably
hex code to download onto the chip.  They were probably addresses.

Thank You,

Nate



----- Original Message -----
From: "&lt;Iliyan Malchev&gt;" &lt;ibm@asu.edu&gt;
To: "Nate" &lt;nate@uniwest.com&gt;
Sent: Wednesday, August 28, 2002 2:00 PM
Subject: Re: C Language Reference for @ and :


&gt;
&gt; &gt;
&gt; &gt; I am looking at some C code and I cannot find any language reference as
to
&gt; &gt; what the '@' symbol or token means...
&gt; &gt;
&gt; &gt; For, example, from the header file I am trying to interpret....
&gt; &gt;
&gt; &gt; /////////////////////////////////////////////////////////////////
&gt; &gt; static unsigned char P1 @ 0x90;
&gt; &gt; static unsigned char P2 @ 0xA0;
&gt; &gt; static unsigned char P3 @ 0xB0;
&gt; &gt; /////////////////////////////////////////////////////////////////
&gt; &gt;
&gt;
&gt; The '@' symbol is not standard notation: perhaps the compiler
&gt; you are using has a language extension of some sort.
&gt;
&gt; &gt; /////////////////////////////////////////////////////////////////
&gt; &gt; typedef struct
&gt; &gt; {
&gt; &gt;    unsigned B0:1;
&gt; &gt;    unsigned B1:1;
&gt; &gt;    unsigned B2:1;
&gt; &gt;    unsigned B3:1;
&gt; &gt;    unsigned B4:1;
&gt; &gt;    unsigned B5:1;
&gt; &gt;    unsigned B6:1;
&gt; &gt;    unsigned B7:1;
&gt; &gt; } SFR;
&gt; &gt; /////////////////////////////////////////////////////////////////
&gt;
&gt; The colon defines the width of the respective field in a number of bits
(that
&gt; is, it defined a bit field).  In the example above, you have a structure
where
&gt; each member is one-bit-wide, and the total structure is 8 bits (one
&gt; byte).  Thus if you had the following code:
&gt;
&gt; static SFR val; /* set the structure to all zeroes */
&gt;
&gt; ....
&gt;
&gt; val.B5 = 1; /* set the 5th bit */
&gt; fprintf (stdout, "val: %x\n", (unsigned char)val);
&gt;
&gt; will print out the value
&gt;
&gt; val: 20
&gt;
&gt; (binary 0010 0000, the fifth bit was set).
&gt;
&gt;
&gt;

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020802124741</emailId><senderName>SoloCDM</senderName><senderEmail>deedsmis@aculink.net</senderEmail><timestampReceived>2002-08-02 12:47:41-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

Robert Schiele stated the following:
&gt; 
&gt; On Thu, Aug 01, 2002 at 02:38:32AM -0600, SoloCDM wrote:
&gt;
&gt; &gt; Robert Schiele stated the following:
&gt; &gt;
&gt; &gt; &gt; cout is in libstdc++. So either you have to call "g++ fig01_02.cpp" or
&gt; &gt; &gt; "gcc -lstdc++ fig01_02.cpp".
&gt; &gt;
&gt; &gt; It worked -- Thanks!
&gt; &gt;
&gt; &gt; I couldn't help but notice how g++ linked all the way back to
&gt; &gt; colorgcc.  Although, colorgcc doesn't react like g++.  Colorgcc won't
&gt; &gt; create a.out.
&gt; 
&gt; Sorry, but I cannot see what you wanted to tell us with this
&gt; paragraph.

It starts the linking (ln command) with /usr/bin/g++ --&gt;
/etc/alternatives/g++ --&gt; /usr/bin/colorg++ --&gt; /usr/bin/colorgcc. 
G++ is acting as a link.  If executed in the same manner as g++ to
create an a.out file, without options, colorgcc doesn't execute like
g++.

&gt; &gt; What is gcc used for?  I noticed it seems to have some of the same
&gt; &gt; files or libraries as g++.
&gt; 
&gt; gcc and g++ are the same, but gcc uses C as it's standard language,
&gt; where g++ uses C++ as standard language and links standard C++
&gt; libraries without the need to specify them explicitly.

Is the documentation on my system to know how to use different things
like "-lstdc++" with g++?  What would the files be?  I didn't find
anything in the man page.

-- 
Note: When you reply to this message, please include the mailing
      list and/or newsgroup address and my email address in To:

*********************************************************************
Signed,
SoloCDM-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020802130820</emailId><senderName>Robert Schiele</senderName><senderEmail>rschiele@uni-mannheim.de</senderEmail><timestampReceived>2002-08-02 13:08:20-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

On Fri, Aug 02, 2002 at 06:47:41AM -0600, SoloCDM wrote:
&gt; It starts the linking (ln command) with /usr/bin/g++ --&gt;
&gt; /etc/alternatives/g++ --&gt; /usr/bin/colorg++ --&gt; /usr/bin/colorgcc. 
&gt; G++ is acting as a link.  If executed in the same manner as g++ to
&gt; create an a.out file, without options, colorgcc doesn't execute like
&gt; g++.

What do you have in ~/.colorgccrc?

&gt; Is the documentation on my system to know how to use different things
&gt; like "-lstdc++" with g++?  What would the files be?  I didn't find
&gt; anything in the man page.

Try "info gcc".

Robert

-- 
Robert Schiele			Tel.: +49-621-181-2517
Dipl.-Wirtsch.informatiker	mailto:rschiele@uni-mannheim.de

[Attachment #3 (application/pgp-signature)]
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020802181849</emailId><senderName>SoloCDM</senderName><senderEmail>deedsmis@aculink.net</senderEmail><timestampReceived>2002-08-02 18:18:49-0400</timestampReceived><subject>Re: Mistake With CPP File</subject><body>

Robert Schiele stated the following:
&gt; 
&gt; On Fri, Aug 02, 2002 at 06:47:41AM -0600, SoloCDM wrote:
&gt; 
&gt; &gt; It starts the linking (ln command) with /usr/bin/g++ --&gt;
&gt; &gt; /etc/alternatives/g++ --&gt; /usr/bin/colorg++ --&gt; /usr/bin/colorgcc.
&gt; &gt; G++ is acting as a link.  If executed in the same manner as g++ to
&gt; &gt; create an a.out file, without options, colorgcc doesn't execute like
&gt; &gt; g++.
&gt; 
&gt; What do you have in ~/.colorgccrc?

No such file exists.  Everything for g++ and gcc is exactly as it was
installed.

-- 
Note: When you reply to this message, please include the mailing
      list and/or newsgroup address and my email address in To:

*********************************************************************
Signed,
SoloCDM-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020917175101</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-09-17 17:51:01-0400</timestampReceived><subject>latex problem</subject><body>

Hello all,

It may not be the right place to post this question, but I would like to
give it a try.
So I wanted to install a new package to the latex that I have, it is
latex2e. The package that I tried to install happened to be the color
package. So after creating sty file, I put it in the input directory
which is base. Now, when I include the package in the tex file. It could
not find it. Is there anything else I need to do before using the
package.
Any help is appreciated.

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20021030164212</emailId><senderName>"Sleight of Mind"</senderName><senderEmail>sleight@xs4all.nl</senderEmail><timestampReceived>2002-10-30 16:42:12-0400</timestampReceived><subject>difference between march=athlon-xp and march=athlon-mp</subject><body>

I run a system with 2 AMD Athlon XP CPU's. The XP isn't different from the MP
afaik, but there are 2 different gcc march options for them. Which one should
i use? Or doesn't it matter.

TIA

-- 
Sleight of Mind

&lt;your ad here, if not extending 2 colors&gt;
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020830151246</emailId><senderName>Jim Reimer</senderName><senderEmail>wa5rrh@arrl.net</senderEmail><timestampReceived>2002-08-30 15:12:46-0400</timestampReceived><subject>Re:</subject><body>

Well, I screwed that one up.  Sorry.

On Friday 30 August 2002 10:09 am, you wrote:
&gt; lists
&gt; unsubscribe jdreimer@yahoo.com
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020708082000</emailId><senderName>Mehran Rezaei</senderName><senderEmail>mehran@cs.unt.edu</senderEmail><timestampReceived>2002-07-08 08:20:00-0400</timestampReceived><subject>virus alert (safe to view this email)</subject><body>

Dear friends,

My computer was caught by a very smart virus, which spread itself out to
all the email addresses in my address book. I am sorry for that and
promise to not use Windows any more (I may use it only for presentations
and some other stuff!).

Mehran

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020718190526</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-07-18 19:05:26-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.15 is released</subject><body>

This is the beta release of binutils 2.12.90.0.15 for Linux, which is
based on binutils 2002 0717 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.12.90.0.15 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.14:

1. Update from binutils 2002 0717.
2. Fix an ia64 assembler bug.
3. Fix a symbol versioning bug.
4. You have to apply the modutils patch enclosed here in order to
support System.map generated by the new nm.

Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.15.tar.gz. Source code.
2. binutils-2.12.90.0.14-2.12.90.0.15.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.15-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.15.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
07/17/2002
----
&gt; On Mon, Jul 15, 2002 at 04:35:47PM +0930, Alan Modra wrote:
&gt; &gt; Something you might like to warn about in your next release..
&gt; &gt; 
&gt; &gt; The 2002-07-05 bfd change exposes a bug in modutils.  depmod scans the
&gt; &gt; output of nm for a `?' symbol type when looking for certain symbols.
&gt; &gt; nm used to return `?' for symbols in sections other than some standard
&gt; &gt; sections like .text and .data.  Now, nm returns a better guess as to
&gt; &gt; the symbol type.
&gt; 

No, but it parses System.map, which is generated by nm.  This was in
modutils-2.4.16.  Fix follows.

diff -urp modutils-2.4.16.orig/depmod/depmod.c modutils-2.4.16/depmod/depmod.c
--- modutils-2.4.16.orig/depmod/depmod.c	2002-04-28 17:23:35.000000000 +0930
+++ modutils-2.4.16/depmod/depmod.c	2002-07-15 16:41:20.000000000 +0930
@@ -1060,12 +1060,9 @@ static int addksyms(char *file_syms)
 		if (!isspace(*line))	/* Adressless symbol? */
 			p = strtok(NULL, " \t\n");
 		/* The second word is either the symbol name or a type */
-		if (p &amp;&amp; strlen(p) == 1) { /* System.map */
+		if (p &amp;&amp; p[0] &amp;&amp; !p[1]) { /* System.map */
 			is_mapfile = 1;
-			if (*p != '?')
-				p = NULL;
-			else
-				p = strtok(NULL, " \t\n");
+			p = strtok(NULL, " \t\n");
 		} else { /* /proc/ksyms copy */
 			if (p &amp;&amp; strtok(NULL, " \t\n"))
 				p = NULL;
@@ -1083,7 +1080,7 @@ static int addksyms(char *file_syms)
 			if (!isspace(*line))	/* Adressless symbol? */
 				p = strtok(NULL, " \t\n");
 			if (is_mapfile) {
-				if (*p != '?')
+				if (!p || !p[0] || p[1])
 					continue;
 				p = strtok(NULL, " \t\n");
 				/* Sparc has symbols like '.div' that need to be


-- 
Alan Modra
IBM OzLabs - Linux Technology Centre
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020731103837</emailId><senderName>SoloCDM</senderName><senderEmail>deedsmis@aculink.net</senderEmail><timestampReceived>2002-07-31 10:38:37-0400</timestampReceived><subject>Mistake With CPP File</subject><body>

Recently I tried to compile fig01_02.cpp with Kernel 2.2.20 on Linux
Mandrake 8.0.  I used "gcc fig01_02.cpp" and received the following
errors:

&lt;user_account&gt;/tmp/ccmeDWKS.o: In function `main':
&lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0xf): undefined reference to
`cout'
&lt;user_account&gt;/tmp/ccmeDWKS.o(.text+0x14): undefined reference to
`ostream::operator&lt;&lt;(char const *)'collect2: ld returned 1 exit status

Why didn't it work?

I attached the file in question.

-- 
Note: When you reply to this message, please include the mailing
      list/newsgroup address and my email address in To:.

*********************************************************************
Signed,
SoloCDM
["fig01_02.cpp" (text/plain)]

// Fig. 1.2: fig01_02.cpp
// A first program in C++
#include &lt;iostream.h&gt;

int main()
{
	cout &lt;&lt; "Welcome to C++!\n";

	return 0;   // indicate that program ended successfully
}

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

</body></email><email><emailId>20020731161551</emailId><senderName>Karsten Jeppesen</senderName><senderEmail>kj-list@jeppesens.com</senderEmail><timestampReceived>2002-07-31 16:15:51-0400</timestampReceived><subject>Re: actual memory size</subject><body>

There are a number of possibilities.
Most likely you are looking for:

cat /proc/meminfo

which tells you what the machine itself was told about mem.
You can also use:

top

which amongst other things also gives you the mem info.


Sincerely,

Dr. Karsten Jeppesen
VP of Technology
Total Impact
&lt;kj@totalimpact.com&gt;     Phn: (805) 987-8704     Fax: (805) 484-9469
----------------------------------------------------------------------
Satellite Safety Tip #14:
    If you see a bright streak in the sky coming at you, duck.
----------------------------------------------------------------------




&gt; 
&gt; Hello,
&gt; 
&gt; Is anyone aware of a shell command that tells you the size of physical
&gt; memory used in your computer?
&gt; Any help is appreciated.
&gt; So long,
&gt; 
&gt; Mehran
&gt; 
&gt; -
&gt; To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
&gt; the body of a message to majordomo@vger.kernel.org
&gt; More majordomo info at  http://vger.kernel.org/majordomo-info.html

-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html
</body></email><email><emailId>20020610203652</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-06-10 20:36:52-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.11 is released.</subject><body>

This is the beta release of binutils 2.12.90.0.11 for Linux, which is
based on binutils 2002 0608 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

I am planning to make the public release soon. Please test it as much
as you can.

Please report any bugs related to binutils 2.12.90.0.11 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.11.tar.gz. Source code.
2. binutils-2.12.90.0.9-2.12.90.0.11.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.11-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.11.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
06/10/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020620192249</emailId><senderName>"H . J . Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-06-20 19:22:49-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.12 is released</subject><body>

This is the beta release of binutils 2.12.90.0.12 for Linux, which is
based on binutils 2002 0618 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.12.90.0.12 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.11:
1. Update from binutils 2002 0618.
2. Fix an mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.12.tar.gz. Source code.
2. binutils-2.12.90.0.11-2.12.90.0.12.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.12-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.12.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
06/19/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email><email><emailId>20020628155512</emailId><senderName>"H. J. Lu"</senderName><senderEmail>hjl@lucon.org</senderEmail><timestampReceived>2002-06-28 15:55:12-0400</timestampReceived><subject>The Linux binutils 2.12.90.0.14 is released</subject><body>

This is the beta release of binutils 2.12.90.0.14 for Linux, which is
based on binutils 2002 0627 in CVS on sourecs.redhat.com plus various
changes. It is purely for Linux.

The Linux/mips support is added. You have to use

# rpm --target=[mips|mipsel] -ta binutils-xx.xx.xx.xx.xx.tar.gz

to build it. Or you can read mips/README in the source tree to apply
the mips patches and build it by hand.

FYI, the binutils man pages now are generated from the texinfo files
during the build. As the result, those man pages may be changed for
each build even if you only have done

# ..../configure ...
# make

That means you may have many failures on the man pages when you apply
the binutils diffs next time. Those failures can be safely ignored.
You should remove all those man pages from your source tree by

# find -name *.1 | xargs rm -f
# find -name *.1.rej | xargs rm -f
# find -name *.man | xargs rm -f
# find -name *.man.rej | xargs rm -f

Please report any bugs related to binutils 2.12.90.0.14 to hjl@lucon.org.

For arm-linux targets, there are some important differences in behaviour 
between these tools and binutils 2.9.1.0.x.  The linker emulation name has 
changed from elf32arm{26} to armelf_linux{26}.  Also, the "-p" flag must be 
passed with the linker when working with object files (or static libraries) 
created using older versions of the assembler.  If this flag is omitted the 
linker will silently generate bad output when given old input files.

To get the correct behaviour from gcc, amend the *link section of your specs 
file as follows:

*link:
%{h*} %{version:-v}    %{b} %{Wl,*:%*}    %{static:-Bstatic}    %{shared:-shared}    \
%{symbolic:-Bsymbolic}    %{rdynamic:-export-dynamic}    %{!dynamic-linker: \
-dynamic-linker /lib/ld-linux.so.2}    -X    %{mbig-endian:-EB} %{mapcs-26:-m \
armelf_linux26} %{!mapcs-26:-m armelf_linux} -p


Changes from binutils 2.12.90.0.12:

1. Update from binutils 2002 0627.
2. Fix a linker bug which leads to the incorrect Linux 2.2 kernel.

Changes from binutils 2.12.90.0.11:

1. Update from binutils 2002 0618.
2. Fix a mips assembler bug.

Changes from binutils 2.12.90.0.9:

1. Update from binutils 2002 0608.
2. Fix an ELF/mips SHF_MERGE bug.

Changes from binutils 2.12.90.0.7:

1. Update from binutils 2002 0526.
2. Support "-z muldefs".

Changes from binutils 2.12.90.0.4:

1. Update from binutils 2002 0423.
2. ELF EH frame bug fix.
3. MIPS ELF visibility bug fix.

Changes from binutils 2.12.90.0.3:

1. Update from binutils 2002 0408.
2. Bug fixes for ELF/sparc.
3. Bug fixes for ELF/CRIS.

Changes from binutils 2.12.90.0.1:

1. Update from binutils 2002 0323.
2. Fix linking a.out relocatable files with ELF.
3. Fix a PPC altivec assembler bug.

Changes from binutils 2.11.93.0.2:

1. Update from binutils 2002 0307.
2. Add the .preinit_array/.init_array/.fini_array support.
3. Fix eh_frame.
4. Turn on combreloc by default.
5. Enable gprof for Linux/mips.

Changes from binutils 2.11.92.0.12.3:

1. Update from binutils 2002 0207.
2. Fix a weak symbol alpha linker bug for glibc.
3. More support for gcc 3.1.

Changes from binutils 2.11.92.0.12:

1. Fix a regression in 2.11.92.0.12 when linking with none-ELF object
files.

Changes from binutils 2.11.92.0.10:

1. Update from binutils 2001 1121.
2. Fix a linker symbol version bug for common symbols.
3. Update handling relocations against the discarded sections. You may
need to apply the kernel patch enclosed here to your kernel source. If
you still see things like

drivers/char/char.o(.data+0x46b4): undefined reference to `local symbols in discarded \
section .text.exit'

in the final kernel link, that means you have compiled a driver into
the kernel which has a reference to the symbol in a discarded section.
Kernel 2.4.17 or above should work fine.

4. Support "-march=xxx -mipsN" for mips gas if they are compatible.

Changes from binutils 2.11.92.0.7:

1. Update from binutils 2001 1021.
2. Fix the ELF/PPC linker.
3. Fix the ELF/cris linker.
4. Fix ELF strip.

Changes from binutils 2.11.92.0.5:

1. Update from binutils 2001 1016.
2. Fix all breakages introduced in 2.11.92.0.12.

Changes from binutils 2.11.90.0.31:

1. Update from binutils 2001 1005.
2. Support gcc 3.1 for ia64.
3. Support prelink for ELF/PPC.
4. Fix an ELF/x86 linker bug for Oracle.
5. Fix a weak symbol bug.
6. Support locale.

Changes from binutils 2.11.90.0.29:

1. Update from binutils 2001 0830.
2. Fix a mips linker bug.

Changes from binutils 2.11.90.0.27:

1. Update from binutils 2001 0827.
2. Fix an alpha assembler bug.
3. Fix an ia64 linker bug.
4. Fix a mips linker bug.
5. Support `-z combreloc|nocombreloc' in linker.

Changes from binutils 2.11.90.0.25:

1. Update from binutils 2001 0810.
2. Fix an x86 linker bug.

Changes from binutils 2.11.90.0.24:

1. Update from binutils 2001 0726.
2. Fix an x86 assembler bug.
3. "make check" in the windres test in binutils may call uudecode. We
are working on it.
4. "make check" fails the windres test in binutils if the i386/pe
is enabled in bfd. Fixed in the next release.
5. "make check" has 2 failures in the ld-selective test in ld on
Linux/alpha. They should be marked xfail. Fixed in the next release.

Changes from binutils 2.11.90.0.23:

1. Update from binutils 2001 0714.
2. Fix Sparc/ElF for Linux/sparc.
3. Fix Alpha/ELF for gcc 3.0.

Changes from binutils 2.11.90.0.19:

1. Update from binutils 2001 0706.
2. Fix objcopy/strip broken by accident.
3. Avoid COPY relocs on ia32.
4. Fix the ia64 assembler.
5. This release may not work on Linux/sparc due to the unaligned
relocation changes, which are not handled by all versions of glibc.
The current glibc in CVS on sourceware should be ok. The last known
working binutils for Linux/sparc is 2.11.90.0.8. We are working on it.

Changes from binutils 2.11.90.0.15:

1. Update from binutils 2001 0620.
2. Fix a static linking the PIC object files on ia32.
3. Add the verion script support for --export-dynamic. It can be used
to selectively export dynamic symbols from the executables.

Changes from binutils 2.11.90.0.8:

1. Update from binutils 2001 0610.
2. Fix a gas bug for gcc 3.0.

Changes from binutils 2.11.90.0.7:

1. Update from binutils 2001 0512.
2. Fix some P/III SSE 2 assembler bugs.
3. Fix DT_NEEDED and symbol version bugs.
4. Support hidden versioned symbols in DSOs.

Changes from binutils 2.11.90.0.6:

1. Update from binutils 2001 0427.
2. Fix the -Bsymbolic bug introduced in binutils 2.11.90.0.5.

Changes from binutils 2.11.90.0.5:

1. Update from binutils 2001 0425.
2. Update "ld --multilib-dir PATH".

Changes from binutils 2.11.90.0.4:

1. Update from binutils 2001 0414.
2. Fix an ia64 assembler bug.
3. Change Linux/MIPS to use the SVR4 MIPS ABI instead of the IRIX ABI.
since there are no supports for the IRIX ABI in glibc. The current
Linux/MIPS targets are elf64-tradlittlemips for little endian MIPS
instead of elf32-littlemips and elf64-tradbigmips for big endian MIPS
instead of elf32-bigmips. Glibc, gcc and kernel may have to be modified
for this change. 

Changes from binutils 2.11.90.0.1:

1. Update from binutils 2001 0401.
2. Fix a gas bug for the gcc from the CVS main trunk. It involves some
changes in gas. I compiled kernel 2.2.18, gcc and glibc under
Linux/ia32. The resulting binaries work fine. 
3. Fix the linker core dump on unsupported ELF binaries.

Changes from binutils 2.10.91.0.4:

1. Update from binutils 2001 0309.

Changes from binutils 2.10.91.0.2:

1. Update from binutils 2001 0223.
2. More ia64 bug fixes.

Changes from binutils 2.10.1.0.7:

1. Update from binutils 2001 0215.
2. More ia64 bug fixes. Support EFI and "ld -relax" on ia64.
3. Fix a weak definition, -Bsymbolic, non-PIC bug for ia32.

Changes from binutils 2.10.1.0.4:

1. Update from binutils 2001 0206.
2. Enable the IA64 support.
3. Now you need to use

# ld --oformat TARGET

instead of

# ld -oformat TARGET

The Linux kernel build may be affected. BTW

# ld --oformat TARGET

should work with all previous releases of binutils.

Changes from binutils 2.10.1.0.2:

1. Update from binutils 2000 1221.

Changes from binutils 2.10.0.33:

1. Update from binutils 2000 1119.
2. It has some symbol versioning related updates.

Changes from binutils 2.10.0.32:

1. Update from binutils 2000 1018.
2. A proper ELF/PPC visibility fix.
3. m68k-a.out is supposed to be fixed.

Changes from binutils 2.10.0.31:

1. Update from binutils 2000 1014.
2. An ELF/PPC weak symbol bug fix.
3. A new linkonce section name approach.
4. m68k-a.out is still broken. To be fixed.

Changes from binutils 2.10.0.29:

1. Update from binutils 2000 1011.
2. Back out the linkonce section name change so that C++ will work.
A different approach is being worked on.
3. m68k-a.out is known to be broken. To be fixed.

Changes from binutils 2.10.0.26:

1. Update from binutils 2000 1008.

Changes from binutils 2.10.0.24:

1. Update from binutils 2000 0907.

Changes from binutils 2.10.0.18:

1. Update from binutils 2000 0823. Fix DT_RPATH/DT_RUNPATH handling.
Fix the ELF/ia32 DSO not compiled with PIC.
2. Try to fix the ELF visibility bug on PPC with glibc 2.2.

Changes from binutils 2.10.0.12:

1. Update from binutils 2000 0720.
2. Fix the DT_NEEDED link bug.
3. Add the new DT_XXXX dynamic tags. Glibc 2.2 will use them at least
on libpthread.so.

Changes from binutils 2.10.0.9:

1. Update from binutils 2000 0701. Fix the parallel build in ld when PE
is enabled.

Changes from binutils 2.9.5.0.46:

1. Update from binutils 2000 0617. The demangler support for the new
g++ ABI. Minor fix for the ELF visibility. Fix linking non-ELF
relocatable object files under ELF with symbol versioning.
2. Support for linking PE relocatable object files under ia32/ELF.

Changes from binutils 2.9.5.0.42:

1. Update from binutils 2000 0604. The ELF visibility attribuite should
work correctly now.
2. The ia32 assembler has changed the way it assembles the "jmp"
instructions to the global symbols. The old assembler will optimize the
jump to the global symbol defined in the same source file so that no
relocation will be used. The new assembler will use relocation for
global jumps. It will mainly affect PIC asm code. The segment like

	.globl  __setjmp
__setjmp:
	...
	jmp __sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:

is no longer PIC safe since "jmp __sigsetjmp" jumps to a global symbol
and relocation will be used. Instead, it can be changed to

	.globl  __setjmp
__setjmp:
	...
	jmp sigsetjmp
	...
	.globl __sigsetjmp
__sigsetjmp:
sigsetjmp:

so that "jmp sigsetjmp" jumps to a local symbol and the new assembler
will optimize out the relocation.

Changes from binutils 2.9.5.0.41:

1. Update from binutils 2000 0512.
2. Add testsuite for ELF visibility.

Changes from binutils 2.9.5.0.37:

1. Update from binutils 2000 0502.
2. Support STV_HIDDEN and STV_INTERNAL.

Changes from binutils 2.9.5.0.35:

1. Update from binutils 2000 0418.
2. Fix an ld demangle style option bug.

Changes from binutils 2.9.5.0.34:

1. Update from binutils 2000 0412. Fix a relocation bug which affects
the Linux kernel compilation.
2. An ELF/PPC linker script update.

Changes from binutils 2.9.5.0.33:

1. Update from binutils 2000 0404. Fix the bug report bug.

Changes from binutils 2.9.5.0.32:

1. Update from binutils 2000 0403. Fix the 16bit ia32 assembler bug.

Changes from binutils 2.9.5.0.31:

1. Update from binutils 2000 0331. Fix the Linux/ARM assembler bug.
2. Fix a Debian assembler security bug.

Changes from binutils 2.9.5.0.29:

1. Update from binutils 2000 0319.
2. An ELF/alpha bug is fixed.

Changes from binutils 2.9.5.0.27:

1. Update from binutils 2000 0301.
2. A demangler bug is fixed.
3. A better fix for undefined symbols with -Bsymbolic when building
shared library.

Changes from binutils 2.9.5.0.24:

1. Update from binutils 2000 0204.
2. Added -taso to linker on alpha.
3. Fixed a -shared -Bsymbolic bug when PIC is not used.

Changes from binutils 2.9.5.0.22:

1. Update from binutils 2000 0113.
2. A symbol version bug is fixed.
3. A -Bsymbolic bug is fixed.

Changes from binutils 2.9.5.0.21:

1. Update from binutils 1999 1202.
2. Remove a MIPS/ELF change.
3. Enable SOM for HPPA.

Changes from binutils 2.9.5.0.19:

1. Update from binutils 1999 1122. An ia32 gas bug is fixed.

Changes from binutils 2.9.5.0.16:

1. Update from binutils 1999 1104.
2. i370 is changed to use EM_S370 and ELFOSABI_LINUX. Update readelf.
3. Fix Compaq's demangler support.

Changes from binutils 2.9.5.0.14:

1. Update from binutils 1999 1012. A gas bug which affects Linux 2.3.21
is fixed.
2. i370 update.
3. The new demangler code. You should use "--style=xxx" to select the
demnangle style instead of "--lang=xxx".

Changes from binutils 2.9.5.0.13:

1. Update from binutils 1999 0925.
2. Fix a -s and linker script bug.

Changes from binutils 2.9.5.0.12:

1. Update from binutils 1999 0922.
2. i370 update.

Changes from binutils 2.9.5.0.11:

1. Update from binutils 1999 0910. It fixed a PIC linker bug on ix86
   and sparc introduced in the last release.
2. i370 update.

Changes from binutils 2.9.5.0.10:

1. Update from binutils 1999 0906. It fixed a PIC linker bug on ix86
   and sparc.
2. Remove elf/hppa since it is WIP.

Changes from binutils 2.9.5.0.8:

1. Update from binutils 1999 0831. It allows spaces around '(' and ')'
   in x86 FP register names.

Changes from binutils 2.9.5.0.7:

1. Update from binutils 1999 0821.
2. Some MIPS changes.

Changes from binutils 2.9.5.0.6:

1. Update from binutils 1999 0813.
2. i370 update.

Changes from binutils 2.9.5.0.5:

1. Update from binutils 1999 0809. An ELF/Sparc ld bug is fixed.

Changes from binutils 2.9.5.0.4:

1. Update from binutils 1999 0806. A Solaris/Sparc gas bug is fixed.
2. Remove mips gas patches from binutils 2.9.1.0.25.

Changes from binutils 2.9.5.0.3:

1. Update from binutils 1999 0801.
2. Support for real mode x86 gcc.

Changes from binutils 2.9.4.0.8:

1. Update from binutils 1999 0719. A libc 5 related bug fix.
2. Fix a typo in mips gas.

Changes from binutils 2.9.4.0.7:

1. Update from binutils 1999 0710. A weak symbol bug

http://egcs.cygnus.com/ml/egcs-bugs/1999-07/msg00129.html

is fixed.

Changes from binutils 2.9.4.0.6:

1. Update from binutils 1999 0626.

Changes from binutils 2.9.4.0.5:

1. Update from binutils 1999 0620.
2. Remove my fwait fix and use the one in cvs.
3. Use "--only-section=section" instead of "--extract-section=section".
   for objcopy.

Changes from binutils 2.9.4.0.4:

1. Update from binutils 1999 0612.
2. Remove various temporary fixes of mine since those bugs are fixed
   now.

Changes from binutils 2.9.4.0.3:

1. Update from binutils 1999 0611.
2. Remove my ELF/Alpha bfd changes.
3. Use the local symbol copy fix in binutils 1999 0611.

Changes from binutils 2.9.4.0.2:

1. Update from binutils 1999 0607.
2. Remove my Sparc hacks.
3. Fix local symbol copy.

Changes from binutils 2.9.4.0.1:

1. Update from binutils 1999 0606.
2. Restore relocation overflow checking in binutils 2.9.1.0.25 so that
   Linux kernel can build.
3. Fix i370 for the new gas.

Changes from binutils 1999 0605:

1. Fix a -Bsymbolic bug for Linux/alpha.
2. Add ELF/i370.
3. Fix 8/16-bit relocations for i386.
4. Add --redefine-sym=old_form=new_form to objcopy.
5. Add "-j section" for objcopy.
6. Fix i386 disassembler for fwait.
7. Fix a Sparc asm bug.
8. Add Ada demangle support.
9. Fix MIPS/ELF bugs.
10. Add some vxworks suppport.
11. Fix a.out assembler.

The file list:

1. binutils-2.12.90.0.14.tar.gz. Source code.
2. binutils-2.12.90.0.12-2.12.90.0.14.diff.gz. Patch against the
   previous beta source code.
3. binutils-2.12.90.0.14-1.i386.rpm. IA-32 binary RPM for RedHat 7.3.

There is no separate source rpm. You can do

# rpm -ta binutils-2.12.90.0.14.tar.gz

to create both binary and source rpms.

The primary sites for the beta Linux binutils are:

1. http://ftp.kernel.org/pub/linux/devel/binutils/

Thanks.


H.J. Lu
hjl@lucon.org
06/27/2002
-
To unsubscribe from this list: send the line "unsubscribe linux-gcc" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html


</body></email></emails>